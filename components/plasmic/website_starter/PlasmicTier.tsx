/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7SNMkB8UMukVgcWJYokeAQ
// Component: EiemSs0Lr6oN

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { SideEffect } from "@plasmicpkgs/plasmic-basic-components";

import { useScreenVariants as useScreenVariantsaSuSwU8JUYf } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: aSUSwU8jUYf-/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/projectcss
import sty from "./PlasmicTier.module.css"; // plasmic-import: EiemSs0Lr6oN/css

createPlasmicElementProxy;

export type PlasmicTier__VariantMembers = {};
export type PlasmicTier__VariantsArgs = {};
type VariantPropType = keyof PlasmicTier__VariantsArgs;
export const PlasmicTier__VariantProps = new Array<VariantPropType>();

export type PlasmicTier__ArgsType = {};
type ArgPropType = keyof PlasmicTier__ArgsType;
export const PlasmicTier__ArgProps = new Array<ArgPropType>();

export type PlasmicTier__OverridesType = {
  root?: Flex__<"div">;
  sideEffect?: Flex__<typeof SideEffect>;
};

export interface DefaultTierProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicTier__RenderFunc(props: {
  variants: PlasmicTier__VariantsArgs;
  args: PlasmicTier__ArgsType;
  overrides: PlasmicTier__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const $globalActions = useGlobalActions?.();

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "userType",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsaSuSwU8JUYf()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          {(() => {
            try {
              return $state.userType == "web";
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return true;
              }
              throw e;
            }
          })() ? (
            <div className={classNames(projectcss.all, sty.freeBox__gxyGk)}>
              <div className={classNames(projectcss.all, sty.freeBox__mEp65)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__pxmJ5
                  )}
                >
                  {
                    "\u0622\u06cc\u0627 \u062a\u0648\u06cc \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0648\u06cc\u0644\u0627 \u0645\u062b\u0644 \u062c\u0627\u062c\u06cc\u06af\u0627\u060c \u062c\u0627\u0628\u0627\u0645\u0627\u060c \u0627\u062a\u0627\u0642\u06a9\u060c \u0634\u0628 \u0648 \u06cc\u0627 \u0647\u0648\u0645\u0633\u0627 \u0641\u0639\u0627\u0644 \u0647\u0633\u062a\u06cc\u061f"
                  }
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__aPlBi)}>
                <div className={classNames(projectcss.all, sty.freeBox__y790)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__yySkr)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___2BB22)}
                      displayHeight={"52px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/jajigaWebp.webp",
                        fullWidth: 192,
                        fullHeight: 192,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xiF5G
                      )}
                    >
                      {"\u062c\u0627\u062c\u06cc\u06af\u0627"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__rMT3)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__gMmGk)}
                      displayHeight={"52px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/jabamaWebp.webp",
                        fullWidth: 512,
                        fullHeight: 512,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ymkan
                      )}
                    >
                      {"\u062c\u0627\u0628\u0627\u0645\u0627"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__gjRrw)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__t4ODp)}
                      displayHeight={"52px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image20.svg",
                        fullWidth: 46,
                        fullHeight: 45,
                        aspectRatio: 1.022222
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__t8D2Y
                      )}
                    >
                      {"\u0634\u0628"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__pp4AP)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__mdCdV)}
                      displayHeight={"52px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image13.svg",
                        fullWidth: 46,
                        fullHeight: 46,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__majj
                      )}
                    >
                      {"\u0627\u062a\u0627\u0642\u06a9"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__nhze)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__eQvYx)}
                      displayHeight={"52px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image18.svg",
                        fullWidth: 46,
                        fullHeight: 45,
                        aspectRatio: 1.022222
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vTTbl
                      )}
                    >
                      {"\u0647\u0648\u0645\u0633\u0627"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__mr1Ry)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___0SFyU)}
                      displayHeight={"52px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image68.png",
                        fullWidth: 512,
                        fullHeight: 512,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__o6LD
                      )}
                    >
                      {"\u0645\u0647\u0645\u0627\u0646\u0634\u0648"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___7Y3M)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__tpzPj)}
                      displayHeight={"52px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/mizboonPng.png",
                        fullWidth: 140,
                        fullHeight: 140,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gOeDh
                      )}
                    >
                      {"\u0645\u06cc\u0632\u0628\u0648\u0646"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__mnhb7)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yeFhF
                    )}
                    onClick={async event => {
                      const $steps = {};

                      $steps["invokeGlobalAction"] = true
                        ? (() => {
                            const actionArgs = {
                              args: [
                                "POST",
                                "https://gateway.rentamon.com/webhook/send_user_to_pro_panel"
                              ]
                            };
                            return $globalActions["Fragment.apiRequest"]?.apply(
                              null,
                              [...actionArgs.args]
                            );
                          })()
                        : undefined;
                      if (
                        $steps["invokeGlobalAction"] != null &&
                        typeof $steps["invokeGlobalAction"] === "object" &&
                        typeof $steps["invokeGlobalAction"].then === "function"
                      ) {
                        $steps["invokeGlobalAction"] = await $steps[
                          "invokeGlobalAction"
                        ];
                      }

                      $steps["goToIntro"] = true
                        ? (() => {
                            const actionArgs = {
                              destination: `/intro/${"pro"}`
                            };
                            return (({ destination }) => {
                              if (
                                typeof destination === "string" &&
                                destination.startsWith("#")
                              ) {
                                document
                                  .getElementById(destination.substr(1))
                                  .scrollIntoView({ behavior: "smooth" });
                              } else {
                                __nextRouter?.push(destination);
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["goToIntro"] != null &&
                        typeof $steps["goToIntro"] === "object" &&
                        typeof $steps["goToIntro"].then === "function"
                      ) {
                        $steps["goToIntro"] = await $steps["goToIntro"];
                      }
                    }}
                  >
                    {hasVariant(globalVariants, "screen", "smallMobile")
                      ? "\u0628\u0644\u0647 \u0641\u0639\u0627\u0644 \u0647\u0633\u062a\u0645"
                      : hasVariant(globalVariants, "screen", "mobile")
                      ? "\u0628\u0644\u0647 \u0641\u0639\u0627\u0644 \u0647\u0633\u062a\u0645"
                      : hasVariant(globalVariants, "screen", "tablet")
                      ? "\u0628\u0644\u0647 \u0641\u0639\u0627\u0644 \u0647\u0633\u062a\u0645"
                      : "\u0628\u0644\u0647 \u0641\u0639\u0627\u0644 \u0647\u0633\u062a\u0645"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mUag9
                    )}
                    onClick={async event => {
                      const $steps = {};

                      $steps["goToIntro"] = true
                        ? (() => {
                            const actionArgs = {
                              destination: `/intro/${"lite"}`
                            };
                            return (({ destination }) => {
                              if (
                                typeof destination === "string" &&
                                destination.startsWith("#")
                              ) {
                                document
                                  .getElementById(destination.substr(1))
                                  .scrollIntoView({ behavior: "smooth" });
                              } else {
                                __nextRouter?.push(destination);
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["goToIntro"] != null &&
                        typeof $steps["goToIntro"] === "object" &&
                        typeof $steps["goToIntro"].then === "function"
                      ) {
                        $steps["goToIntro"] = await $steps["goToIntro"];
                      }
                    }}
                  >
                    {hasVariant(globalVariants, "screen", "smallMobile")
                      ? "\u0646\u0647\u060c \u0627\u0644\u0627\u0646 \u0641\u0639\u0627\u0644 \u0646\u06cc\u0633\u062a\u0645"
                      : hasVariant(globalVariants, "screen", "mobile")
                      ? "\u0646\u0647\u060c \u0627\u0644\u0627\u0646 \u0641\u0639\u0627\u0644 \u0646\u06cc\u0633\u062a\u0645"
                      : hasVariant(globalVariants, "screen", "tablet")
                      ? "\u0646\u0647\u060c \u0627\u0644\u0627\u0646 \u0641\u0639\u0627\u0644 \u0646\u06cc\u0633\u062a\u0645"
                      : "\u0646\u0647\u060c \u0627\u0644\u0627\u0646 \u0641\u0639\u0627\u0644 \u0646\u06cc\u0633\u062a\u0645"}
                  </div>
                </Stack__>
              </div>
            </div>
          ) : null}
          {(() => {
            try {
              return $state.userType != "web";
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return true;
              }
              throw e;
            }
          })() ? (
            <div className={classNames(projectcss.all, sty.freeBox___4IUjw)}>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img___7ZmWs)}
                displayHeight={
                  hasVariant(globalVariants, "screen", "smallMobile")
                    ? "34px"
                    : hasVariant(globalVariants, "screen", "mobile")
                    ? "55px"
                    : "76px"
                }
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={
                  "https://web.rentamon.com/wp-content/uploads/2024/03/loading-1.gif"
                }
              />
            </div>
          ) : null}
          <SideEffect
            data-plasmic-name={"sideEffect"}
            data-plasmic-override={overrides.sideEffect}
            className={classNames("__wab_instance", sty.sideEffect)}
            onMount={async () => {
              const $steps = {};

              $steps["invokeGlobalAction"] = true
                ? (() => {
                    const actionArgs = {
                      args: [
                        undefined,
                        "https://gateway.rentamon.com/webhook/get_user_referrer"
                      ]
                    };
                    return $globalActions["Fragment.apiRequest"]?.apply(null, [
                      ...actionArgs.args
                    ]);
                  })()
                : undefined;
              if (
                $steps["invokeGlobalAction"] != null &&
                typeof $steps["invokeGlobalAction"] === "object" &&
                typeof $steps["invokeGlobalAction"].then === "function"
              ) {
                $steps["invokeGlobalAction"] = await $steps[
                  "invokeGlobalAction"
                ];
              }

              $steps["runCode"] = true
                ? (() => {
                    const actionArgs = {
                      customFunction: async () => {
                        return (() => {
                          let user_type =
                            $steps.invokeGlobalAction.data[0].referrer;
                          $state.userType = user_type;
                          console.log($state.userType);
                          if (user_type == "referral") {
                            window.location.href =
                              "https://app.rentamon.com/intro/pro/";
                          }
                          if (user_type == "app_store") {
                            return (window.location.href =
                              "https://app.rentamon.com/intro/lite/");
                          }
                        })();
                      }
                    };
                    return (({ customFunction }) => {
                      return customFunction();
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["runCode"] != null &&
                typeof $steps["runCode"] === "object" &&
                typeof $steps["runCode"].then === "function"
              ) {
                $steps["runCode"] = await $steps["runCode"];
              }
            }}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "sideEffect"],
  sideEffect: ["sideEffect"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  sideEffect: typeof SideEffect;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicTier__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicTier__VariantsArgs;
    args?: PlasmicTier__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicTier__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicTier__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicTier__ArgProps,
          internalVariantPropNames: PlasmicTier__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicTier__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTier";
  } else {
    func.displayName = `PlasmicTier.${nodeName}`;
  }
  return func;
}

export const PlasmicTier = Object.assign(
  // Top-level PlasmicTier renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sideEffect: makeNodeComponent("sideEffect"),

    // Metadata about props expected for PlasmicTier
    internalVariantProps: PlasmicTier__VariantProps,
    internalArgProps: PlasmicTier__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicTier;
/* prettier-ignore-end */
