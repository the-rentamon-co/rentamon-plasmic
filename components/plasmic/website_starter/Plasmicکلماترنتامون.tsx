/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7SNMkB8UMukVgcWJYokeAQ
// Component: cNCII08LGyXG

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { ApiRequest } from "@/fragment/components/api-request"; // plasmic-import: a17-BE4K1UE7/codeComponent
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/styleTokensProvider
import { _useStyleTokens as useStyleTokens_antd_5_hostless } from "../antd_5_hostless/PlasmicStyleTokensProvider"; // plasmic-import: ohDidvG9XsCeFumugENU3J/styleTokensProvider
import { _useStyleTokens as useStyleTokens_plasmic_rich_components } from "../plasmic_rich_components/PlasmicStyleTokensProvider"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/projectcss
import sty from "./Plasmicکلماترنتامون.module.css"; // plasmic-import: cNCII08LGyXG/css

createPlasmicElementProxy;

export type Plasmicکلماترنتامون__VariantMembers = {};
export type Plasmicکلماترنتامون__VariantsArgs = {};
type VariantPropType = keyof Plasmicکلماترنتامون__VariantsArgs;
export const Plasmicکلماترنتامون__VariantProps = new Array<VariantPropType>();

export type Plasmicکلماترنتامون__ArgsType = {};
type ArgPropType = keyof Plasmicکلماترنتامون__ArgsType;
export const Plasmicکلماترنتامون__ArgProps = new Array<ArgPropType>();

export type Plasmicکلماترنتامون__OverridesType = {
  root?: Flex__<"div">;
  title?: Flex__<"div">;
  testWords?: Flex__<"div">;
  apiRequest?: Flex__<typeof ApiRequest>;
};

export interface DefaultکلماترنتامونProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function Plasmicکلماترنتامون__RenderFunc(props: {
  variants: Plasmicکلماترنتامون__VariantsArgs;
  args: Plasmicکلماترنتامون__ArgsType;
  overrides: Plasmicکلماترنتامون__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "apiRequest.data",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "apiRequest"
      },
      {
        path: "apiRequest.error",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "apiRequest"
      },
      {
        path: "apiRequest.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "apiRequest"
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = _useGlobalVariants();
  const styleTokensClassNames = _useStyleTokens();
  const styleTokensClassNames_antd_5_hostless =
    useStyleTokens_antd_5_hostless();
  const styleTokensClassNames_plasmic_rich_components =
    useStyleTokens_plasmic_rich_components();

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            styleTokensClassNames_antd_5_hostless,
            styleTokensClassNames_plasmic_rich_components,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__wmw9N)}>
            <div
              data-plasmic-name={"title"}
              data-plasmic-override={overrides.title}
              className={classNames(projectcss.all, sty.title)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___8ThVq
                )}
              >
                {
                  "\u0628\u0631\u0631\u0633\u06cc \u06a9\u0644\u0645\u0627\u062a \u062f\u0631 \u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646 \u0631\u0646\u062a\u0627\u0645\u0648\u0646"
                }
              </div>
            </div>
            <div
              data-plasmic-name={"testWords"}
              data-plasmic-override={overrides.testWords}
              className={classNames(projectcss.all, sty.testWords)}
            >
              <div className={classNames(projectcss.all, sty.freeBox___8Vamr)}>
                <div className={classNames(projectcss.all, sty.freeBox__zePs)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aMaYl
                    )}
                  >
                    {
                      "\u0646\u0627\u0645 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647:"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jEjCe
                    )}
                  >
                    <React.Fragment>
                      {(() => {
                        try {
                          return $state.apiRequest.data.properties[0]
                            .property_name;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return "";
                          }
                          throw e;
                        }
                      })()}
                    </React.Fragment>
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__xm3XP)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zsllJ
                  )}
                >
                  {"\u062a\u062e\u0641\u06cc\u0641"}
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__oEjO)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aVbhQ
                  )}
                >
                  {"\u06cc\u0627\u062f\u062f\u0627\u0634\u062a"}
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__lkbP6)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vlJml
                  )}
                >
                  {"\u0628\u0633\u062a\u0647"}
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__uMnBx)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rzQnw
                  )}
                >
                  {"\u0631\u0632\u0631\u0648"}
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox___0Kykt)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5N0Sx
                  )}
                >
                  {
                    "\u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647\u200c\u0647\u0627"
                  }
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__iAUr)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hfwma
                  )}
                >
                  {"\u062a\u0648\u0645\u0627\u0646"}
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__w2O7B)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__o1TKn
                  )}
                >
                  {"\u062a\u0627\u06cc\u06cc\u062f"}
                </div>
              </div>
              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : false
              ) ? (
                <div className={classNames(projectcss.all, sty.freeBox__pcIf)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__udmVc
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "\u0628\u0631\u062f\u0627\u0634\u062a"
                      : "\u062a\u0627\u06cc\u06cc\u062f"}
                  </div>
                </div>
              ) : null}
              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : false
              ) ? (
                <div className={classNames(projectcss.all, sty.freeBox__gktQq)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1VFja
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "\u0639\u0648\u062f\u062a \u0648\u062c\u0647"
                      : "\u062a\u0627\u06cc\u06cc\u062f"}
                  </div>
                </div>
              ) : null}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___9XVfr)}>
              <ApiRequest
                data-plasmic-name={"apiRequest"}
                data-plasmic-override={overrides.apiRequest}
                className={classNames("__wab_instance", sty.apiRequest)}
                errorDisplay={null}
                loadingDisplay={null}
                method={"GET"}
                onError={async (...eventArgs: any) => {
                  generateStateOnChangeProp($state, [
                    "apiRequest",
                    "error"
                  ]).apply(null, eventArgs);
                }}
                onLoading={async (...eventArgs: any) => {
                  generateStateOnChangeProp($state, [
                    "apiRequest",
                    "loading"
                  ]).apply(null, eventArgs);
                }}
                onSuccess={async (...eventArgs: any) => {
                  generateStateOnChangeProp($state, [
                    "apiRequest",
                    "data"
                  ]).apply(null, eventArgs);
                }}
                ref={ref => {
                  $refs["apiRequest"] = ref;
                }}
                url={"https://api-v2.rentamon.com/api/user_info?property_id=1"}
              />
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "title", "testWords", "apiRequest"],
  title: ["title"],
  testWords: ["testWords"],
  apiRequest: ["apiRequest"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  title: "div";
  testWords: "div";
  apiRequest: typeof ApiRequest;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmicکلماترنتامون__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmicکلماترنتامون__VariantsArgs;
    args?: Plasmicکلماترنتامون__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmicکلماترنتامون__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<Plasmicکلماترنتامون__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: Plasmicکلماترنتامون__ArgProps,
          internalVariantPropNames: Plasmicکلماترنتامون__VariantProps
        }),
      [props, nodeName]
    );
    return Plasmicکلماترنتامون__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName =
      "Plasmic\u06a9\u0644\u0645\u0627\u062a\u0631\u0646\u062a\u0627\u0645\u0648\u0646";
  } else {
    func.displayName = `Plasmicکلماترنتامون.${nodeName}`;
  }
  return func;
}

export const Plasmicکلماترنتامون = Object.assign(
  // Top-level Plasmicکلماترنتامون renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    title: makeNodeComponent("title"),
    testWords: makeNodeComponent("testWords"),
    apiRequest: makeNodeComponent("apiRequest"),

    // Metadata about props expected for Plasmicکلماترنتامون
    internalVariantProps: Plasmicکلماترنتامون__VariantProps,
    internalArgProps: Plasmicکلماترنتامون__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default Plasmicکلماترنتامون;
/* prettier-ignore-end */
