/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7SNMkB8UMukVgcWJYokeAQ
// Component: rNSSH2xZnrkV

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { useScreenVariants as useScreenVariantsaSuSwU8JUYf } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: aSUSwU8jUYf-/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/projectcss
import sty from "./PlasmicBookings.module.css"; // plasmic-import: rNSSH2xZnrkV/css

createPlasmicElementProxy;

export type PlasmicBookings__VariantMembers = {};
export type PlasmicBookings__VariantsArgs = {};
type VariantPropType = keyof PlasmicBookings__VariantsArgs;
export const PlasmicBookings__VariantProps = new Array<VariantPropType>();

export type PlasmicBookings__ArgsType = {};
type ArgPropType = keyof PlasmicBookings__ArgsType;
export const PlasmicBookings__ArgProps = new Array<ArgPropType>();

export type PlasmicBookings__OverridesType = {
  root?: Flex__<"div">;
  header?: Flex__<"div">;
  returnButton?: Flex__<"div">;
  detail?: Flex__<"div">;
  generalData?: Flex__<"div">;
  smartBooking?: Flex__<"div">;
  data?: Flex__<"div">;
  title?: Flex__<"div">;
  guestInfo?: Flex__<"div">;
  bookInfo?: Flex__<"div">;
  bookInfo2?: Flex__<"div">;
  bookInfo3?: Flex__<"div">;
  bookInfo4?: Flex__<"div">;
  bookInfo5?: Flex__<"div">;
  openAndCloseButton?: Flex__<"div">;
};

export interface DefaultBookingsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicBookings__RenderFunc(props: {
  variants: PlasmicBookings__VariantsArgs;
  args: PlasmicBookings__ArgsType;
  overrides: PlasmicBookings__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "accordionOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsaSuSwU8JUYf()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames(projectcss.all, sty.header)}
          >
            <div
              data-plasmic-name={"returnButton"}
              data-plasmic-override={overrides.returnButton}
              className={classNames(projectcss.all, sty.returnButton)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__a710N)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___9Mfa9)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "33px"
                      : "60px"
                  }
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/website_starter/images/image153.svg",
                    fullWidth: 34,
                    fullHeight: 34,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
            <div
              data-plasmic-name={"detail"}
              data-plasmic-override={overrides.detail}
              className={classNames(projectcss.all, sty.detail)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__iw0Ee)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ao5Xg
                  )}
                >
                  {
                    "\u0633\u0627\u062d\u0644\u06cc \u0645\u0647\u062a\u0627\u0628 \u0637\u0628\u0642\u0647 \u06cc\u06a9"
                  }
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox___6YImL)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__xMpHr)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___3DxSj)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "26px"
                        : "63px"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/image20.svg",
                      fullWidth: 46,
                      fullHeight: 45,
                      aspectRatio: 1.022222
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4Mjlp
                    )}
                  >
                    {"\u0634\u0628"}
                  </div>
                </Stack__>
              </div>
            </div>
          </div>
          <div
            data-plasmic-name={"generalData"}
            data-plasmic-override={overrides.generalData}
            className={classNames(projectcss.all, sty.generalData)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__pxMr9)}>
              <div className={classNames(projectcss.all, sty.freeBox__lRf4L)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lzc9
                  )}
                >
                  {"\u0648\u0631\u0648\u062f:"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1Fev3
                  )}
                >
                  {
                    "\u062f\u0648\u0634\u0646\u0628\u0647 \u06f1\u06f2 \u0645\u0647\u0631"
                  }
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox___8Epy1)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___9XcZ1
                  )}
                >
                  {"\u0648\u0636\u0639\u06cc\u062a:"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ioC76
                  )}
                >
                  {"\u0646\u0647\u0627\u06cc\u06cc \u0634\u062f\u0647"}
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__b98V)}>
              <div className={classNames(projectcss.all, sty.freeBox__hxnJz)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vcEth
                  )}
                >
                  {"\u062e\u0631\u0648\u062c:"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__o9Y4I
                  )}
                >
                  {
                    "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647 \u06f1\u06f4 \u062a\u06cc\u0631"
                  }
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__rBuvx)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__s4KBq
                  )}
                >
                  {"\u06a9\u062f \u0631\u0632\u0631\u0648:"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__eijx
                  )}
                >
                  {"RNT1255483"}
                </div>
              </div>
            </div>
          </div>
          <div
            data-plasmic-name={"smartBooking"}
            data-plasmic-override={overrides.smartBooking}
            className={classNames(projectcss.all, sty.smartBooking)}
          >
            <div
              data-plasmic-name={"data"}
              data-plasmic-override={overrides.data}
              className={classNames(
                projectcss.all,
                sty.data,
                (() => {
                  try {
                    return (() => {})();
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              )}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"title"}
                data-plasmic-override={overrides.title}
                hasGap={true}
                className={classNames(projectcss.all, sty.title)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___3A21E
                  )}
                >
                  {
                    "\u0631\u0632\u0631\u0648 \u0647\u0648\u0634\u0645\u0646\u062f"
                  }
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__bMfM)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/website_starter/images/image155.svg",
                    fullWidth: 27,
                    fullHeight: 26,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
              <div
                data-plasmic-name={"guestInfo"}
                data-plasmic-override={overrides.guestInfo}
                className={classNames(projectcss.all, sty.guestInfo)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__adlWs)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__pkI36)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/image156.svg",
                      fullWidth: 14,
                      fullHeight: 15,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wxoad
                    )}
                  >
                    {
                      "\u06f0\u06f9\u06f1\u06f9\u06f6\u06f5\u06f7\u06f2\u06f2\u06f3\u06f4"
                    }
                  </div>
                </Stack__>
                <div className={classNames(projectcss.all, sty.freeBox__s0ZDt)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__agLat
                    )}
                  >
                    {
                      "\u062e\u0633\u0631\u0648 \u067e\u0627\u0631\u0633\u0627\u06cc\u06cc"
                    }
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"bookInfo"}
                data-plasmic-override={overrides.bookInfo}
                className={classNames(
                  projectcss.all,
                  sty.bookInfo,
                  (() => {
                    try {
                      return $state.accordionOpen
                        ? "display_hidden"
                        : "display_block";
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                )}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__aU2Qf)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aIhhR
                    )}
                  >
                    {
                      "\u062f\u0631\u06cc\u0627\u0641\u062a \u0631\u0632\u0631\u0648:  \u062c\u0645\u0639\u0647 \u06f9 \u062a\u06cc\u0631"
                    }
                  </div>
                </Stack__>
                <div className={classNames(projectcss.all, sty.freeBox__w81Ii)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__oufwt)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__awjXa)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image158.svg",
                        fullWidth: 13,
                        fullHeight: 16,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qgaal
                      )}
                    >
                      {"\u06f2 \u0634\u0628"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___5UCox)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__jioCg)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image157.svg",
                        fullWidth: 14,
                        fullHeight: 14,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pXy5
                      )}
                    >
                      {"5 \u0646\u0641\u0631"}
                    </div>
                  </Stack__>
                </div>
              </div>
              <div
                data-plasmic-name={"bookInfo2"}
                data-plasmic-override={overrides.bookInfo2}
                className={classNames(
                  projectcss.all,
                  sty.bookInfo2,
                  (() => {
                    try {
                      return $state.accordionOpen
                        ? "display_hidden"
                        : "display_block";
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                )}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__d8ITf)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bc7Tf
                    )}
                  >
                    {
                      "\u062f\u0631\u06cc\u0627\u0641\u062a \u0631\u0632\u0631\u0648:  \u062c\u0645\u0639\u0647 \u06f9 \u062a\u06cc\u0631"
                    }
                  </div>
                </Stack__>
                <div className={classNames(projectcss.all, sty.freeBox__n3CAg)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__cbTtt)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__l7X87)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image158.svg",
                        fullWidth: 13,
                        fullHeight: 16,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__k80T3
                      )}
                    >
                      {"\u06f2 \u0634\u0628"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__b0H3N)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__mlcF0)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image157.svg",
                        fullWidth: 14,
                        fullHeight: 14,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q1Tbt
                      )}
                    >
                      {"5 \u0646\u0641\u0631"}
                    </div>
                  </Stack__>
                </div>
              </div>
              <div
                data-plasmic-name={"bookInfo3"}
                data-plasmic-override={overrides.bookInfo3}
                className={classNames(
                  projectcss.all,
                  sty.bookInfo3,
                  (() => {
                    try {
                      return $state.accordionOpen
                        ? "display_hidden"
                        : "display_block";
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                )}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fDlu7)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dgPoa
                    )}
                  >
                    {
                      "\u062f\u0631\u06cc\u0627\u0641\u062a \u0631\u0632\u0631\u0648:  \u062c\u0645\u0639\u0647 \u06f9 \u062a\u06cc\u0631"
                    }
                  </div>
                </Stack__>
                <div className={classNames(projectcss.all, sty.freeBox__rCc6I)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__b2T1S)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__iQ4Bu)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image158.svg",
                        fullWidth: 13,
                        fullHeight: 16,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nSbKb
                      )}
                    >
                      {"\u06f2 \u0634\u0628"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__kffH)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__qx41P)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image157.svg",
                        fullWidth: 14,
                        fullHeight: 14,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6GyPc
                      )}
                    >
                      {"5 \u0646\u0641\u0631"}
                    </div>
                  </Stack__>
                </div>
              </div>
              <div
                data-plasmic-name={"bookInfo4"}
                data-plasmic-override={overrides.bookInfo4}
                className={classNames(projectcss.all, sty.bookInfo4)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__rLZsn)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tdgzg
                    )}
                  >
                    {
                      "\u062f\u0631\u06cc\u0627\u0641\u062a \u0631\u0632\u0631\u0648:  \u062c\u0645\u0639\u0647 \u06f9 \u062a\u06cc\u0631"
                    }
                  </div>
                </Stack__>
                <div className={classNames(projectcss.all, sty.freeBox__yuNmr)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__aLmE4)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__dihO9)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image158.svg",
                        fullWidth: 13,
                        fullHeight: 16,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zKhZm
                      )}
                    >
                      {"\u06f2 \u0634\u0628"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__eb3EI)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__adujx)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image157.svg",
                        fullWidth: 14,
                        fullHeight: 14,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__l1HKf
                      )}
                    >
                      {"5 \u0646\u0641\u0631"}
                    </div>
                  </Stack__>
                </div>
              </div>
              <div
                data-plasmic-name={"bookInfo5"}
                data-plasmic-override={overrides.bookInfo5}
                className={classNames(projectcss.all, sty.bookInfo5)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__oFfw)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yiaF
                    )}
                  >
                    {
                      "\u062f\u0631\u06cc\u0627\u0641\u062a \u0631\u0632\u0631\u0648:  \u062c\u0645\u0639\u0647 \u06f9 \u062a\u06cc\u0631"
                    }
                  </div>
                </Stack__>
                <div
                  className={classNames(projectcss.all, sty.freeBox___90Cmi)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__aMpmz)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__qrk9Z)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image158.svg",
                        fullWidth: 13,
                        fullHeight: 16,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ifmAk
                      )}
                    >
                      {"\u06f2 \u0634\u0628"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__iznGv)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___1B8K)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image157.svg",
                        fullWidth: 14,
                        fullHeight: 14,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pVcZ
                      )}
                    >
                      {"5 \u0646\u0641\u0631"}
                    </div>
                  </Stack__>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"openAndCloseButton"}
              data-plasmic-override={overrides.openAndCloseButton}
              className={classNames(projectcss.all, sty.openAndCloseButton)}
              onClick={async event => {
                const $steps = {};

                $steps["updateAccordionOpen"] = true
                  ? (() => {
                      const actionArgs = {
                        variable: {
                          objRoot: $state,
                          variablePath: ["accordionOpen"]
                        },
                        operation: 4
                      };
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;

                        const oldValue = $stateGet(objRoot, variablePath);
                        $stateSet(objRoot, variablePath, !oldValue);
                        return !oldValue;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateAccordionOpen"] != null &&
                  typeof $steps["updateAccordionOpen"] === "object" &&
                  typeof $steps["updateAccordionOpen"].then === "function"
                ) {
                  $steps["updateAccordionOpen"] = await $steps[
                    "updateAccordionOpen"
                  ];
                }
              }}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(
                  sty.img__rkHvn,
                  (() => {
                    try {
                      return $state.accordionOpen
                        ? ".rotate-normal"
                        : "rotate-flipped";
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                )}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/website_starter/images/image154.svg",
                  fullWidth: 21,
                  fullHeight: 10,
                  aspectRatio: undefined
                }}
              />
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "returnButton",
    "detail",
    "generalData",
    "smartBooking",
    "data",
    "title",
    "guestInfo",
    "bookInfo",
    "bookInfo2",
    "bookInfo3",
    "bookInfo4",
    "bookInfo5",
    "openAndCloseButton"
  ],
  header: ["header", "returnButton", "detail"],
  returnButton: ["returnButton"],
  detail: ["detail"],
  generalData: ["generalData"],
  smartBooking: [
    "smartBooking",
    "data",
    "title",
    "guestInfo",
    "bookInfo",
    "bookInfo2",
    "bookInfo3",
    "bookInfo4",
    "bookInfo5",
    "openAndCloseButton"
  ],
  data: [
    "data",
    "title",
    "guestInfo",
    "bookInfo",
    "bookInfo2",
    "bookInfo3",
    "bookInfo4",
    "bookInfo5"
  ],
  title: ["title"],
  guestInfo: ["guestInfo"],
  bookInfo: ["bookInfo"],
  bookInfo2: ["bookInfo2"],
  bookInfo3: ["bookInfo3"],
  bookInfo4: ["bookInfo4"],
  bookInfo5: ["bookInfo5"],
  openAndCloseButton: ["openAndCloseButton"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: "div";
  returnButton: "div";
  detail: "div";
  generalData: "div";
  smartBooking: "div";
  data: "div";
  title: "div";
  guestInfo: "div";
  bookInfo: "div";
  bookInfo2: "div";
  bookInfo3: "div";
  bookInfo4: "div";
  bookInfo5: "div";
  openAndCloseButton: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBookings__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBookings__VariantsArgs;
    args?: PlasmicBookings__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicBookings__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicBookings__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicBookings__ArgProps,
          internalVariantPropNames: PlasmicBookings__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicBookings__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBookings";
  } else {
    func.displayName = `PlasmicBookings.${nodeName}`;
  }
  return func;
}

export const PlasmicBookings = Object.assign(
  // Top-level PlasmicBookings renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    returnButton: makeNodeComponent("returnButton"),
    detail: makeNodeComponent("detail"),
    generalData: makeNodeComponent("generalData"),
    smartBooking: makeNodeComponent("smartBooking"),
    data: makeNodeComponent("data"),
    title: makeNodeComponent("title"),
    guestInfo: makeNodeComponent("guestInfo"),
    bookInfo: makeNodeComponent("bookInfo"),
    bookInfo2: makeNodeComponent("bookInfo2"),
    bookInfo3: makeNodeComponent("bookInfo3"),
    bookInfo4: makeNodeComponent("bookInfo4"),
    bookInfo5: makeNodeComponent("bookInfo5"),
    openAndCloseButton: makeNodeComponent("openAndCloseButton"),

    // Metadata about props expected for PlasmicBookings
    internalVariantProps: PlasmicBookings__VariantProps,
    internalArgProps: PlasmicBookings__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicBookings;
/* prettier-ignore-end */
