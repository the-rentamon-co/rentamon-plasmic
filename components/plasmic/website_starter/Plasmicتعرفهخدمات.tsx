/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7SNMkB8UMukVgcWJYokeAQ
// Component: 4KhpZ-of93My

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import NavbarRntHeader from "../../NavbarRntHeader"; // plasmic-import: gWac1FMbIJat/component
import Checkbox from "../../Checkbox"; // plasmic-import: kNwK3iA1B39P/component
import { Input } from "@/fragment/components/input"; // plasmic-import: fpBkcjHl6n0Y/codeComponent
import { AntdAccordion } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { accordionHelpers as AntdAccordion_Helpers } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { AntdAccordionItem } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import ClarityRntComponent from "../../ClarityRntComponent"; // plasmic-import: J5D8c7V05ty1/component
import FaviconRntComponent from "../../FaviconRntComponent"; // plasmic-import: 2Chy9NeUIB9Q/component
import RentamonFooter from "../../RentamonFooter"; // plasmic-import: DSdlo5kdtbOe/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/projectcss
import sty from "./Plasmicتعرفهخدمات.module.css"; // plasmic-import: 4KhpZ-of93My/css

createPlasmicElementProxy;

export type Plasmicتعرفهخدمات__VariantMembers = {};
export type Plasmicتعرفهخدمات__VariantsArgs = {};
type VariantPropType = keyof Plasmicتعرفهخدمات__VariantsArgs;
export const Plasmicتعرفهخدمات__VariantProps = new Array<VariantPropType>();

export type Plasmicتعرفهخدمات__ArgsType = {};
type ArgPropType = keyof Plasmicتعرفهخدمات__ArgsType;
export const Plasmicتعرفهخدمات__ArgProps = new Array<ArgPropType>();

export type Plasmicتعرفهخدمات__OverridesType = {
  root?: Flex__<"div">;
  navbarRntHeader?: Flex__<typeof NavbarRntHeader>;
  featuresDesc2?: Flex__<"div">;
  _1stPart?: Flex__<"div">;
  item1?: Flex__<"div">;
  item12?: Flex__<"div">;
  checkbox8?: Flex__<typeof Checkbox>;
  item13?: Flex__<"div">;
  checkbox2?: Flex__<typeof Checkbox>;
  item14?: Flex__<"div">;
  checkbox3?: Flex__<typeof Checkbox>;
  item19?: Flex__<"div">;
  checkbox9?: Flex__<typeof Checkbox>;
  item112?: Flex__<"div">;
  checkbox10?: Flex__<typeof Checkbox>;
  item113?: Flex__<"div">;
  checkbox11?: Flex__<typeof Checkbox>;
  item114?: Flex__<"div">;
  checkbox12?: Flex__<typeof Checkbox>;
  item16?: Flex__<"div">;
  checkbox5?: Flex__<typeof Checkbox>;
  item17?: Flex__<"div">;
  checkbox6?: Flex__<typeof Checkbox>;
  item18?: Flex__<"div">;
  checkbox7?: Flex__<typeof Checkbox>;
  item110?: Flex__<"div">;
  item111?: Flex__<"div">;
  services?: Flex__<"div">;
  calc?: Flex__<"div">;
  input2?: Flex__<typeof Input>;
  valueText?: Flex__<"div">;
  value?: Flex__<"div">;
  toman?: Flex__<"div">;
  commission?: Flex__<"div">;
  cta1st?: Flex__<"div">;
  qA?: Flex__<"div">;
  accordionMain?: Flex__<typeof AntdAccordion>;
  _2?: Flex__<typeof AntdAccordionItem>;
  _1?: Flex__<"div">;
  _4?: Flex__<typeof AntdAccordionItem>;
  _5?: Flex__<typeof AntdAccordionItem>;
  html?: Flex__<"div">;
  goftino?: Flex__<typeof Embed>;
  clarityRntComponent?: Flex__<typeof ClarityRntComponent>;
  faviconRntComponent?: Flex__<typeof FaviconRntComponent>;
  rentamonFooter?: Flex__<typeof RentamonFooter>;
};

export interface DefaultتعرفهخدماتProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function Plasmicتعرفهخدمات__RenderFunc(props: {
  variants: Plasmicتعرفهخدمات__VariantsArgs;
  args: Plasmicتعرفهخدمات__ArgsType;
  overrides: Plasmicتعرفهخدمات__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = _useGlobalVariants();

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "accordionMain.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "tokenResponse",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => ({})
      },
      {
        path: "loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "checkbox8.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => "isChecked"
      },
      {
        path: "checkbox2.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => "isChecked"
      },
      {
        path: "checkbox3.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => "isChecked"
      },
      {
        path: "checkbox9.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => "isChecked"
      },
      {
        path: "checkbox5.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "checkbox6.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "checkbox7.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "checkbox10.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => "isChecked"
      },
      {
        path: "checkbox11.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => "isChecked"
      },
      {
        path: "input2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "checkbox12.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => "isChecked"
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const styleTokensClassNames = _useStyleTokens();

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            sty.root
          )}
        >
          <NavbarRntHeader
            data-plasmic-name={"navbarRntHeader"}
            data-plasmic-override={overrides.navbarRntHeader}
            className={classNames("__wab_instance", sty.navbarRntHeader)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__vzZul)}>
            <div
              data-plasmic-name={"featuresDesc2"}
              data-plasmic-override={overrides.featuresDesc2}
              className={classNames(projectcss.all, sty.featuresDesc2)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qdhY
                )}
              >
                {
                  "\u062a\u0639\u0631\u0641\u0647 \u062e\u062f\u0645\u0627\u062a \u0631\u0646\u062a\u0627\u0645\u0648\u0646"
                }
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__aXfsu
                )}
              >
                {
                  "\u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0627\u0646\u062c\u0627\u0645 \u06a9\u0627\u0631\u0647\u0627\u06cc \u0645\u0631\u0628\u0648\u0637 \u0628\u0647 \u0627\u062f\u0627\u0631\u0647 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u0631\u0648 \u062f\u0647\u200c\u0647\u0627 \u0628\u0631\u0627\u0628\u0631 \u0633\u0627\u062f\u0647\u200c\u062a\u0631 \u0645\u06cc\u200c\u06a9\u0646\u0647\u060c \u062a\u0627 \u0634\u0645\u0627 \u0641\u0631\u0635\u062a \u0628\u06cc\u0634\u062a\u0631\u06cc \u0628\u0631\u0627\u06cc \u0641\u06a9\u0631 \u0648 \u06af\u0633\u062a\u0631\u0634 \u06a9\u0633\u0628\u200c\u0648\u06a9\u0627\u0631 \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc."
                }
              </div>
            </div>
          </div>
          <div
            data-plasmic-name={"_1stPart"}
            data-plasmic-override={overrides._1stPart}
            className={classNames(projectcss.all, sty._1stPart)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__cymqY)}>
              <div
                data-plasmic-name={"item1"}
                data-plasmic-override={overrides.item1}
                className={classNames(projectcss.all, sty.item1)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__lyGYi)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ugVeN
                    )}
                  >
                    {"\u0639\u0646\u0648\u0627\u0646"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__igZQw)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wl24
                    )}
                  >
                    {"\u06a9\u0627\u0631\u0645\u0632\u062f"}
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"item12"}
                data-plasmic-override={overrides.item12}
                className={classNames(projectcss.all, sty.item12)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__hhnFu)}>
                  <Checkbox
                    data-plasmic-name={"checkbox8"}
                    data-plasmic-override={overrides.checkbox8}
                    className={classNames("__wab_instance", sty.checkbox8)}
                    isChecked={
                      generateStateValueProp($state, [
                        "checkbox8",
                        "isChecked"
                      ]) ?? false
                    }
                    isDisabled={true}
                    onChange={async (...eventArgs: any) => {
                      ((...eventArgs) => {
                        generateStateOnChangeProp($state, [
                          "checkbox8",
                          "isChecked"
                        ])(eventArgs[0]);
                      }).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ib7W4
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "smallMobile")
                        ? "\u0645\u0634\u0627\u0647\u062f\u0647\u200c\u06cc \u062a\u0642\u0648\u06cc\u0645 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0631 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u0645\u062e\u062a\u0644\u0641\u060c \u062f\u0631 \u06cc\u06a9 \u062a\u0642\u0648\u06cc\u0645"
                        : "\u0645\u0634\u0627\u0647\u062f\u0647\u200c\u06cc \u0648\u0636\u0639\u06cc\u062a \u062a\u0642\u0648\u06cc\u0645 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0631 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u0645\u062e\u062a\u0644\u0641\u060c \u062f\u0631 \u06cc\u06a9 \u062a\u0642\u0648\u06cc\u0645"}
                    </div>
                  </Checkbox>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__rEEcs)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__d8EzU
                    )}
                  >
                    {"\u0631\u0627\u06cc\u06af\u0627\u0646"}
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"item13"}
                data-plasmic-override={overrides.item13}
                className={classNames(projectcss.all, sty.item13)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__mt55G)}>
                  <Checkbox
                    data-plasmic-name={"checkbox2"}
                    data-plasmic-override={overrides.checkbox2}
                    className={classNames("__wab_instance", sty.checkbox2)}
                    isChecked={
                      generateStateValueProp($state, [
                        "checkbox2",
                        "isChecked"
                      ]) ?? false
                    }
                    isDisabled={true}
                    onChange={async (...eventArgs: any) => {
                      ((...eventArgs) => {
                        generateStateOnChangeProp($state, [
                          "checkbox2",
                          "isChecked"
                        ])(eventArgs[0]);
                      }).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9RMt
                      )}
                    >
                      {
                        "\u062a\u063a\u06cc\u06cc\u0631 \u0642\u06cc\u0645\u062a \u0647\u0645\u0647\u200c\u06cc \u0633\u0627\u06cc\u062a\u200c\u0647\u0627 \u0627\u0632 \u06cc\u06a9 \u062a\u0642\u0648\u06cc\u0645 (\u062f\u0633\u062a\u06cc)"
                      }
                    </div>
                  </Checkbox>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__agWjF)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mGsa5
                    )}
                  >
                    {"\u0631\u0627\u06cc\u06af\u0627\u0646"}
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"item14"}
                data-plasmic-override={overrides.item14}
                className={classNames(projectcss.all, sty.item14)}
              >
                <div className={classNames(projectcss.all, sty.freeBox___39Xj)}>
                  <Checkbox
                    data-plasmic-name={"checkbox3"}
                    data-plasmic-override={overrides.checkbox3}
                    className={classNames("__wab_instance", sty.checkbox3)}
                    isChecked={
                      generateStateValueProp($state, [
                        "checkbox3",
                        "isChecked"
                      ]) ?? false
                    }
                    isDisabled={true}
                    onChange={async (...eventArgs: any) => {
                      ((...eventArgs) => {
                        generateStateOnChangeProp($state, [
                          "checkbox3",
                          "isChecked"
                        ])(eventArgs[0]);
                      }).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__m11Mp
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "smallMobile")
                        ? "\u062a\u063a\u06cc\u06cc\u0631 \u0648\u0636\u0639\u06cc\u062a \u062a\u0642\u0648\u06cc\u0645 \u0647\u0645\u0647\u200c\u06cc \u0633\u0627\u06cc\u062a\u200c\u0647\u0627 \u0627\u0632 \u06cc\u06a9 \u062a\u0642\u0648\u06cc\u0645 (\u062f\u0633\u062a\u06cc)"
                        : "\u062a\u063a\u06cc\u06cc\u0631 \u0648\u0636\u0639\u06cc\u062a \u062a\u0642\u0648\u06cc\u0645 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627 \u0627\u0632 \u06cc\u06a9 \u062a\u0642\u0648\u06cc\u0645 (\u062f\u0633\u062a\u06cc)"}
                    </div>
                  </Checkbox>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__eu95W)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rqTdd
                    )}
                  >
                    {"\u0631\u0627\u06cc\u06af\u0627\u0646"}
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"item19"}
                data-plasmic-override={overrides.item19}
                className={classNames(projectcss.all, sty.item19)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___8LYkq)}
                >
                  <Checkbox
                    data-plasmic-name={"checkbox9"}
                    data-plasmic-override={overrides.checkbox9}
                    className={classNames("__wab_instance", sty.checkbox9)}
                    isChecked={
                      generateStateValueProp($state, [
                        "checkbox9",
                        "isChecked"
                      ]) ?? false
                    }
                    isDisabled={true}
                    onChange={async (...eventArgs: any) => {
                      ((...eventArgs) => {
                        generateStateOnChangeProp($state, [
                          "checkbox9",
                          "isChecked"
                        ])(eventArgs[0]);
                      }).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__v2Dw6
                      )}
                    >
                      {
                        "\u0641\u0639\u0627\u0644\u200c\u0633\u0627\u0632\u06cc \u0631\u0632\u0631\u0648 \u0622\u0646\u06cc \u0633\u0627\u06cc\u062a\u200c\u0647\u0627 \u0627\u0632 \u06cc\u06a9\u062c\u0627"
                      }
                    </div>
                  </Checkbox>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__goJq1)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___35GZu
                    )}
                  >
                    {"\u0631\u0627\u06cc\u06af\u0627\u0646"}
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"item112"}
                data-plasmic-override={overrides.item112}
                className={classNames(projectcss.all, sty.item112)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__dNuO)}>
                  <Checkbox
                    data-plasmic-name={"checkbox10"}
                    data-plasmic-override={overrides.checkbox10}
                    className={classNames("__wab_instance", sty.checkbox10)}
                    isChecked={
                      generateStateValueProp($state, [
                        "checkbox10",
                        "isChecked"
                      ]) ?? false
                    }
                    isDisabled={true}
                    onChange={async (...eventArgs: any) => {
                      ((...eventArgs) => {
                        generateStateOnChangeProp($state, [
                          "checkbox10",
                          "isChecked"
                        ])(eventArgs[0]);
                      }).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lObgb
                      )}
                    >
                      {
                        "\u062b\u0628\u062a \u062f\u0633\u062a\u06cc \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0631\u0632\u0631\u0648\u0647\u0627 \u0648 \u0645\u0647\u0645\u0627\u0646\u200c\u0647\u0627"
                      }
                    </div>
                  </Checkbox>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__booyR)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bFc
                    )}
                  >
                    {"\u0631\u0627\u06cc\u06af\u0627\u0646"}
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"item113"}
                data-plasmic-override={overrides.item113}
                className={classNames(projectcss.all, sty.item113)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___12Lyw)}
                >
                  <Checkbox
                    data-plasmic-name={"checkbox11"}
                    data-plasmic-override={overrides.checkbox11}
                    className={classNames("__wab_instance", sty.checkbox11)}
                    isChecked={
                      generateStateValueProp($state, [
                        "checkbox11",
                        "isChecked"
                      ]) ?? false
                    }
                    isDisabled={true}
                    onChange={async (...eventArgs: any) => {
                      ((...eventArgs) => {
                        generateStateOnChangeProp($state, [
                          "checkbox11",
                          "isChecked"
                        ])(eventArgs[0]);
                      }).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__axLn8
                      )}
                    >
                      {
                        "\u0645\u0634\u0627\u0647\u062f\u0647 \u062a\u0627\u0631\u06cc\u062e\u0686\u0647\u200c\u06cc \u0631\u0632\u0631\u0648\u0647\u0627\u06cc \u06af\u0630\u0634\u062a\u0647 \u0648 \u0631\u0632\u0631\u0648\u0647\u0627\u06cc \u0622\u06cc\u0646\u062f\u0647"
                      }
                    </div>
                  </Checkbox>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__m2K7F)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__q7L9F
                    )}
                  >
                    {"\u0631\u0627\u06cc\u06af\u0627\u0646"}
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"item114"}
                data-plasmic-override={overrides.item114}
                className={classNames(projectcss.all, sty.item114)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___2MZem)}
                >
                  <Checkbox
                    data-plasmic-name={"checkbox12"}
                    data-plasmic-override={overrides.checkbox12}
                    className={classNames("__wab_instance", sty.checkbox12)}
                    isChecked={
                      generateStateValueProp($state, [
                        "checkbox12",
                        "isChecked"
                      ]) ?? false
                    }
                    isDisabled={true}
                    onChange={async (...eventArgs: any) => {
                      ((...eventArgs) => {
                        generateStateOnChangeProp($state, [
                          "checkbox12",
                          "isChecked"
                        ])(eventArgs[0]);
                      }).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9YP10
                      )}
                    >
                      {
                        "\u06cc\u0627\u062f\u062f\u0627\u0634\u062a\u200c\u06af\u0630\u0627\u0631\u06cc \u062f\u0631 \u062a\u0642\u0648\u06cc\u0645"
                      }
                    </div>
                  </Checkbox>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__mnhRn)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fE4A1
                    )}
                  >
                    {"\u0631\u0627\u06cc\u06af\u0627\u0646"}
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"item16"}
                data-plasmic-override={overrides.item16}
                className={classNames(projectcss.all, sty.item16, "clickable")}
              >
                <div className={classNames(projectcss.all, sty.freeBox__gGntv)}>
                  <Checkbox
                    data-plasmic-name={"checkbox5"}
                    data-plasmic-override={overrides.checkbox5}
                    className={classNames("__wab_instance", sty.checkbox5)}
                    isChecked={
                      generateStateValueProp($state, [
                        "checkbox5",
                        "isChecked"
                      ]) ?? false
                    }
                    onChange={async (...eventArgs: any) => {
                      ((...eventArgs) => {
                        generateStateOnChangeProp($state, [
                          "checkbox5",
                          "isChecked"
                        ])(eventArgs[0]);
                      }).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6C64K
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "smallMobile")
                        ? "\u067e\u0631 \u06a9\u0631\u062f\u0646 \u062e\u0648\u062f\u06a9\u0627\u0631 \u062a\u0642\u0648\u06cc\u0645 \u0633\u0627\u06cc\u0631 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u060c \u0628\u0639\u062f \u0627\u0632 \u062f\u0631\u06cc\u0627\u0641\u062a \u0631\u0632\u0631\u0648 \u0627\u0632 \u06cc\u06a9 \u0633\u0627\u06cc\u062a\r"
                        : hasVariant(globalVariants, "screen", "mobile")
                        ? "\u067e\u0631 \u06a9\u0631\u062f\u0646 \u062e\u0648\u062f\u06a9\u0627\u0631 \u062a\u0642\u0648\u06cc\u0645 \u062f\u0631 \u0633\u0627\u06cc\u0631 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u060c \u0628\u0639\u062f \u0627\u0632 \u062f\u0631\u06cc\u0627\u0641\u062a \u0631\u0632\u0631\u0648 \u0627\u0632 \u06cc\u06a9 \u0633\u0627\u06cc\u062a\r"
                        : "\u067e\u0631 \u06a9\u0631\u062f\u0646 \u062e\u0648\u062f\u06a9\u0627\u0631 \u062a\u0642\u0648\u06cc\u0645 \u062f\u0631 \u0633\u0627\u06cc\u0631 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u060c \u0628\u0639\u062f \u0627\u0632 \u062f\u0631\u06cc\u0627\u0641\u062a \u0631\u0632\u0631\u0648 \u0627\u0632 \u06cc\u06a9 \u0633\u0627\u06cc\u062a\r"}
                    </div>
                  </Checkbox>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__vg0Dz)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__afQxa
                    )}
                  >
                    {"\u06f1.\u06f5\u066a"}
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"item17"}
                data-plasmic-override={overrides.item17}
                className={classNames(projectcss.all, sty.item17, "clickable")}
              >
                <div className={classNames(projectcss.all, sty.freeBox__cnbU8)}>
                  <Checkbox
                    data-plasmic-name={"checkbox6"}
                    data-plasmic-override={overrides.checkbox6}
                    className={classNames("__wab_instance", sty.checkbox6)}
                    isChecked={
                      generateStateValueProp($state, [
                        "checkbox6",
                        "isChecked"
                      ]) ?? false
                    }
                    onChange={async (...eventArgs: any) => {
                      ((...eventArgs) => {
                        generateStateOnChangeProp($state, [
                          "checkbox6",
                          "isChecked"
                        ])(eventArgs[0]);
                      }).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sDnda
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "smallMobile") ? (
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 500 }}
                          >
                            {
                              "\u0631\u0632\u0631\u0648 \u0647\u0648\u0634\u0645\u0646\u062f\u00a0"
                            }
                          </span>
                          <React.Fragment>
                            {
                              "\n\u2022 \u062a\u0627\u06cc\u06cc\u062f \u06cc\u0627 \u0631\u062f \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0631\u0632\u0631\u0648 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627 \u062f\u0627\u062e\u0644 \u0631\u0646\u062a\u0627\u0645\u0648\u0646\r\n\u2022 \u0630\u062e\u06cc\u0631\u0647\u200c\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0631\u0632\u0631\u0648 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\r\n\u2022 \u0646\u0645\u0627\u06cc\u0634 \u0622\u062e\u0631\u06cc\u0646 \u0648\u0636\u0639\u06cc\u062a \u00ab\u062a\u0633\u0648\u06cc\u0647 \u062f\u0631\u0622\u0645\u062f\u00bb \u0631\u0632\u0631\u0648 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\r\n\u2022 \u0630\u062e\u06cc\u0631\u0647\u200c\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0634\u0645\u0627\u0631\u0647 \u062a\u0644\u0641\u0646 \u0645\u0647\u0645\u0627\u0646\u0650 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627"
                            }
                          </React.Fragment>
                        </React.Fragment>
                      ) : hasVariant(globalVariants, "screen", "mobile") ? (
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 500 }}
                          >
                            {
                              "\u0631\u0632\u0631\u0648 \u0647\u0648\u0634\u0645\u0646\u062f"
                            }
                          </span>
                          <React.Fragment>
                            {
                              "\n\u2022 \u062a\u0627\u06cc\u06cc\u062f \u06cc\u0627 \u0631\u062f \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0631\u0632\u0631\u0648 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627 \u062f\u0627\u062e\u0644 \u0631\u0646\u062a\u0627\u0645\u0648\u0646\r\n\u2022 \u0630\u062e\u06cc\u0631\u0647\u200c\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0631\u0632\u0631\u0648 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\r\n\u2022 \u0646\u0645\u0627\u06cc\u0634 \u0622\u062e\u0631\u06cc\u0646 \u0648\u0636\u0639\u06cc\u062a \u00ab\u062a\u0633\u0648\u06cc\u0647 \u062f\u0631\u0622\u0645\u062f\u00bb \u0631\u0632\u0631\u0648 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\r\n\u2022 \u0630\u062e\u06cc\u0631\u0647\u200c\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0634\u0645\u0627\u0631\u0647 \u062a\u0644\u0641\u0646 \u0645\u0647\u0645\u0627\u0646\u0650 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627"
                            }
                          </React.Fragment>
                        </React.Fragment>
                      ) : hasVariant(globalVariants, "screen", "tablet") ? (
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 500 }}
                          >
                            {
                              "\u0631\u0632\u0631\u0648 \u0647\u0648\u0634\u0645\u0646\u062f"
                            }
                          </span>
                          <React.Fragment>
                            {
                              "\n- \u0627\u0645\u06a9\u0627\u0646 \u062a\u0627\u06cc\u06cc\u062f \u06cc\u0627 \u0631\u062f \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0631\u0632\u0631\u0648 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627 \u062f\u0627\u062e\u0644 \u0631\u0646\u062a\u0627\u0645\u0648\u0646\r\n- \u0630\u062e\u06cc\u0631\u0647\u200c\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0631\u0632\u0631\u0648 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\r\n- \u0646\u0645\u0627\u06cc\u0634 \u0622\u062e\u0631\u06cc\u0646 \u0648\u0636\u0639\u06cc\u062a \u00ab\u062a\u0633\u0648\u06cc\u0647 \u062f\u0631\u0622\u0645\u062f\u00bb \u0631\u0632\u0631\u0648 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\r\n- \u0630\u062e\u06cc\u0631\u0647\u200c\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0634\u0645\u0627\u0631\u0647 \u062a\u0644\u0641\u0646 \u0645\u0647\u0645\u0627\u0646\u0650 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627"
                            }
                          </React.Fragment>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 500 }}
                          >
                            {
                              "\u0631\u0632\u0631\u0648 \u0647\u0648\u0634\u0645\u0646\u062f"
                            }
                          </span>
                          <React.Fragment>
                            {
                              "\n- \u0627\u0645\u06a9\u0627\u0646 \u062a\u0627\u06cc\u06cc\u062f \u06cc\u0627 \u0631\u062f \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0631\u0632\u0631\u0648 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627 \u062f\u0627\u062e\u0644 \u0631\u0646\u062a\u0627\u0645\u0648\u0646\r\n- \u0630\u062e\u06cc\u0631\u0647\u200c\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0631\u0632\u0631\u0648 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\r\n- \u0646\u0645\u0627\u06cc\u0634 \u0622\u062e\u0631\u06cc\u0646 \u0648\u0636\u0639\u06cc\u062a \u00ab\u062a\u0633\u0648\u06cc\u0647 \u062f\u0631\u0622\u0645\u062f\u00bb \u0631\u0632\u0631\u0648 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\r\n- \u0630\u062e\u06cc\u0631\u0647\u200c\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0634\u0645\u0627\u0631\u0647 \u062a\u0644\u0641\u0646 \u0645\u0647\u0645\u0627\u0646\u0650 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627"
                            }
                          </React.Fragment>
                        </React.Fragment>
                      )}
                    </div>
                  </Checkbox>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__gTkLc)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oenC6
                    )}
                  >
                    {"\u066a \u06f1"}
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"item18"}
                data-plasmic-override={overrides.item18}
                className={classNames(projectcss.all, sty.item18)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__h3Xc)}>
                  <Checkbox
                    data-plasmic-name={"checkbox7"}
                    data-plasmic-override={overrides.checkbox7}
                    className={classNames("__wab_instance", sty.checkbox7)}
                    isChecked={
                      generateStateValueProp($state, [
                        "checkbox7",
                        "isChecked"
                      ]) ?? false
                    }
                    isDisabled={true}
                    onChange={async (...eventArgs: any) => {
                      ((...eventArgs) => {
                        generateStateOnChangeProp($state, [
                          "checkbox7",
                          "isChecked"
                        ])(eventArgs[0]);
                      }).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kKci3
                      )}
                    >
                      {
                        "\u067e\u06cc\u0634\u0646\u0647\u0627\u062f \u0628\u0647\u062a\u0631\u06cc\u0646 \u0642\u06cc\u0645\u062a (\u0628\u0632\u0648\u062f\u06cc)"
                      }
                    </div>
                  </Checkbox>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__rwNDr)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__m6EMr
                    )}
                  >
                    {" "}
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"item110"}
                data-plasmic-override={overrides.item110}
                className={classNames(projectcss.all, sty.item110)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__phAjf
                  )}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return window.open("/new-calendar", "_blank");
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                >
                  {hasVariant(globalVariants, "screen", "smallMobile") ? (
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <ul
                          className={classNames(
                            projectcss.all,
                            projectcss.ul,
                            sty.ul__zcaZ
                          )}
                        >
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__xTups
                            )}
                          >
                            {hasVariant(
                              globalVariants,
                              "screen",
                              "smallMobile"
                            ) ? (
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__h2X6
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__i3DkL
                                      )}
                                    >
                                      {hasVariant(
                                        globalVariants,
                                        "screen",
                                        "smallMobile"
                                      ) ? (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {
                                              "\u06f1\u06f0\u066a \u062a\u062e\u0641\u06cc\u0641 \u0628\u0631\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646\u06cc \u06a9\u0647 "
                                            }
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f5"}
                                          </span>
                                          <React.Fragment>
                                            {" \u0627\u0644\u06cc "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u0646\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      ) : (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {
                                              "\u06f1\u06f0\u066a \u062a\u062e\u0641\u06cc\u0641 \u0628\u0631\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646\u06cc \u06a9\u0647 "
                                            }
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f5"}
                                          </span>
                                          <React.Fragment>
                                            {" \u0627\u0644\u06cc "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u0646\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      )}
                                    </li>
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__x5QaD
                                      )}
                                    >
                                      {hasVariant(
                                        globalVariants,
                                        "screen",
                                        "smallMobile"
                                      ) ? (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {"\u0628\u06cc\u0634 \u0627\u0632 "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u06cc\u062f\u061f \u062a\u0645\u0627\u0633 \u0628\u06af\u06cc\u0631\u06cc\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      ) : (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {"\u0628\u06cc\u0634 \u0627\u0632 "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u06cc\u062f\u061f \u062a\u0645\u0627\u0633 \u0628\u06af\u06cc\u0631\u06cc\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      )}
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            ) : (
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__h2X6
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__i3DkL
                                      )}
                                    >
                                      {hasVariant(
                                        globalVariants,
                                        "screen",
                                        "smallMobile"
                                      ) ? (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {
                                              "\u06f1\u06f0\u066a \u062a\u062e\u0641\u06cc\u0641 \u0628\u0631\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646\u06cc \u06a9\u0647 "
                                            }
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f5"}
                                          </span>
                                          <React.Fragment>
                                            {" \u0627\u0644\u06cc "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u0646\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      ) : (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {
                                              "\u06f1\u06f0\u066a \u062a\u062e\u0641\u06cc\u0641 \u0628\u0631\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646\u06cc \u06a9\u0647 "
                                            }
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f5"}
                                          </span>
                                          <React.Fragment>
                                            {" \u0627\u0644\u06cc "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u0646\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      )}
                                    </li>
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__x5QaD
                                      )}
                                    >
                                      {hasVariant(
                                        globalVariants,
                                        "screen",
                                        "smallMobile"
                                      ) ? (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {"\u0628\u06cc\u0634 \u0627\u0632 "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u06cc\u062f\u061f \u062a\u0645\u0627\u0633 \u0628\u06af\u06cc\u0631\u06cc\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      ) : (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {"\u0628\u06cc\u0634 \u0627\u0632 "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u06cc\u062f\u061f \u062a\u0645\u0627\u0633 \u0628\u06af\u06cc\u0631\u06cc\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      )}
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            )}
                          </li>
                        </ul>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  ) : hasVariant(globalVariants, "screen", "mobile") ? (
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <ul
                          className={classNames(
                            projectcss.all,
                            projectcss.ul,
                            sty.ul__zcaZ
                          )}
                        >
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__xTups
                            )}
                          >
                            {hasVariant(
                              globalVariants,
                              "screen",
                              "smallMobile"
                            ) ? (
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__h2X6
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__i3DkL
                                      )}
                                    >
                                      {hasVariant(
                                        globalVariants,
                                        "screen",
                                        "smallMobile"
                                      ) ? (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {
                                              "\u06f1\u06f0\u066a \u062a\u062e\u0641\u06cc\u0641 \u0628\u0631\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646\u06cc \u06a9\u0647 "
                                            }
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f5"}
                                          </span>
                                          <React.Fragment>
                                            {" \u0627\u0644\u06cc "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u0646\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      ) : (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {
                                              "\u06f1\u06f0\u066a \u062a\u062e\u0641\u06cc\u0641 \u0628\u0631\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646\u06cc \u06a9\u0647 "
                                            }
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f5"}
                                          </span>
                                          <React.Fragment>
                                            {" \u0627\u0644\u06cc "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u0646\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      )}
                                    </li>
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__x5QaD
                                      )}
                                    >
                                      {hasVariant(
                                        globalVariants,
                                        "screen",
                                        "smallMobile"
                                      ) ? (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {"\u0628\u06cc\u0634 \u0627\u0632 "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u06cc\u062f\u061f \u062a\u0645\u0627\u0633 \u0628\u06af\u06cc\u0631\u06cc\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      ) : (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {"\u0628\u06cc\u0634 \u0627\u0632 "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u06cc\u062f\u061f \u062a\u0645\u0627\u0633 \u0628\u06af\u06cc\u0631\u06cc\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      )}
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            ) : (
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__h2X6
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__i3DkL
                                      )}
                                    >
                                      {hasVariant(
                                        globalVariants,
                                        "screen",
                                        "smallMobile"
                                      ) ? (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {
                                              "\u06f1\u06f0\u066a \u062a\u062e\u0641\u06cc\u0641 \u0628\u0631\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646\u06cc \u06a9\u0647 "
                                            }
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f5"}
                                          </span>
                                          <React.Fragment>
                                            {" \u0627\u0644\u06cc "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u0646\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      ) : (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {
                                              "\u06f1\u06f0\u066a \u062a\u062e\u0641\u06cc\u0641 \u0628\u0631\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646\u06cc \u06a9\u0647 "
                                            }
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f5"}
                                          </span>
                                          <React.Fragment>
                                            {" \u0627\u0644\u06cc "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u0646\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      )}
                                    </li>
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__x5QaD
                                      )}
                                    >
                                      {hasVariant(
                                        globalVariants,
                                        "screen",
                                        "smallMobile"
                                      ) ? (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {"\u0628\u06cc\u0634 \u0627\u0632 "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u06cc\u062f\u061f \u062a\u0645\u0627\u0633 \u0628\u06af\u06cc\u0631\u06cc\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      ) : (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {"\u0628\u06cc\u0634 \u0627\u0632 "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u06cc\u062f\u061f \u062a\u0645\u0627\u0633 \u0628\u06af\u06cc\u0631\u06cc\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      )}
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            )}
                          </li>
                        </ul>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  ) : (
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <ul
                          className={classNames(
                            projectcss.all,
                            projectcss.ul,
                            sty.ul__zcaZ
                          )}
                        >
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__xTups
                            )}
                          >
                            {hasVariant(
                              globalVariants,
                              "screen",
                              "smallMobile"
                            ) ? (
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__h2X6
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__i3DkL
                                      )}
                                    >
                                      {hasVariant(
                                        globalVariants,
                                        "screen",
                                        "smallMobile"
                                      ) ? (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {
                                              "\u06f1\u06f0\u066a \u062a\u062e\u0641\u06cc\u0641 \u0628\u0631\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646\u06cc \u06a9\u0647 "
                                            }
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f5"}
                                          </span>
                                          <React.Fragment>
                                            {" \u0627\u0644\u06cc "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u0646\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      ) : (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {
                                              "\u06f1\u06f0\u066a \u062a\u062e\u0641\u06cc\u0641 \u0628\u0631\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646\u06cc \u06a9\u0647 "
                                            }
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f5"}
                                          </span>
                                          <React.Fragment>
                                            {" \u0627\u0644\u06cc "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u0646\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      )}
                                    </li>
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__x5QaD
                                      )}
                                    >
                                      {hasVariant(
                                        globalVariants,
                                        "screen",
                                        "smallMobile"
                                      ) ? (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {"\u0628\u06cc\u0634 \u0627\u0632 "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u06cc\u062f\u061f \u062a\u0645\u0627\u0633 \u0628\u06af\u06cc\u0631\u06cc\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      ) : (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {"\u0628\u06cc\u0634 \u0627\u0632 "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u06cc\u062f\u061f \u062a\u0645\u0627\u0633 \u0628\u06af\u06cc\u0631\u06cc\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      )}
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            ) : (
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                {
                                  <ul
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.ul,
                                      sty.ul__h2X6
                                    )}
                                  >
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__i3DkL
                                      )}
                                    >
                                      {hasVariant(
                                        globalVariants,
                                        "screen",
                                        "smallMobile"
                                      ) ? (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {
                                              "\u06f1\u06f0\u066a \u062a\u062e\u0641\u06cc\u0641 \u0628\u0631\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646\u06cc \u06a9\u0647 "
                                            }
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f5"}
                                          </span>
                                          <React.Fragment>
                                            {" \u0627\u0644\u06cc "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u0646\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      ) : (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {
                                              "\u06f1\u06f0\u066a \u062a\u062e\u0641\u06cc\u0641 \u0628\u0631\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646\u06cc \u06a9\u0647 "
                                            }
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f5"}
                                          </span>
                                          <React.Fragment>
                                            {" \u0627\u0644\u06cc "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u0646\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      )}
                                    </li>
                                    <li
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.li,
                                        projectcss.__wab_text,
                                        sty.li__x5QaD
                                      )}
                                    >
                                      {hasVariant(
                                        globalVariants,
                                        "screen",
                                        "smallMobile"
                                      ) ? (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {"\u0628\u06cc\u0634 \u0627\u0632 "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u06cc\u062f\u061f \u062a\u0645\u0627\u0633 \u0628\u06af\u06cc\u0631\u06cc\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      ) : (
                                        <React.Fragment>
                                          <React.Fragment>
                                            {"\u0628\u06cc\u0634 \u0627\u0632 "}
                                          </React.Fragment>
                                          <span
                                            className={
                                              "plasmic_default__all plasmic_default__span"
                                            }
                                            style={{
                                              textDecorationLine: "underline"
                                            }}
                                          >
                                            {"\u06f1\u06f0"}
                                          </span>
                                          <React.Fragment>
                                            {
                                              " \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0627\u0631\u06cc\u062f\u061f \u062a\u0645\u0627\u0633 \u0628\u06af\u06cc\u0631\u06cc\u062f."
                                            }
                                          </React.Fragment>
                                        </React.Fragment>
                                      )}
                                    </li>
                                  </ul>
                                }
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            )}
                          </li>
                        </ul>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  )}
                </div>
              </div>
              <div
                data-plasmic-name={"item111"}
                data-plasmic-override={overrides.item111}
                className={classNames(projectcss.all, sty.item111)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zSu
                  )}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToFeatures"] = true
                      ? (() => {
                          const actionArgs = { destination: `/features` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToFeatures"] != null &&
                      typeof $steps["goToFeatures"] === "object" &&
                      typeof $steps["goToFeatures"].then === "function"
                    ) {
                      $steps["goToFeatures"] = await $steps["goToFeatures"];
                    }
                  }}
                >
                  {
                    "\u24d8 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0628\u06cc\u0634\u062a\u0631 \u062f\u0631\u0645\u0648\u0631\u062f \u0648\u06cc\u0698\u06af\u06cc\u200c\u0647\u0627"
                  }
                </div>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__y9Qpf)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__iazOe
              )}
            >
              {
                "\u062a\u0627\u0632\u0647 \u0628\u0627 \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0622\u0634\u0646\u0627 \u0634\u062f\u06cc\u061f\n\u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0648\u06cc\u0698\u06af\u06cc\u200c\u0647\u0627\u06cc \u062f\u0627\u0631\u0627\u06cc \u06a9\u0627\u0631\u0645\u0632\u062f\u060c \u0628\u0631\u0627\u06cc \u06f2\u06f0 \u0631\u0632\u0631\u0648 \u0627\u0648\u0644 \u06a9\u0627\u0645\u0644\u0627 \u0631\u0627\u06cc\u06af\u0627\u0646\u0647"
              }
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__mims1)}>
            <div className={classNames(projectcss.all, sty.freeBox__aBc11)}>
              <div
                data-plasmic-name={"services"}
                data-plasmic-override={overrides.services}
                className={classNames(projectcss.all, sty.services)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__n46Kb
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobile")
                    ? "\u062a\u0639\u0631\u0641\u0647 \u062e\u062f\u0645\u0627\u062a \u0631\u0646\u062a\u0627\u0645\u0648\u0646\r"
                    : "\u062a\u0639\u0631\u0641\u0647 \u062e\u062f\u0645\u0627\u062a \u0631\u0646\u062a\u0627\u0645\u0648\u0646\r"}
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__f7F0T)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xlLsX
                    )}
                  >
                    {"\u0627\u0645\u06a9\u0627\u0646\u0627\u062a"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bWyb4
                    )}
                  >
                    {"\u0646\u0633\u062e\u0647 \u067e\u0627\u06cc\u0647"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yyruu
                    )}
                  >
                    {"\u062d\u0631\u0641\u0647\u200c\u0627\u06cc"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__ms7Uo)}
                />

                <div
                  className={classNames(projectcss.all, sty.freeBox___7Y3Ew)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__omlmP
                    )}
                  >
                    {
                      "\u0645\u0634\u0627\u0647\u062f\u0647 \u062a\u0642\u0648\u06cc\u0645"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__h72Jf
                    )}
                  >
                    {"\u2705"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wwjN1
                    )}
                  >
                    {"\u2705"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__wwgr0)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__polq6
                    )}
                  >
                    {
                      "\u067e\u0631 \u0648 \u062e\u0627\u0644\u06cc \u06a9\u0631\u062f\u0646\r\n\r"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___67Ppq
                    )}
                  >
                    {"\u2705"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xsWsf
                    )}
                  >
                    {"\u2705"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___7Tdig)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kHrHq
                    )}
                  >
                    {
                      "\u062a\u063a\u06cc\u06cc\u0631 \u0642\u06cc\u0645\u062a\r"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1Swqw
                    )}
                  >
                    {"\u2705"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___9REjO
                    )}
                  >
                    {"\u2705"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__rka5G)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__m5Uw0
                    )}
                  >
                    {
                      "\u0627\u06cc\u062c\u0627\u062f \u062a\u062e\u0641\u06cc\u0641"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kwVi8
                    )}
                  >
                    {"\u2705"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1BSk6
                    )}
                  >
                    {"\u2705"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__hfXhZ)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wOity
                    )}
                  >
                    {
                      " \u2b50\ufe0f\u0631\u0635\u062f \u06f2\u06f4 \u0633\u0627\u0639\u062a\u0647 \u0631\u0632\u0631\u0648\u0647\u0627\r"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cqpqX
                    )}
                  >
                    {"\u274c\r"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iqv
                    )}
                  >
                    {"\u2705"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__kfh9K)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dCy6
                    )}
                  >
                    {
                      "\u2b50\ufe0f \u067e\u0631\u062f\u0627\u0632\u0634 \u062e\u0648\u062f\u06a9\u0627\u0631 \u0631\u0632\u0631\u0648\u0647\u0627"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__o0Vs2
                    )}
                  >
                    {"\u274c\r"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pdb1G
                    )}
                  >
                    {"\u2705"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__luauY)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mqFjN
                    )}
                  >
                    {
                      "\u2b50\ufe0f \u067e\u0631\u062f\u0627\u0632\u0634 \u062e\u0648\u062f\u06a9\u0627\u0631 \u0644\u063a\u0648\u0647\u0627"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__u0QxV
                    )}
                  >
                    {"\u274c\r"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hslwP
                    )}
                  >
                    {"\u2705"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__zIHc)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zb3RC
                    )}
                  >
                    {
                      "\u2b50\ufe0f \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0639\u0644\u0627\u0645 \u0648\u0636\u0639\u06cc\u062a"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ln48
                    )}
                  >
                    {"\u274c\r"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wlTru
                    )}
                  >
                    {"\u2705"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__fiIgx)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fbZbo
                    )}
                  >
                    {"\u062a\u0639\u0631\u0641\u0647"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2Tp9U
                    )}
                  >
                    {"\u0631\u0627\u06cc\u06af\u0627\u0646"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oiFot
                    )}
                  >
                    {
                      "\r\u0647\u0631 \u0634\u0628 \u0631\u0632\u0631\u0648 \u06f1\u06f5/\u06f0\u06f0\u06f0 \u062a\u0648\u0645\u0627\u0646"
                    }
                  </div>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"calc"}
              data-plasmic-override={overrides.calc}
              className={classNames(projectcss.all, sty.calc)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__yLfyJ)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wAuYg
                  )}
                >
                  {
                    "\u062a\u0623\u062b\u06cc\u0631 \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0628\u0631 \u062f\u0631\u0622\u0645\u062f\u0632\u0627\u06cc\u06cc \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647"
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tbSin
                  )}
                >
                  {
                    "\u0648\u06cc\u0698\u06af\u06cc\u200c\u0647\u0627\u06cc \u0645\u062f\u0646\u0638\u0631\u062a \u0631\u0648 \u062a\u06cc\u06a9 \u0628\u0632\u0646 \u0648 \u0646\u0631\u062e \u0627\u062c\u0627\u0631\u0647 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647\u062a \u0631\u0648 \u0648\u0627\u0631\u062f \u06a9\u0646\u060c \u062a\u0627 \u06cc\u06a9 \u062a\u062e\u0645\u06cc\u0646 \u0627\u0632 \u0627\u0641\u0632\u0627\u06cc\u0634 \u062f\u0631\u0622\u0645\u062f \u0645\u0627\u0647\u0627\u0646\u0647 \u0648 \u06a9\u0627\u0631\u0645\u0632\u062f \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0628\u0628\u06cc\u0646\u06cc. \u0627\u06cc\u0646 \u0645\u062d\u0627\u0633\u0628\u0647\u200c\u06af\u0631\u060c \u0645\u06cc\u0632\u0627\u0646 \u0627\u062b\u0631\u06af\u0630\u0627\u0631\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0628\u0631 \u062f\u0631\u0622\u0645\u062f (\u0646\u0633\u0628\u062a \u0628\u0647 \u0631\u0648\u0634 \u0633\u0646\u062a\u06cc) \u0631\u0648 \u0646\u0634\u0648\u0646 \u0645\u06cc\u200c\u062f\u0647."
                  }
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__jkFhU)}>
                  <Input
                    data-plasmic-name={"input2"}
                    data-plasmic-override={overrides.input2}
                    className={classNames("__wab_instance", sty.input2)}
                    onChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "input2",
                        "value"
                      ]).apply(null, eventArgs);
                    }}
                    placeholder={
                      "\u0642\u06cc\u0645\u062a \u0627\u062c\u0627\u0631\u0647 \u06cc\u06a9 \u0634\u0628 \u0631\u0648 \u0648\u0627\u0631\u062f \u06a9\u0646"
                    }
                    type={"number"}
                    value={generateStateValueProp($state, ["input2", "value"])}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox___0Ck7F)}
                  >
                    <div
                      data-plasmic-name={"valueText"}
                      data-plasmic-override={overrides.valueText}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.valueText
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "smallMobile")
                        ? "\u0631\u0634\u062f \u062f\u0631\u0622\u0645\u062f \u0645\u0627\u0647\u0627\u0646\u0647:"
                        : hasVariant(globalVariants, "screen", "mobile")
                        ? "\u0631\u0634\u062f \u062f\u0631\u0622\u0645\u062f \u0645\u0627\u0647\u0627\u0646\u0647:"
                        : "\u062a\u062e\u0645\u06cc\u0646 \u0631\u0634\u062f \u062f\u0631\u0622\u0645\u062f \u0645\u0627\u0647\u0627\u0646\u0647:"}
                    </div>
                    <div
                      data-plasmic-name={"value"}
                      data-plasmic-override={overrides.value}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.value
                      )}
                    >
                      <React.Fragment>
                        {(() => {
                          try {
                            return $state.input2.value
                              ? `${new Intl.NumberFormat("en-US").format(
                                  Math.round(
                                    ($state.checkbox5.isChecked
                                      ? $state.input2.value * 1.55
                                      : 0) +
                                      ($state.checkbox6.isChecked
                                        ? $state.input2.value * 1.155
                                        : 0) +
                                      ($state.checkbox7.isChecked
                                        ? $state.input2.value * 1.1
                                        : 0) +
                                      $state.input2.value * 1.1
                                  )
                                )} تومان`
                              : null;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return "\\u0627\\u0631\\u0632\\u0634:";
                            }
                            throw e;
                          }
                        })()}
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__iUPtD)}
                  >
                    <div
                      data-plasmic-name={"toman"}
                      data-plasmic-override={overrides.toman}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.toman
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "smallMobile")
                        ? "\u06a9\u0627\u0631\u0645\u0632\u062f \u0628\u0647 \u0627\u0632\u0627\u06cc \u06cc\u06a9 \u0631\u0632\u0631\u0648:"
                        : hasVariant(globalVariants, "screen", "mobile")
                        ? "\u06a9\u0627\u0631\u0645\u0632\u062f \u0628\u0647 \u0627\u0632\u0627\u06cc \u06cc\u06a9 \u0631\u0632\u0631\u0648:"
                        : "\u06a9\u0627\u0631\u0645\u0632\u062f \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0628\u0647 \u0627\u0632\u0627\u06cc \u06cc\u06a9 \u0631\u0632\u0631\u0648:"}
                    </div>
                    <div
                      data-plasmic-name={"commission"}
                      data-plasmic-override={overrides.commission}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.commission
                      )}
                    >
                      <React.Fragment>
                        {(() => {
                          try {
                            return $state.input2.value
                              ? `${new Intl.NumberFormat("en-US").format(
                                  Math.round(
                                    ($state.checkbox5.isChecked
                                      ? $state.input2.value * 0.015
                                      : 0) +
                                      ($state.checkbox6.isChecked
                                        ? $state.input2.value * 0.01
                                        : 0) +
                                      ($state.checkbox7.isChecked
                                        ? $state.input2.value * 0.005
                                        : 0)
                                  )
                                )} تومان`
                              : null;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return "\\u06a9\\u0627\\u0631\\u0645\\u0632\\u062f \\u0631\\u0646\\u062a\\u0627\\u0645\\u0648\\u0646:";
                            }
                            throw e;
                          }
                        })()}
                      </React.Fragment>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"cta1st"}
              data-plasmic-override={overrides.cta1st}
              className={classNames(projectcss.all, sty.cta1st)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___6Zx8G,
                  "clickable"
                )}
                onClick={async event => {
                  const $steps = {};

                  $steps["runCode"] = true
                    ? (() => {
                        const actionArgs = {
                          customFunction: async () => {
                            return (() => {
                              return (window.location.href =
                                "https://sso.rentamon.com/");
                            })();
                          }
                        };
                        return (({ customFunction }) => {
                          return customFunction();
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["runCode"] != null &&
                    typeof $steps["runCode"] === "object" &&
                    typeof $steps["runCode"].then === "function"
                  ) {
                    $steps["runCode"] = await $steps["runCode"];
                  }
                }}
              >
                {hasVariant(globalVariants, "screen", "smallMobile")
                  ? "\u0631\u0627\u06cc\u06af\u0627\u0646 \u0627\u0645\u062a\u062d\u0627\u0646 \u06a9\u0646"
                  : hasVariant(globalVariants, "screen", "mobile")
                  ? "\u0631\u0627\u06cc\u06af\u0627\u0646 \u0627\u0645\u062a\u062d\u0627\u0646 \u06a9\u0646"
                  : hasVariant(globalVariants, "screen", "tablet")
                  ? "\u0631\u0627\u06cc\u06af\u0627\u0646 \u0627\u0645\u062a\u062d\u0627\u0646 \u06a9\u0646"
                  : "\u0631\u0627\u06cc\u06af\u0627\u0646 \u0627\u0645\u062a\u062d\u0627\u0646 \u06a9\u0646"}
              </div>
            </div>
          </div>
          <div
            data-plasmic-name={"qA"}
            data-plasmic-override={overrides.qA}
            className={classNames(projectcss.all, sty.qA)}
          >
            <div className={classNames(projectcss.all, sty.freeBox___7IoCw)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___7W0I
                )}
              >
                {
                  "\u0633\u0648\u0627\u0644\u0627\u062a \u0645\u062a\u062f\u0627\u0648\u0644:\r\n\r"
                }
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__fg00V)}>
                {(() => {
                  const child$Props = {
                    activeKey: generateStateValueProp($state, [
                      "accordionMain",
                      "activePanelId"
                    ]),
                    bordered: true,
                    className: classNames("__wab_instance", sty.accordionMain),
                    ghost: true,
                    items: (
                      <React.Fragment>
                        <AntdAccordionItem
                          data-plasmic-name={"_2"}
                          data-plasmic-override={overrides._2}
                          className={classNames("__wab_instance", sty._2)}
                          id={"11"}
                          label2={
                            <div
                              data-plasmic-name={"_1"}
                              data-plasmic-override={overrides._1}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty._1
                              )}
                            >
                              {
                                "\u0627\u06cc\u0646 \u0645\u0628\u0644\u063a \u0628\u0627\u0628\u062a \u0686\u06cc\u0647\u061f\r"
                              }
                            </div>
                          }
                          showArrow={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zutQs
                            )}
                          >
                            {
                              "\u062f\u0631\u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0627\u0632 \u0648\u06cc\u0698\u06af\u06cc\u200c\u0647\u0627\u06cc \u062f\u0627\u0631\u0627\u06cc \u06a9\u0627\u0631\u0645\u0632\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f\u060c \u062f\u0631 \u0635\u0648\u0631\u062a \u062f\u0631\u06cc\u0627\u0641\u062a \u00ab\u0631\u0632\u0631\u0648 \u0646\u0647\u0627\u06cc\u06cc\u00bb \u0627\u0632 \u0645\u0628\u0644\u063a \u0631\u0632\u0631\u0648 \u062f\u0631\u06cc\u0627\u0641\u062a\u06cc \u06a9\u0627\u0631\u0645\u0632\u062f \u06a9\u0645 \u0645\u06cc\u200c\u0634\u0647.\r\n"
                            }
                          </div>
                        </AntdAccordionItem>
                        <AntdAccordionItem
                          data-plasmic-name={"_4"}
                          data-plasmic-override={overrides._4}
                          className={classNames("__wab_instance", sty._4)}
                          id={"22"}
                          label2={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__rfbRv
                              )}
                            >
                              {
                                "\u0647\u0632\u06cc\u0646\u0647\u200c\u0647\u0627 \u0686\u0637\u0648\u0631 \u0645\u062d\u0627\u0633\u0628\u0647 \u0645\u06cc\u200c\u0634\u0647\u061f\r"
                              }
                            </div>
                          }
                          showArrow={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__udsS1
                            )}
                          >
                            {
                              "\u0637\u0628\u0642 \u062c\u062f\u0648\u0644 \u0628\u0627\u0644\u0627\u060c \u0627\u063a\u0644\u0628 \u0648\u06cc\u0698\u06af\u06cc\u200c\u0647\u0627 \u0631\u0627\u06cc\u06af\u0627\u0646 \u0647\u0633\u062a\u0646 \u0648 \u0628\u062f\u0648\u0646 \u067e\u0631\u062f\u0627\u062e\u062a \u0647\u0632\u06cc\u0646\u0647 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc\u062f \u0627\u0632 \u0627\u0648\u0646\u200c\u0647\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. \u0627\u0645\u0627 \u0628\u0627\u0628\u062a \u0645\u0648\u0627\u0631\u062f\u06cc \u06a9\u0647 \u06a9\u0627\u0631\u0645\u0632\u062f \u062f\u0627\u0631\u0646\u062f\u060c \u0644\u0627\u0632\u0645\u0647 \u0628\u0631 \u0627\u0633\u0627\u0633 \u0645\u0628\u0644\u063a \u0631\u0632\u0631\u0648 \u062f\u0631\u06cc\u0627\u0641\u062a\u06cc\u060c \u06a9\u0627\u0631\u0645\u0632\u062f \u067e\u0631\u062f\u0627\u062e\u062a \u06a9\u0646\u06cc\u062f.\n\n\u0645\u062b\u0627\u0644: \u062f\u0631\u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0648\u06cc\u0698\u06af\u06cc \u00ab\u067e\u0631 \u06a9\u0631\u062f\u0646 \u062e\u0648\u062f\u06a9\u0627\u0631 \u062a\u0642\u0648\u06cc\u0645\u00bb \u0641\u0639\u0627\u0644 \u0628\u0627\u0634\u0647\u060c \u0648 \u06cc\u06a9 \u0631\u0632\u0631\u0648 \u06f2 \u0645\u06cc\u0644\u06cc\u0648\u0646 \u062a\u0648\u0645\u0646\u06cc \u0628\u06af\u06cc\u0631\u06cc\u060c \u06f1/\u06f5 \u062f\u0631\u0635\u062f \u0627\u0632 \u0645\u0628\u0644\u063a \u0631\u0632\u0631\u0648 \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u06a9\u0627\u0631\u0645\u0632\u062f \u0645\u062d\u0627\u0633\u0628\u0647 \u0645\u06cc\u200c\u0634\u0647:\n\u06f3\u06f0,\u06f0\u06f0\u06f0 \u062a\u0648\u0645\u0627\u0646 = \u06f1.\u06f5\u066a \u00d7 \u06f2,\u06f0\u06f0\u06f0,\u06f0\u06f0\u06f0\n\n\r\n\r"
                            }
                          </div>
                        </AntdAccordionItem>
                        <AntdAccordionItem
                          data-plasmic-name={"_5"}
                          data-plasmic-override={overrides._5}
                          className={classNames("__wab_instance", sty._5)}
                          id={"33"}
                          label2={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__aiCrP
                              )}
                            >
                              {
                                "\u0627\u0645\u06a9\u0627\u0646 \u0644\u063a\u0648 \u0639\u0636\u0648\u06cc\u062a \u062f\u0631 \u0628\u0631\u0646\u0627\u0645\u0647 \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0647\u0633\u062a\u061f\r"
                              }
                            </div>
                          }
                          showArrow={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__uGte1
                            )}
                          >
                            {
                              "\u0628\u0644\u0647. \u0645\u0627 \u062a\u0645\u0627\u0645 \u062a\u0644\u0627\u0634\u0645\u0648\u0646 \u0631\u0648 \u0645\u06cc\u200c\u06a9\u0646\u06cc\u0645 \u062a\u0627 \u0647\u0645\u06cc\u0634\u0647 \u0631\u0627\u0636\u06cc \u0628\u0627\u0634\u06cc. \u0648\u0644\u06cc \u0647\u0631 \u0632\u0645\u0627\u0646 \u0648 \u0628\u0647 \u0647\u0631 \u062f\u0644\u06cc\u0644 \u062a\u0645\u0627\u06cc\u0644\u06cc \u0628\u0647 \u0627\u062f\u0627\u0645\u0647\u200c\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0646\u062f\u0627\u0634\u062a\u06cc\u060c \u0639\u0636\u0648\u06cc\u062a \u0644\u063a\u0648 \u0634\u062f\u0647 \u0648 \u06a9\u0644 \u0645\u0648\u062c\u0648\u062f\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0639\u0648\u062f\u062a \u062f\u0627\u062f\u0647 \u0645\u06cc\u200c\u0634\u0647.\n"
                            }
                          </div>
                        </AntdAccordionItem>
                        <AntdAccordionItem
                          className={classNames(
                            "__wab_instance",
                            sty.accordionItem__xiPR
                          )}
                          id={"55"}
                          label2={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jw7R
                              )}
                            >
                              {
                                "\u062f\u0631\u0635\u0648\u0631\u062a \u062e\u0627\u0644\u06cc \u0634\u062f\u0646 \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0686\u06cc \u0645\u06cc\u0634\u0647\u061f\r"
                              }
                            </div>
                          }
                          showArrow={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sso5
                            )}
                          >
                            {
                              "\u062f\u0631\u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0645\u0648\u062c\u0648\u062f\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u00ab\u06a9\u0645\u062a\u0631 \u0627\u0632 \u0645\u0628\u0644\u063a \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632 \u0628\u0631\u0627\u06cc \u067e\u0631\u062f\u0627\u0632\u0634 \u0631\u0632\u0631\u0648\u0647\u0627\u06cc \u062c\u062f\u06cc\u062f\u00bb \u0634\u0645\u0627 \u0628\u0634\u0647\u060c \u0648\u06cc\u0698\u06af\u06cc\u200c\u0647\u0627\u06cc\u06cc \u06a9\u0647 \u062f\u0627\u0631\u0627\u06cc \u06a9\u0627\u0631\u0645\u0632\u062f \u0647\u0633\u062a\u0646\u062f \u063a\u06cc\u0631\u0641\u0639\u0627\u0644 \u0645\u06cc\u200c\u0634\u0646. \u0627\u0645\u0627 \u0648\u06cc\u0698\u06af\u06cc\u200c\u0647\u0627\u06cc \u0631\u0627\u06cc\u06af\u0627\u0646 \u0647\u0645\u0686\u0646\u0627\u0646 \u0642\u0627\u0628\u0644 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0647\u0633\u062a\u0646\u062f.\n"
                            }
                          </div>
                        </AntdAccordionItem>
                        <AntdAccordionItem
                          className={classNames(
                            "__wab_instance",
                            sty.accordionItem__rC7K
                          )}
                          id={"66"}
                          label2={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ggn5
                              )}
                            >
                              {
                                "\u0627\u06af\u0647 \u0631\u0632\u0631\u0648 \u0644\u063a\u0648 \u0628\u0634\u0647\u060c \u06a9\u0627\u0631\u0645\u0632\u062f\u06cc \u06a9\u0647 \u062f\u0627\u062f\u0645 \u0628\u0631\u0645\u06cc\u200c\u06af\u0631\u062f\u0647\u061f"
                              }
                            </div>
                          }
                          showArrow={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bBnnz
                            )}
                          >
                            {
                              "\u0628\u0644\u0647. \u062f\u0631\u0635\u0648\u0631\u062a \u0644\u063a\u0648 \u0634\u062f\u0646 \u0631\u0632\u0631\u0648\u060c \u06a9\u0627\u0631\u0645\u0632\u062f \u067e\u0631\u062f\u0627\u062e\u062a\u06cc \u0628\u0647 \u06a9\u06cc\u0641 \u067e\u0648\u0644\u062a \u0628\u0631\u0645\u06cc\u200c\u06af\u0631\u062f\u0647.\n"
                            }
                          </div>
                        </AntdAccordionItem>
                      </React.Fragment>
                    ),
                    onChange: async (...eventArgs: any) => {
                      generateStateOnChangePropForCodeComponents(
                        $state,
                        "activePanelId",
                        ["accordionMain", "activePanelId"],
                        AntdAccordion_Helpers
                      ).apply(null, eventArgs);
                    }
                  };
                  initializeCodeComponentStates(
                    $state,
                    [
                      {
                        name: "activePanelId",
                        plasmicStateName: "accordionMain.activePanelId"
                      }
                    ],
                    [],
                    AntdAccordion_Helpers ?? {},
                    child$Props
                  );

                  return (
                    <AntdAccordion
                      data-plasmic-name={"accordionMain"}
                      data-plasmic-override={overrides.accordionMain}
                      {...child$Props}
                    />
                  );
                })()}
              </div>
            </div>
            <div
              data-plasmic-name={"html"}
              data-plasmic-override={overrides.html}
              className={classNames(projectcss.all, sty.html)}
            >
              <Embed
                data-plasmic-name={"goftino"}
                data-plasmic-override={overrides.goftino}
                className={classNames("__wab_instance", sty.goftino)}
                code={
                  '<script type="text/javascript">\r\n  !function(){var i="WgsGXv",a=window,d=document;function g(){var g=d.createElement("script"),s="https://www.goftino.com/widget/"+i,l=localStorage.getItem("goftino_"+i);g.async=!0,g.src=l?s+"?o="+l:s;d.getElementsByTagName("head")[0].appendChild(g);}"complete"===d.readyState?g():a.attachEvent?a.attachEvent("onload",g):a.addEventListener("load",g,!1);}();\r\n</script>'
                }
              />

              <ClarityRntComponent
                data-plasmic-name={"clarityRntComponent"}
                data-plasmic-override={overrides.clarityRntComponent}
                className={classNames(
                  "__wab_instance",
                  sty.clarityRntComponent
                )}
              />

              <FaviconRntComponent
                data-plasmic-name={"faviconRntComponent"}
                data-plasmic-override={overrides.faviconRntComponent}
                className={classNames(
                  "__wab_instance",
                  sty.faviconRntComponent
                )}
              />
            </div>
          </div>
          <RentamonFooter
            data-plasmic-name={"rentamonFooter"}
            data-plasmic-override={overrides.rentamonFooter}
            className={classNames("__wab_instance", sty.rentamonFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbarRntHeader",
    "featuresDesc2",
    "_1stPart",
    "item1",
    "item12",
    "checkbox8",
    "item13",
    "checkbox2",
    "item14",
    "checkbox3",
    "item19",
    "checkbox9",
    "item112",
    "checkbox10",
    "item113",
    "checkbox11",
    "item114",
    "checkbox12",
    "item16",
    "checkbox5",
    "item17",
    "checkbox6",
    "item18",
    "checkbox7",
    "item110",
    "item111",
    "services",
    "calc",
    "input2",
    "valueText",
    "value",
    "toman",
    "commission",
    "cta1st",
    "qA",
    "accordionMain",
    "_2",
    "_1",
    "_4",
    "_5",
    "html",
    "goftino",
    "clarityRntComponent",
    "faviconRntComponent",
    "rentamonFooter"
  ],
  navbarRntHeader: ["navbarRntHeader"],
  featuresDesc2: ["featuresDesc2"],
  _1stPart: [
    "_1stPart",
    "item1",
    "item12",
    "checkbox8",
    "item13",
    "checkbox2",
    "item14",
    "checkbox3",
    "item19",
    "checkbox9",
    "item112",
    "checkbox10",
    "item113",
    "checkbox11",
    "item114",
    "checkbox12",
    "item16",
    "checkbox5",
    "item17",
    "checkbox6",
    "item18",
    "checkbox7",
    "item110",
    "item111"
  ],
  item1: ["item1"],
  item12: ["item12", "checkbox8"],
  checkbox8: ["checkbox8"],
  item13: ["item13", "checkbox2"],
  checkbox2: ["checkbox2"],
  item14: ["item14", "checkbox3"],
  checkbox3: ["checkbox3"],
  item19: ["item19", "checkbox9"],
  checkbox9: ["checkbox9"],
  item112: ["item112", "checkbox10"],
  checkbox10: ["checkbox10"],
  item113: ["item113", "checkbox11"],
  checkbox11: ["checkbox11"],
  item114: ["item114", "checkbox12"],
  checkbox12: ["checkbox12"],
  item16: ["item16", "checkbox5"],
  checkbox5: ["checkbox5"],
  item17: ["item17", "checkbox6"],
  checkbox6: ["checkbox6"],
  item18: ["item18", "checkbox7"],
  checkbox7: ["checkbox7"],
  item110: ["item110"],
  item111: ["item111"],
  services: ["services"],
  calc: ["calc", "input2", "valueText", "value", "toman", "commission"],
  input2: ["input2"],
  valueText: ["valueText"],
  value: ["value"],
  toman: ["toman"],
  commission: ["commission"],
  cta1st: ["cta1st"],
  qA: [
    "qA",
    "accordionMain",
    "_2",
    "_1",
    "_4",
    "_5",
    "html",
    "goftino",
    "clarityRntComponent",
    "faviconRntComponent"
  ],
  accordionMain: ["accordionMain", "_2", "_1", "_4", "_5"],
  _2: ["_2", "_1"],
  _1: ["_1"],
  _4: ["_4"],
  _5: ["_5"],
  html: ["html", "goftino", "clarityRntComponent", "faviconRntComponent"],
  goftino: ["goftino"],
  clarityRntComponent: ["clarityRntComponent"],
  faviconRntComponent: ["faviconRntComponent"],
  rentamonFooter: ["rentamonFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbarRntHeader: typeof NavbarRntHeader;
  featuresDesc2: "div";
  _1stPart: "div";
  item1: "div";
  item12: "div";
  checkbox8: typeof Checkbox;
  item13: "div";
  checkbox2: typeof Checkbox;
  item14: "div";
  checkbox3: typeof Checkbox;
  item19: "div";
  checkbox9: typeof Checkbox;
  item112: "div";
  checkbox10: typeof Checkbox;
  item113: "div";
  checkbox11: typeof Checkbox;
  item114: "div";
  checkbox12: typeof Checkbox;
  item16: "div";
  checkbox5: typeof Checkbox;
  item17: "div";
  checkbox6: typeof Checkbox;
  item18: "div";
  checkbox7: typeof Checkbox;
  item110: "div";
  item111: "div";
  services: "div";
  calc: "div";
  input2: typeof Input;
  valueText: "div";
  value: "div";
  toman: "div";
  commission: "div";
  cta1st: "div";
  qA: "div";
  accordionMain: typeof AntdAccordion;
  _2: typeof AntdAccordionItem;
  _1: "div";
  _4: typeof AntdAccordionItem;
  _5: typeof AntdAccordionItem;
  html: "div";
  goftino: typeof Embed;
  clarityRntComponent: typeof ClarityRntComponent;
  faviconRntComponent: typeof FaviconRntComponent;
  rentamonFooter: typeof RentamonFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmicتعرفهخدمات__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmicتعرفهخدمات__VariantsArgs;
    args?: Plasmicتعرفهخدمات__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmicتعرفهخدمات__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<Plasmicتعرفهخدمات__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: Plasmicتعرفهخدمات__ArgProps,
          internalVariantPropNames: Plasmicتعرفهخدمات__VariantProps
        }),
      [props, nodeName]
    );
    return Plasmicتعرفهخدمات__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName =
      "Plasmic\u062a\u0639\u0631\u0641\u0647\u062e\u062f\u0645\u0627\u062a";
  } else {
    func.displayName = `Plasmicتعرفهخدمات.${nodeName}`;
  }
  return func;
}

export const Plasmicتعرفهخدمات = Object.assign(
  // Top-level Plasmicتعرفهخدمات renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbarRntHeader: makeNodeComponent("navbarRntHeader"),
    featuresDesc2: makeNodeComponent("featuresDesc2"),
    _1stPart: makeNodeComponent("_1stPart"),
    item1: makeNodeComponent("item1"),
    item12: makeNodeComponent("item12"),
    checkbox8: makeNodeComponent("checkbox8"),
    item13: makeNodeComponent("item13"),
    checkbox2: makeNodeComponent("checkbox2"),
    item14: makeNodeComponent("item14"),
    checkbox3: makeNodeComponent("checkbox3"),
    item19: makeNodeComponent("item19"),
    checkbox9: makeNodeComponent("checkbox9"),
    item112: makeNodeComponent("item112"),
    checkbox10: makeNodeComponent("checkbox10"),
    item113: makeNodeComponent("item113"),
    checkbox11: makeNodeComponent("checkbox11"),
    item114: makeNodeComponent("item114"),
    checkbox12: makeNodeComponent("checkbox12"),
    item16: makeNodeComponent("item16"),
    checkbox5: makeNodeComponent("checkbox5"),
    item17: makeNodeComponent("item17"),
    checkbox6: makeNodeComponent("checkbox6"),
    item18: makeNodeComponent("item18"),
    checkbox7: makeNodeComponent("checkbox7"),
    item110: makeNodeComponent("item110"),
    item111: makeNodeComponent("item111"),
    services: makeNodeComponent("services"),
    calc: makeNodeComponent("calc"),
    input2: makeNodeComponent("input2"),
    valueText: makeNodeComponent("valueText"),
    value: makeNodeComponent("value"),
    toman: makeNodeComponent("toman"),
    commission: makeNodeComponent("commission"),
    cta1st: makeNodeComponent("cta1st"),
    qA: makeNodeComponent("qA"),
    accordionMain: makeNodeComponent("accordionMain"),
    _2: makeNodeComponent("_2"),
    _1: makeNodeComponent("_1"),
    _4: makeNodeComponent("_4"),
    _5: makeNodeComponent("_5"),
    html: makeNodeComponent("html"),
    goftino: makeNodeComponent("goftino"),
    clarityRntComponent: makeNodeComponent("clarityRntComponent"),
    faviconRntComponent: makeNodeComponent("faviconRntComponent"),
    rentamonFooter: makeNodeComponent("rentamonFooter"),

    // Metadata about props expected for Plasmicتعرفهخدمات
    internalVariantProps: Plasmicتعرفهخدمات__VariantProps,
    internalArgProps: Plasmicتعرفهخدمات__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default Plasmicتعرفهخدمات;
/* prettier-ignore-end */
