// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7SNMkB8UMukVgcWJYokeAQ
// Component: 7qT9iMfa9pib

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import NavbarRentamonComponent from "../../NavbarRentamonComponent"; // plasmic-import: gWac1FMbIJat/component
import { Video } from "@plasmicpkgs/plasmic-basic-components";
import RentamonFooter from "../../RentamonFooter"; // plasmic-import: DSdlo5kdtbOe/component
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import { useScreenVariants as useScreenVariantsaSuSwU8JUYf } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: aSUSwU8jUYf-/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/projectcss
import sty from "./PlasmicIntegrations.module.css"; // plasmic-import: 7qT9iMfa9pib/css

createPlasmicElementProxy;

export type PlasmicIntegrations__VariantMembers = {};
export type PlasmicIntegrations__VariantsArgs = {};
type VariantPropType = keyof PlasmicIntegrations__VariantsArgs;
export const PlasmicIntegrations__VariantProps = new Array<VariantPropType>();

export type PlasmicIntegrations__ArgsType = {};
type ArgPropType = keyof PlasmicIntegrations__ArgsType;
export const PlasmicIntegrations__ArgProps = new Array<ArgPropType>();

export type PlasmicIntegrations__OverridesType = {
  integrations?: Flex__<"div">;
  navbarRentamonComponent?: Flex__<typeof NavbarRentamonComponent>;
  mainContents?: Flex__<"div">;
  introApi?: Flex__<"div">;
  introApiTitle?: Flex__<"div">;
  introApiCaption?: Flex__<"div">;
  platforms?: Flex__<"div">;
  platformsTitle?: Flex__<"div">;
  platformNames4?: Flex__<"div">;
  platformNames5?: Flex__<"div">;
  platformNames6?: Flex__<"div">;
  platformNames?: Flex__<"div">;
  platformNames2?: Flex__<"div">;
  platformNames3?: Flex__<"div">;
  platformNames7?: Flex__<"div">;
  platformNames8?: Flex__<"div">;
  platformNames9?: Flex__<"div">;
  platformNames10?: Flex__<"div">;
  platformNames11?: Flex__<"div">;
  platformNames12?: Flex__<"div">;
  platformNames13?: Flex__<"div">;
  platformNames14?: Flex__<"div">;
  platformNames15?: Flex__<"div">;
  platformNames16?: Flex__<"div">;
  platformNames17?: Flex__<"div">;
  platformNames18?: Flex__<"div">;
  platformNames19?: Flex__<"div">;
  platformNames20?: Flex__<"div">;
  platformNames21?: Flex__<"div">;
  benefits?: Flex__<"div">;
  benefitsTitle?: Flex__<"div">;
  benefitsCaption?: Flex__<"div">;
  ul?: Flex__<"ul">;
  autoSyncGif?: Flex__<"div">;
  htmlVideo?: Flex__<typeof Video>;
  bot?: Flex__<"div">;
  more?: Flex__<"div">;
  moreDecs?: Flex__<"div">;
  screenshot?: Flex__<"div">;
  apiAccess?: Flex__<"div">;
  apidog?: Flex__<"div">;
  requestDemo?: Flex__<"div">;
  rentamonFooter?: Flex__<typeof RentamonFooter>;
};

export interface DefaultIntegrationsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicIntegrations__RenderFunc(props: {
  variants: PlasmicIntegrations__VariantsArgs;
  args: PlasmicIntegrations__ArgsType;
  overrides: PlasmicIntegrations__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "propertyId",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsaSuSwU8JUYf()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicIntegrations.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicIntegrations.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicIntegrations.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"integrations"}
          data-plasmic-override={overrides.integrations}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.integrations
          )}
        >
          <NavbarRentamonComponent
            data-plasmic-name={"navbarRentamonComponent"}
            data-plasmic-override={overrides.navbarRentamonComponent}
            className={classNames(
              "__wab_instance",
              sty.navbarRentamonComponent
            )}
          />

          <div
            data-plasmic-name={"mainContents"}
            data-plasmic-override={overrides.mainContents}
            className={classNames(projectcss.all, sty.mainContents)}
          >
            <div
              data-plasmic-name={"introApi"}
              data-plasmic-override={overrides.introApi}
              className={classNames(projectcss.all, sty.introApi)}
            >
              <div
                data-plasmic-name={"introApiTitle"}
                data-plasmic-override={overrides.introApiTitle}
                className={classNames(projectcss.all, sty.introApiTitle)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5OuvQ
                  )}
                >
                  {
                    "API \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0648 \u0627\u062a\u0635\u0627\u0644 \u0628\u0647 \u067e\u0644\u062a\u0641\u0631\u0645\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647"
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"introApiCaption"}
                data-plasmic-override={overrides.introApiCaption}
                className={classNames(projectcss.all, sty.introApiCaption)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mtwpL
                  )}
                >
                  {
                    "\u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0627\u06cc\u0646 API\u060c \u0634\u0645\u0627 \u0631\u0648 \u0628\u0647 \u062c\u0645\u0639 \u0628\u0632\u0631\u06af\u062a\u0631\u06cc\u0646 \u0627\u06a9\u0648\u0633\u06cc\u0633\u062a\u0645 \u067e\u0644\u062a\u0641\u0631\u0645\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u0648\u0627\u0631\u062f \u0645\u06cc\u200c\u06a9\u0646\u0647. \u0627\u06cc\u0646 integration \u06a9\u0627\u0631\u0647\u0627\u06cc\u06cc \u0645\u062b\u0644 \u0628\u0631\u0648\u0632 \u0631\u0633\u0627\u0646\u06cc \u0648\u0636\u0639\u06cc\u062a \u062a\u0642\u0648\u06cc\u0645 \u0648 \u0645\u062f\u06cc\u0631\u06cc\u062a \u0645\u0648\u062c\u0648\u062f\u06cc (inventory) \u0645\u06cc\u0632\u0628\u0627\u0646 \u0631\u0648 \u062f\u0631 \u067e\u0644\u062a\u0641\u0631\u0645 \u0627\u062c\u0627\u0631\u0647 \u0648\u06cc\u0644\u0627 \u06cc\u0627 \u0633\u0627\u06cc\u062a \u0634\u062e\u0635\u06cc \u0634\u0645\u0627 \u062e\u0648\u062f\u06a9\u0627\u0631 \u0645\u06cc\u200c\u06a9\u0646\u0647."
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"platforms"}
                data-plasmic-override={overrides.platforms}
                className={classNames(projectcss.all, sty.platforms)}
              >
                <div
                  data-plasmic-name={"platformsTitle"}
                  data-plasmic-override={overrides.platformsTitle}
                  className={classNames(projectcss.all, sty.platformsTitle)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eWeM1
                    )}
                  >
                    {
                      "\u067e\u0644\u062a\u0641\u0631\u0645\u200c\u0647\u0627\u06cc\u06cc \u06a9\u0647 \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0628\u0647 \u0627\u0648\u0646\u200c\u0647\u0627 \u0633\u0631\u0648\u06cc\u0633\u200c\u062f\u0647\u06cc \u062f\u0627\u0631\u0647:"
                    }
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___9Inv7)}
                >
                  <div
                    data-plasmic-name={"platformNames4"}
                    data-plasmic-override={overrides.platformNames4}
                    className={classNames(projectcss.all, sty.platformNames4)}
                  >
                    <div
                      data-plasmic-name={"platformNames5"}
                      data-plasmic-override={overrides.platformNames5}
                      className={classNames(projectcss.all, sty.platformNames5)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__qc2P6)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMaxWidth={"100%"}
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/image62.png",
                          fullWidth: 192,
                          fullHeight: 192,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"platformNames6"}
                      data-plasmic-override={overrides.platformNames6}
                      className={classNames(projectcss.all, sty.platformNames6)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rBkM2
                        )}
                      >
                        {"\u062c\u0627\u062c\u06cc\u06af\u0627"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___6Fzm
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          {
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                projectcss.plasmic_default__inline,
                                sty.link__bxhI3
                              )}
                              component={Link}
                              href={"jajiga.com"}
                              platform={"nextjs"}
                            >
                              {"jajiga.com\r"}
                            </PlasmicLink__>
                          }
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"platformNames"}
                    data-plasmic-override={overrides.platformNames}
                    className={classNames(projectcss.all, sty.platformNames)}
                  >
                    <div
                      data-plasmic-name={"platformNames2"}
                      data-plasmic-override={overrides.platformNames2}
                      className={classNames(projectcss.all, sty.platformNames2)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___15Tro)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "100%"
                            : "100%"
                        }
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/image63.png",
                          fullWidth: 360,
                          fullHeight: 360,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"platformNames3"}
                      data-plasmic-override={overrides.platformNames3}
                      className={classNames(projectcss.all, sty.platformNames3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__h9EO
                        )}
                      >
                        {"\u0634\u0628"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jvk5F
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          {
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                projectcss.plasmic_default__inline,
                                sty.link__vbk3N
                              )}
                              component={Link}
                              href={"shab.ir"}
                              platform={"nextjs"}
                            >
                              {"shab.ir"}
                            </PlasmicLink__>
                          }
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"platformNames7"}
                    data-plasmic-override={overrides.platformNames7}
                    className={classNames(projectcss.all, sty.platformNames7)}
                  >
                    <div
                      data-plasmic-name={"platformNames8"}
                      data-plasmic-override={overrides.platformNames8}
                      className={classNames(projectcss.all, sty.platformNames8)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__fZlHi)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "100%"
                            : "100%"
                        }
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/image64.png",
                          fullWidth: 512,
                          fullHeight: 512,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"platformNames9"}
                      data-plasmic-override={overrides.platformNames9}
                      className={classNames(projectcss.all, sty.platformNames9)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__i9PIx
                        )}
                      >
                        {"\u062c\u0627\u0628\u0627\u0645\u0627"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lxHv
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          {
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                projectcss.plasmic_default__inline,
                                sty.link___50Fcn
                              )}
                              component={Link}
                              href={"\u00a0jabama.com \u00a0"}
                              platform={"nextjs"}
                            >
                              {"jabama.com\r"}
                            </PlasmicLink__>
                          }
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"platformNames10"}
                    data-plasmic-override={overrides.platformNames10}
                    className={classNames(projectcss.all, sty.platformNames10)}
                  >
                    <div
                      data-plasmic-name={"platformNames11"}
                      data-plasmic-override={overrides.platformNames11}
                      className={classNames(
                        projectcss.all,
                        sty.platformNames11
                      )}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__k8U6I)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "100%"
                            : "100%"
                        }
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/image65.png",
                          fullWidth: 512,
                          fullHeight: 512,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"platformNames12"}
                      data-plasmic-override={overrides.platformNames12}
                      className={classNames(
                        projectcss.all,
                        sty.platformNames12
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__etbZz
                        )}
                      >
                        {"\u0627\u062a\u0627\u0642\u06a9"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gL05T
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          {
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                projectcss.plasmic_default__inline,
                                sty.link__meLct
                              )}
                              component={Link}
                              href={"\u00a0\u00a0otaghak.com"}
                              platform={"nextjs"}
                            >
                              {"otaghak.com"}
                            </PlasmicLink__>
                          }
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__aIcNf)}>
                  <div
                    data-plasmic-name={"platformNames13"}
                    data-plasmic-override={overrides.platformNames13}
                    className={classNames(projectcss.all, sty.platformNames13)}
                  >
                    <div
                      data-plasmic-name={"platformNames14"}
                      data-plasmic-override={overrides.platformNames14}
                      className={classNames(
                        projectcss.all,
                        sty.platformNames14
                      )}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___2BYj0)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "100%"
                            : "100%"
                        }
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/image66.png",
                          fullWidth: 512,
                          fullHeight: 512,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"platformNames15"}
                      data-plasmic-override={overrides.platformNames15}
                      className={classNames(
                        projectcss.all,
                        sty.platformNames15
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ovz79
                        )}
                      >
                        {"\u0647\u0648\u0645\u0633\u0627"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___2Ngm3
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          {
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                projectcss.plasmic_default__inline,
                                sty.link___3BqXz
                              )}
                              component={Link}
                              href={"\u00a0homsa.net \u00a0"}
                              platform={"nextjs"}
                            >
                              {"homsa.net\r"}
                            </PlasmicLink__>
                          }
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"platformNames16"}
                    data-plasmic-override={overrides.platformNames16}
                    className={classNames(projectcss.all, sty.platformNames16)}
                  >
                    <div
                      data-plasmic-name={"platformNames17"}
                      data-plasmic-override={overrides.platformNames17}
                      className={classNames(
                        projectcss.all,
                        sty.platformNames17
                      )}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__iaMkL)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "100%"
                            : "100%"
                        }
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/image67.png",
                          fullWidth: 512,
                          fullHeight: 512,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"platformNames18"}
                      data-plasmic-override={overrides.platformNames18}
                      className={classNames(
                        projectcss.all,
                        sty.platformNames18
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__c9Ooy
                        )}
                      >
                        {"\u0645\u06cc\u0632\u0628\u0648\u0646"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vc7Kj
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          {
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                projectcss.plasmic_default__inline,
                                sty.link__hLww7
                              )}
                              component={Link}
                              href={"\u00a0mizboon.com \u00a0"}
                              platform={"nextjs"}
                            >
                              {"mizboon.com\r"}
                            </PlasmicLink__>
                          }
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"platformNames19"}
                    data-plasmic-override={overrides.platformNames19}
                    className={classNames(projectcss.all, sty.platformNames19)}
                  >
                    <div
                      data-plasmic-name={"platformNames20"}
                      data-plasmic-override={overrides.platformNames20}
                      className={classNames(
                        projectcss.all,
                        sty.platformNames20
                      )}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__lgixk)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "100%"
                            : "100%"
                        }
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50px"
                            : "70px"
                        }
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/image68.png",
                          fullWidth: 512,
                          fullHeight: 512,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"platformNames21"}
                      data-plasmic-override={overrides.platformNames21}
                      className={classNames(
                        projectcss.all,
                        sty.platformNames21
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nDaYf
                        )}
                      >
                        {"\u0645\u06cc\u0647\u0645\u0627\u0646\u0634\u0648"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yHgMd
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          {
                            <PlasmicLink__
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                projectcss.plasmic_default__inline,
                                sty.link__axvxy
                              )}
                              component={Link}
                              href={"\u00a0mihmansho.com \u00a0"}
                              platform={"nextjs"}
                            >
                              {"mihmansho.com\r"}
                            </PlasmicLink__>
                          }
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"benefits"}
              data-plasmic-override={overrides.benefits}
              className={classNames(projectcss.all, sty.benefits)}
            >
              <div
                data-plasmic-name={"benefitsTitle"}
                data-plasmic-override={overrides.benefitsTitle}
                className={classNames(projectcss.all, sty.benefitsTitle)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oja5I
                  )}
                >
                  {
                    "\u0645\u0632\u0627\u06cc\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 API"
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"benefitsCaption"}
                data-plasmic-override={overrides.benefitsCaption}
                className={classNames(projectcss.all, sty.benefitsCaption)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gz95V
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ul
                        data-plasmic-name={"ul"}
                        data-plasmic-override={overrides.ul}
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__oCTjJ
                          )}
                        >
                          {
                            "\u0645\u0648\u062c\u0648\u062f\u06cc \u062a\u0642\u0648\u06cc\u0645 \u0645\u06cc\u0632\u0628\u0627\u0646 (inventory) \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u0628\u0627 \u0633\u0627\u06cc\u0631 \u067e\u0644\u062a\u0641\u0631\u0645\u200c\u0647\u0627 \u0647\u0645\u06af\u0627\u0645\u200c\u0633\u0627\u0632\u06cc (sync) \u0645\u06cc\u200c\u0634\u0647."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__rKgry
                          )}
                        >
                          {
                            "\u062f\u0631\u0635\u0648\u0631\u062a \u062a\u063a\u06cc\u06cc\u0631 \u0648\u0636\u0639\u06cc\u062a/\u0642\u06cc\u0645\u062a/\u0627\u0639\u0645\u0627\u0644 \u062a\u062e\u0641\u06cc\u0641 \u0628\u0631 \u0631\u0648\u06cc \u06cc\u06a9 \u062a\u0627\u0631\u06cc\u062e \u062a\u0648\u0633\u0637 \u0645\u06cc\u0632\u0628\u0627\u0646\u060c \u0627\u06cc\u0646 \u0627\u0642\u062f\u0627\u0645 \u062f\u0631 \u0647\u0645\u0647\u200c\u06cc \u067e\u0644\u062a\u0641\u0631\u0645\u200c\u0647\u0627 \u062b\u0628\u062a \u0645\u06cc\u200c\u0634\u0647."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__xTjd4
                          )}
                        >
                          {
                            "\u0627\u0645\u06a9\u0627\u0646 import \u06cc\u06a9\u062c\u0627 \u0635\u062f\u0647\u0627 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u0628\u0647 \u067e\u0644\u062a\u0641\u0631\u0645 \u0634\u0645\u0627 (\u062f\u0631 \u0634\u0631\u0627\u06cc\u0637 \u062e\u0627\u0635) \u0648\u062c\u0648\u062f \u062f\u0627\u0631\u0647"
                          }
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aFml5
                  )}
                >
                  {
                    "\u062a\u0642\u0648\u06cc\u0645 \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646 \u0647\u0645\u06cc\u0634\u0647 \u0628\u0647\u200c\u0631\u0648\u0632 \u062e\u0648\u0627\u0647\u062f \u0628\u0648\u062f \u0648 \u0686\u0627\u0644\u0634\u200c\u0647\u0627\u06cc \u062a\u06cc\u0645 \u0639\u0645\u0644\u06cc\u0627\u062a \u0648 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u062f\u0631 \u0628\u062e\u0634 \u062a\u0627\u0645\u06cc\u0646 (supply) \u0628\u0631\u0637\u0631\u0641 \u0645\u06cc\u200c\u0634\u0646. \u0628\u0627 \u0627\u0632 \u0628\u06cc\u0646 \u0628\u0631\u062f\u0646 \u0627\u06cc\u0646 \u062f\u063a\u062f\u063a\u0647\u200c\u0647\u0627\u060c \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u062a\u0645\u0631\u06a9\u0632\u062a \u0631\u0648 \u0631\u0648\u06cc \u0631\u0634\u062f \u0648 \u062a\u0648\u0633\u0639\u0647 \u06a9\u0633\u0628\u200c\u0648\u06a9\u0627\u0631\u060c \u062e\u0635\u0648\u0635\u0627 \u0633\u0645\u062a demand\u060c \u0628\u06af\u0630\u0627\u0631\u06cc."
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"autoSyncGif"}
                data-plasmic-override={overrides.autoSyncGif}
                className={classNames(projectcss.all, sty.autoSyncGif)}
              >
                <Video
                  data-plasmic-name={"htmlVideo"}
                  data-plasmic-override={overrides.htmlVideo}
                  autoPlay={true}
                  className={classNames("__wab_instance", sty.htmlVideo)}
                  controls={false}
                  loop={true}
                  muted={true}
                  src={
                    "https://rentamon-files.storage.iran.liara.space/auto-sync.mp4"
                  }
                />
              </div>
            </div>
            <div
              data-plasmic-name={"bot"}
              data-plasmic-override={overrides.bot}
              className={classNames(projectcss.all, sty.bot)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"more"}
                data-plasmic-override={overrides.more}
                hasGap={true}
                className={classNames(projectcss.all, sty.more)}
              >
                <div
                  data-plasmic-name={"moreDecs"}
                  data-plasmic-override={overrides.moreDecs}
                  className={classNames(projectcss.all, sty.moreDecs)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lzaO
                    )}
                  >
                    {
                      "\u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0628\u0647\u200c\u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u062a\u063a\u06cc\u06cc\u0631\u0627\u062a \u062a\u0642\u0648\u06cc\u0645 \u0647\u0631 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u0631\u0648 \u0630\u062e\u06cc\u0631\u0647 \u0645\u06cc\u200c\u06a9\u0646\u0647. \u0628\u0639\u062f \u0627AP \u0627\u0632 \u0637\u0631\u06cc\u0642 \u0648\u0628\u200c\u0647\u0648\u06a9\u200c\u0647\u0627\u060c \u0634\u0645\u0627 \u0631\u0648 \u0627\u0632 \u0627\u06cc\u0646 \u062a\u063a\u06cc\u06cc\u0631\u0627\u062a \u0645\u0637\u0644\u0639 \u0645\u06cc\u200c\u06a9\u0646\u0647 \u062a\u0627 \u0628\u062a\u0648\u0646\u06cc\u062f \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0645\u0631\u0628\u0648\u0637\u0647 \u0631\u0648 \u062f\u0631 \u0633\u06cc\u0633\u062a\u0645 \u062e\u0648\u062f\u062a\u0648\u0646 \u0628\u0647\u200c\u0631\u0648\u0632 \u06a9\u0646\u06cc\u062f.\n\r"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kBrti
                    )}
                  >
                    {
                      "\u0627\u06cc\u0646 \u0641\u0631\u0622\u06cc\u0646\u062f \u062a\u0636\u0645\u06cc\u0646 \u0645\u06cc\u200c\u06a9\u0646\u0647 \u06a9\u0647 \u062f\u0627\u062f\u0647\u200c\u0647\u0627\u06cc \u0634\u0645\u0627 \u0647\u0645\u06cc\u0634\u0647 \u0628\u0627 \u0622\u062e\u0631\u06cc\u0646 \u0648\u0636\u0639\u06cc\u062a \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647\u200c\u0647\u0627 \u0647\u0645\u0627\u0647\u0646\u06af \u0628\u0627\u0634\u0647."
                    }
                  </div>
                </div>
                <div
                  data-plasmic-name={"screenshot"}
                  data-plasmic-override={overrides.screenshot}
                  className={classNames(projectcss.all, sty.screenshot)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__lddAz)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "smallMobile")
                        ? "100%"
                        : hasVariant(globalVariants, "screen", "tablet")
                        ? "410px"
                        : "auto"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "smallMobile")
                        ? "100%"
                        : "auto"
                    }
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/_2Png.png",
                      fullWidth: 344,
                      fullHeight: 700,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </Stack__>
              <div
                data-plasmic-name={"apiAccess"}
                data-plasmic-override={overrides.apiAccess}
                className={classNames(projectcss.all, sty.apiAccess)}
              >
                <div
                  data-plasmic-name={"apidog"}
                  data-plasmic-override={overrides.apidog}
                  className={classNames(projectcss.all, sty.apidog)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__t2Pgn
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "\u0628\u0631\u0627\u06cc \u0645\u0634\u0627\u0647\u062f\u0647 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u062f\u0631 apidog.io \u0644\u0637\u0641\u0627\r\n\r\n"
                      : "\u0628\u0631\u0627\u06cc \u0645\u0634\u0627\u0647\u062f\u0647 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u062f\u0631 \u0633\u0627\u06cc\u062a apidog.io \u0644\u0637\u0641\u0627\r\n\r\n"}
                  </div>
                </div>
                <div
                  data-plasmic-name={"requestDemo"}
                  data-plasmic-override={overrides.requestDemo}
                  className={classNames(projectcss.all, sty.requestDemo)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zwJw9
                    )}
                    onClick={async event => {
                      const $steps = {};

                      $steps["runCode"] = true
                        ? (() => {
                            const actionArgs = {
                              customFunction: async () => {
                                return (() => {
                                  return window.open(
                                    "https://rentamon.apidog.io/",
                                    "_blank"
                                  );
                                })();
                              }
                            };
                            return (({ customFunction }) => {
                              return customFunction();
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["runCode"] != null &&
                        typeof $steps["runCode"] === "object" &&
                        typeof $steps["runCode"].then === "function"
                      ) {
                        $steps["runCode"] = await $steps["runCode"];
                      }
                    }}
                  >
                    {
                      "\u0627\u06cc\u0646\u062c\u0627 \u0628\u0632\u0646\u06cc\u062f"
                    }
                  </div>
                </div>
              </div>
            </div>
          </div>
          <RentamonFooter
            data-plasmic-name={"rentamonFooter"}
            data-plasmic-override={overrides.rentamonFooter}
            className={classNames("__wab_instance", sty.rentamonFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  integrations: [
    "integrations",
    "navbarRentamonComponent",
    "mainContents",
    "introApi",
    "introApiTitle",
    "introApiCaption",
    "platforms",
    "platformsTitle",
    "platformNames4",
    "platformNames5",
    "platformNames6",
    "platformNames",
    "platformNames2",
    "platformNames3",
    "platformNames7",
    "platformNames8",
    "platformNames9",
    "platformNames10",
    "platformNames11",
    "platformNames12",
    "platformNames13",
    "platformNames14",
    "platformNames15",
    "platformNames16",
    "platformNames17",
    "platformNames18",
    "platformNames19",
    "platformNames20",
    "platformNames21",
    "benefits",
    "benefitsTitle",
    "benefitsCaption",
    "ul",
    "autoSyncGif",
    "htmlVideo",
    "bot",
    "more",
    "moreDecs",
    "screenshot",
    "apiAccess",
    "apidog",
    "requestDemo",
    "rentamonFooter"
  ],
  navbarRentamonComponent: ["navbarRentamonComponent"],
  mainContents: [
    "mainContents",
    "introApi",
    "introApiTitle",
    "introApiCaption",
    "platforms",
    "platformsTitle",
    "platformNames4",
    "platformNames5",
    "platformNames6",
    "platformNames",
    "platformNames2",
    "platformNames3",
    "platformNames7",
    "platformNames8",
    "platformNames9",
    "platformNames10",
    "platformNames11",
    "platformNames12",
    "platformNames13",
    "platformNames14",
    "platformNames15",
    "platformNames16",
    "platformNames17",
    "platformNames18",
    "platformNames19",
    "platformNames20",
    "platformNames21",
    "benefits",
    "benefitsTitle",
    "benefitsCaption",
    "ul",
    "autoSyncGif",
    "htmlVideo",
    "bot",
    "more",
    "moreDecs",
    "screenshot",
    "apiAccess",
    "apidog",
    "requestDemo"
  ],
  introApi: [
    "introApi",
    "introApiTitle",
    "introApiCaption",
    "platforms",
    "platformsTitle",
    "platformNames4",
    "platformNames5",
    "platformNames6",
    "platformNames",
    "platformNames2",
    "platformNames3",
    "platformNames7",
    "platformNames8",
    "platformNames9",
    "platformNames10",
    "platformNames11",
    "platformNames12",
    "platformNames13",
    "platformNames14",
    "platformNames15",
    "platformNames16",
    "platformNames17",
    "platformNames18",
    "platformNames19",
    "platformNames20",
    "platformNames21"
  ],
  introApiTitle: ["introApiTitle"],
  introApiCaption: ["introApiCaption"],
  platforms: [
    "platforms",
    "platformsTitle",
    "platformNames4",
    "platformNames5",
    "platformNames6",
    "platformNames",
    "platformNames2",
    "platformNames3",
    "platformNames7",
    "platformNames8",
    "platformNames9",
    "platformNames10",
    "platformNames11",
    "platformNames12",
    "platformNames13",
    "platformNames14",
    "platformNames15",
    "platformNames16",
    "platformNames17",
    "platformNames18",
    "platformNames19",
    "platformNames20",
    "platformNames21"
  ],
  platformsTitle: ["platformsTitle"],
  platformNames4: ["platformNames4", "platformNames5", "platformNames6"],
  platformNames5: ["platformNames5"],
  platformNames6: ["platformNames6"],
  platformNames: ["platformNames", "platformNames2", "platformNames3"],
  platformNames2: ["platformNames2"],
  platformNames3: ["platformNames3"],
  platformNames7: ["platformNames7", "platformNames8", "platformNames9"],
  platformNames8: ["platformNames8"],
  platformNames9: ["platformNames9"],
  platformNames10: ["platformNames10", "platformNames11", "platformNames12"],
  platformNames11: ["platformNames11"],
  platformNames12: ["platformNames12"],
  platformNames13: ["platformNames13", "platformNames14", "platformNames15"],
  platformNames14: ["platformNames14"],
  platformNames15: ["platformNames15"],
  platformNames16: ["platformNames16", "platformNames17", "platformNames18"],
  platformNames17: ["platformNames17"],
  platformNames18: ["platformNames18"],
  platformNames19: ["platformNames19", "platformNames20", "platformNames21"],
  platformNames20: ["platformNames20"],
  platformNames21: ["platformNames21"],
  benefits: [
    "benefits",
    "benefitsTitle",
    "benefitsCaption",
    "ul",
    "autoSyncGif",
    "htmlVideo"
  ],
  benefitsTitle: ["benefitsTitle"],
  benefitsCaption: ["benefitsCaption", "ul"],
  ul: ["ul"],
  autoSyncGif: ["autoSyncGif", "htmlVideo"],
  htmlVideo: ["htmlVideo"],
  bot: [
    "bot",
    "more",
    "moreDecs",
    "screenshot",
    "apiAccess",
    "apidog",
    "requestDemo"
  ],
  more: ["more", "moreDecs", "screenshot"],
  moreDecs: ["moreDecs"],
  screenshot: ["screenshot"],
  apiAccess: ["apiAccess", "apidog", "requestDemo"],
  apidog: ["apidog"],
  requestDemo: ["requestDemo"],
  rentamonFooter: ["rentamonFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  integrations: "div";
  navbarRentamonComponent: typeof NavbarRentamonComponent;
  mainContents: "div";
  introApi: "div";
  introApiTitle: "div";
  introApiCaption: "div";
  platforms: "div";
  platformsTitle: "div";
  platformNames4: "div";
  platformNames5: "div";
  platformNames6: "div";
  platformNames: "div";
  platformNames2: "div";
  platformNames3: "div";
  platformNames7: "div";
  platformNames8: "div";
  platformNames9: "div";
  platformNames10: "div";
  platformNames11: "div";
  platformNames12: "div";
  platformNames13: "div";
  platformNames14: "div";
  platformNames15: "div";
  platformNames16: "div";
  platformNames17: "div";
  platformNames18: "div";
  platformNames19: "div";
  platformNames20: "div";
  platformNames21: "div";
  benefits: "div";
  benefitsTitle: "div";
  benefitsCaption: "div";
  ul: "ul";
  autoSyncGif: "div";
  htmlVideo: typeof Video;
  bot: "div";
  more: "div";
  moreDecs: "div";
  screenshot: "div";
  apiAccess: "div";
  apidog: "div";
  requestDemo: "div";
  rentamonFooter: typeof RentamonFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicIntegrations__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicIntegrations__VariantsArgs;
    args?: PlasmicIntegrations__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicIntegrations__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicIntegrations__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicIntegrations__ArgProps,
          internalVariantPropNames: PlasmicIntegrations__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicIntegrations__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "integrations") {
    func.displayName = "PlasmicIntegrations";
  } else {
    func.displayName = `PlasmicIntegrations.${nodeName}`;
  }
  return func;
}

export const PlasmicIntegrations = Object.assign(
  // Top-level PlasmicIntegrations renders the root element
  makeNodeComponent("integrations"),
  {
    // Helper components rendering sub-elements
    navbarRentamonComponent: makeNodeComponent("navbarRentamonComponent"),
    mainContents: makeNodeComponent("mainContents"),
    introApi: makeNodeComponent("introApi"),
    introApiTitle: makeNodeComponent("introApiTitle"),
    introApiCaption: makeNodeComponent("introApiCaption"),
    platforms: makeNodeComponent("platforms"),
    platformsTitle: makeNodeComponent("platformsTitle"),
    platformNames4: makeNodeComponent("platformNames4"),
    platformNames5: makeNodeComponent("platformNames5"),
    platformNames6: makeNodeComponent("platformNames6"),
    platformNames: makeNodeComponent("platformNames"),
    platformNames2: makeNodeComponent("platformNames2"),
    platformNames3: makeNodeComponent("platformNames3"),
    platformNames7: makeNodeComponent("platformNames7"),
    platformNames8: makeNodeComponent("platformNames8"),
    platformNames9: makeNodeComponent("platformNames9"),
    platformNames10: makeNodeComponent("platformNames10"),
    platformNames11: makeNodeComponent("platformNames11"),
    platformNames12: makeNodeComponent("platformNames12"),
    platformNames13: makeNodeComponent("platformNames13"),
    platformNames14: makeNodeComponent("platformNames14"),
    platformNames15: makeNodeComponent("platformNames15"),
    platformNames16: makeNodeComponent("platformNames16"),
    platformNames17: makeNodeComponent("platformNames17"),
    platformNames18: makeNodeComponent("platformNames18"),
    platformNames19: makeNodeComponent("platformNames19"),
    platformNames20: makeNodeComponent("platformNames20"),
    platformNames21: makeNodeComponent("platformNames21"),
    benefits: makeNodeComponent("benefits"),
    benefitsTitle: makeNodeComponent("benefitsTitle"),
    benefitsCaption: makeNodeComponent("benefitsCaption"),
    ul: makeNodeComponent("ul"),
    autoSyncGif: makeNodeComponent("autoSyncGif"),
    htmlVideo: makeNodeComponent("htmlVideo"),
    bot: makeNodeComponent("bot"),
    more: makeNodeComponent("more"),
    moreDecs: makeNodeComponent("moreDecs"),
    screenshot: makeNodeComponent("screenshot"),
    apiAccess: makeNodeComponent("apiAccess"),
    apidog: makeNodeComponent("apidog"),
    requestDemo: makeNodeComponent("requestDemo"),
    rentamonFooter: makeNodeComponent("rentamonFooter"),

    // Metadata about props expected for PlasmicIntegrations
    internalVariantProps: PlasmicIntegrations__VariantProps,
    internalArgProps: PlasmicIntegrations__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "دریافت API پلتفرم‌های اجاره ویلا",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicIntegrations;
/* prettier-ignore-end */
