/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7SNMkB8UMukVgcWJYokeAQ
// Component: SXQexie-iAHy

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import NavbarRentamonComponent from "../../NavbarRentamonComponent"; // plasmic-import: gWac1FMbIJat/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import TextInput from "../../TextInput"; // plasmic-import: 7KjdVT2JykAk/component
import { ApiRequest } from "@/fragment/components/api-request"; // plasmic-import: a17-BE4K1UE7/codeComponent
import { AntdModal } from "@plasmicpkgs/antd5/skinny/registerModal";
import RentamonFooter from "../../RentamonFooter"; // plasmic-import: DSdlo5kdtbOe/component
import { SideEffect } from "@plasmicpkgs/plasmic-basic-components";
import NavigationRntFooter from "../../NavigationRntFooter"; // plasmic-import: y37kcAs9RXYg/component

import { useScreenVariants as useScreenVariantsaSuSwU8JUYf } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: aSUSwU8jUYf-/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/projectcss
import sty from "./PlasmicReferral.module.css"; // plasmic-import: SXQexie-iAHy/css

import SearchSvgIcon from "./icons/PlasmicIcon__SearchSvg"; // plasmic-import: xpwiGbFxHMB2/icon
import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: aHRi_lZjzHt3/icon
import Icon51Icon from "./icons/PlasmicIcon__Icon51"; // plasmic-import: Bz9Sx99JdB-a/icon

createPlasmicElementProxy;

export type PlasmicReferral__VariantMembers = {};
export type PlasmicReferral__VariantsArgs = {};
type VariantPropType = keyof PlasmicReferral__VariantsArgs;
export const PlasmicReferral__VariantProps = new Array<VariantPropType>();

export type PlasmicReferral__ArgsType = {};
type ArgPropType = keyof PlasmicReferral__ArgsType;
export const PlasmicReferral__ArgProps = new Array<ArgPropType>();

export type PlasmicReferral__OverridesType = {
  root?: Flex__<"div">;
  navbarRentamonComponent?: Flex__<typeof NavbarRentamonComponent>;
  mainContents?: Flex__<"div">;
  intro1st?: Flex__<"div">;
  introTitle?: Flex__<"div">;
  teamImage?: Flex__<"div">;
  introImage?: Flex__<"div">;
  introduction?: Flex__<"div">;
  embedHtml?: Flex__<typeof Embed>;
  cta?: Flex__<"div">;
  ctaText?: Flex__<"div">;
  ctaButton?: Flex__<"div">;
  textInput?: Flex__<typeof TextInput>;
  apiRequest?: Flex__<typeof ApiRequest>;
  ctaText2?: Flex__<"div">;
  shareLink?: Flex__<typeof AntdModal>;
  refertxt?: Flex__<"div">;
  ctaButton2?: Flex__<"div">;
  svg?: Flex__<"svg">;
  apiRequest2?: Flex__<typeof ApiRequest>;
  link?: Flex__<"a"> & Partial<LinkProps>;
  rules?: Flex__<"div">;
  smsImage?: Flex__<"div">;
  tips?: Flex__<"div">;
  html?: Flex__<"div">;
  clarity2?: Flex__<typeof Embed>;
  goftino?: Flex__<typeof Embed>;
  rentamonFooter?: Flex__<typeof RentamonFooter>;
  sideEffect?: Flex__<typeof SideEffect>;
  navigationRntFooter?: Flex__<typeof NavigationRntFooter>;
};

export interface DefaultReferralProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicReferral__RenderFunc(props: {
  variants: PlasmicReferral__VariantsArgs;
  args: PlasmicReferral__ArgsType;
  overrides: PlasmicReferral__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const $globalActions = useGlobalActions?.();

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "propertyId",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "shareLink.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          hasVariant(globalVariants, "screen", "smallMobile")
            ? false
            : hasVariant(globalVariants, "screen", "mobile")
            ? false
            : hasVariant(globalVariants, "screen", "tablet")
            ? false
            : false
      },
      {
        path: "textInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.apiRequest.data.code_referral;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "apiRequest.data",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "apiRequest"
      },
      {
        path: "apiRequest.error",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "apiRequest"
      },
      {
        path: "apiRequest.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "apiRequest"
      },
      {
        path: "apiRequest2.data",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "apiRequest2"
      },
      {
        path: "apiRequest2.error",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "apiRequest2"
      },
      {
        path: "apiRequest2.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "apiRequest2"
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsaSuSwU8JUYf()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicReferral.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicReferral.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicReferral.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <NavbarRentamonComponent
            data-plasmic-name={"navbarRentamonComponent"}
            data-plasmic-override={overrides.navbarRentamonComponent}
            className={classNames(
              "__wab_instance",
              sty.navbarRentamonComponent
            )}
          />

          <div
            data-plasmic-name={"mainContents"}
            data-plasmic-override={overrides.mainContents}
            className={classNames(projectcss.all, sty.mainContents)}
          >
            <div
              data-plasmic-name={"intro1st"}
              data-plasmic-override={overrides.intro1st}
              className={classNames(projectcss.all, sty.intro1st)}
            >
              <div
                data-plasmic-name={"introTitle"}
                data-plasmic-override={overrides.introTitle}
                className={classNames(projectcss.all, sty.introTitle)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__r0SZ
                  )}
                >
                  {hasVariant(globalVariants, "screen", "smallMobile")
                    ? "\u0628\u0627 \u0645\u0639\u0631\u0641\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646\u060c \u0628\u0647 \u06a9\u0633\u0628\u200c\u0648\u06a9\u0627\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u0631\u0648\u0646\u0642 \u0628\u062f\u0647\n\u0648 \u0647\u062f\u06cc\u0647 \u0628\u06af\u06cc\u0631 \ud83c\udf81"
                    : hasVariant(globalVariants, "screen", "mobile")
                    ? "\u0628\u0627 \u0645\u0639\u0631\u0641\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646\u060c \u0628\u0647 \u06a9\u0633\u0628\u200c\u0648\u06a9\u0627\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u0631\u0648\u0646\u0642 \u0628\u062f\u0647\n\u0648 \u0647\u062f\u06cc\u0647 \u0628\u06af\u06cc\u0631 \ud83c\udf81"
                    : hasVariant(globalVariants, "screen", "tablet")
                    ? "\u0628\u0627 \u0645\u0639\u0631\u0641\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646\u060c \u0628\u0647 \u06a9\u0633\u0628\u200c\u0648\u06a9\u0627\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u0631\u0648\u0646\u0642 \u0628\u062f\u0647\n\u0648 \u0647\u062f\u06cc\u0647 \u0628\u06af\u06cc\u0631 \ud83c\udf81"
                    : "\u0628\u0627 \u0645\u0639\u0631\u0641\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646\u060c \u0628\u0647 \u06a9\u0633\u0628\u200c\u0648\u06a9\u0627\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u0631\u0648\u0646\u0642 \u0628\u062f\u0647\n\u0648 \u0647\u062f\u06cc\u0647 \u0628\u06af\u06cc\u0631 \ud83c\udf81\r\n\r"}
                </div>
              </div>
              <div
                data-plasmic-name={"teamImage"}
                data-plasmic-override={overrides.teamImage}
                className={classNames(projectcss.all, sty.teamImage)}
              >
                <div
                  data-plasmic-name={"introImage"}
                  data-plasmic-override={overrides.introImage}
                  className={classNames(projectcss.all, sty.introImage)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___0Yxcz)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "smallMobile")
                        ? "240px"
                        : hasVariant(globalVariants, "screen", "mobile")
                        ? "260px"
                        : "auto"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "100%"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/manosTidesJpg.jpg",
                      fullWidth: 722,
                      fullHeight: 526,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div
                  data-plasmic-name={"introduction"}
                  data-plasmic-override={overrides.introduction}
                  className={classNames(projectcss.all, sty.introduction)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uRlUn
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "smallMobile") ? (
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "\u0628\u0627 \u0645\u0639\u0631\u0641\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0628\u0647 \u0633\u0627\u06cc\u0631 \u0645\u06cc\u0632\u0628\u0627\u0646\u200c\u0647\u0627\u060c \u0628\u0647 \u0627\u0632\u0627\u06cc \u0647\u0631 \u0646\u0641\u0631 \u0645\u0628\u0644\u063a "
                          }
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {
                            "\u06f1\u06f0\u06f0 \u0647\u0632\u0627\u0631 \u062a\u0648\u0645\u0646"
                          }
                        </span>
                        <React.Fragment>
                          {
                            " \u0627\u0639\u062a\u0628\u0627\u0631 \u0647\u062f\u06cc\u0647 \ud83c\udf81 \u0628\u06af\u06cc\u0631.\n\u06cc\u0639\u0646\u06cc \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0628\u0627 \u062f\u0639\u0648\u062a \u06f1\u06f0 \u0646\u0641\u0631\u060c \u06cc\u06a9 \u0645\u06cc\u0644\u06cc\u0648\u0646 \u062a\u0648\u0645\u0646 \u0647\u062f\u06cc\u0647 \u0628\u06af\u06cc\u0631\u06cc!"
                          }
                        </React.Fragment>
                      </React.Fragment>
                    ) : hasVariant(globalVariants, "screen", "mobile") ? (
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "\u0628\u0627 \u0645\u0639\u0631\u0641\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0628\u0647 \u0633\u0627\u06cc\u0631 \u0645\u06cc\u0632\u0628\u0627\u0646\u200c\u0647\u0627\u060c \u0628\u0647 \u0627\u0632\u0627\u06cc \u0647\u0631 \u0646\u0641\u0631 \u0645\u0628\u0644\u063a "
                          }
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {
                            "\u06f1\u06f0\u06f0 \u0647\u0632\u0627\u0631 \u062a\u0648\u0645\u0646"
                          }
                        </span>
                        <React.Fragment>
                          {
                            " \u0627\u0639\u062a\u0628\u0627\u0631 \u0647\u062f\u06cc\u0647 \ud83c\udf81 \u0628\u06af\u06cc\u0631.\n\u06cc\u0639\u0646\u06cc \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0628\u0627 \u062f\u0639\u0648\u062a \u06f1\u06f0 \u0646\u0641\u0631\u060c \u06cc\u06a9 \u0645\u06cc\u0644\u06cc\u0648\u0646 \u062a\u0648\u0645\u0646 \u0647\u062f\u06cc\u0647 \u0628\u06af\u06cc\u0631\u06cc!"
                          }
                        </React.Fragment>
                      </React.Fragment>
                    ) : (
                      "\u0628\u0627 \u0645\u0639\u0631\u0641\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0628\u0647 \u0633\u0627\u06cc\u0631 \u0645\u06cc\u0632\u0628\u0627\u0646\u200c\u0647\u0627\u060c \u0628\u0647 \u0627\u0632\u0627\u06cc \u0647\u0631 \u0646\u0641\u0631 \u0645\u0628\u0644\u063a \u06f1\u06f0\u06f0 \u0647\u0632\u0627\u0631 \u062a\u0648\u0645\u0646 \u0627\u0639\u062a\u0628\u0627\u0631 \u0647\u062f\u06cc\u0647 \ud83c\udf81 \u0628\u06af\u06cc\u0631. \u06cc\u0639\u0646\u06cc \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0628\u0627 \u062f\u0639\u0648\u062a \u06f1\u06f0 \u0646\u0641\u0631\u060c \u06cc\u06a9 \u0645\u06cc\u0644\u06cc\u0648\u0646 \u062a\u0648\u0645\u0646 \u0647\u062f\u06cc\u0647 \u0628\u06af\u06cc\u0631\u06cc!"
                    )}
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___4Q4Fb)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__odfDe)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "16%"
                          : "10%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image89.gif",
                        fullWidth: 480,
                        fullHeight: 432,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__ciToe)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1Ew7O
                    )}
                  >
                    {
                      "\u062a\u0627 \u067e\u0627\u06cc\u0627\u0646 \u062c\u0634\u0646\u0648\u0627\u0631\u0647"
                    }
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__oQAg3)}>
                  <Embed
                    data-plasmic-name={"embedHtml"}
                    data-plasmic-override={overrides.embedHtml}
                    className={classNames("__wab_instance", sty.embedHtml)}
                    code={
                      '<div id="countdown" class="countdown-wrapper">\r\n  <div class="time-box">\r\n    <div id="days" class="time-number">--</div>\r\n    <div class="time-label">\u0631\u0648\u0632</div>\r\n  </div>\r\n  <div class="separator">:</div>\r\n  <div class="time-box">\r\n    <div id="hours" class="time-number">--</div>\r\n    <div class="time-label">\u0633\u0627\u0639\u062a</div>\r\n  </div>\r\n  <div class="separator">:</div>\r\n  <div class="time-box">\r\n    <div id="minutes" class="time-number">--</div>\r\n    <div class="time-label">\u062f\u0642\u06cc\u0642\u0647</div>\r\n  </div>\r\n  <div class="separator">:</div>\r\n  <div class="time-box">\r\n    <div id="seconds" class="time-number">--</div>\r\n    <div class="time-label">\u062b\u0627\u0646\u06cc\u0647</div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .countdown-wrapper {\r\n    direction: ltr;\r\n    display: flex;\r\n    gap: 36px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-family: Vazirmatn, sans-serif;\r\n    color: #444444;\r\n    font-weight: bold;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .time-box {\r\n    text-align: center;\r\n  }\r\n\r\n  .time-number {\r\n    font-size: 32px;\r\n    width: 50px;\r\n    text-align: center;\r\n  }\r\n\r\n  .time-label {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .separator {\r\n    font-size: 28px;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    .countdown-wrapper {\r\n      gap: 16px;\r\n    }\r\n\r\n    .time-number {\r\n      font-size: 22px;\r\n      width: 32px;\r\n    }\r\n\r\n    .separator {\r\n      font-size: 19px;\r\n    }\r\n  }\r\n</style>\r\n\r\n<script>\r\n  function toPersianNumber(num) {\r\n    const persianDigits = [\'\u06f0\',\'\u06f1\',\'\u06f2\',\'\u06f3\',\'\u06f4\',\'\u06f5\',\'\u06f6\',\'\u06f7\',\'\u06f8\',\'\u06f9\'];\r\n    return num.toString().replace(/\\d/g, d => persianDigits[d]);\r\n  }\r\n\r\n  const endDate = new Date("2025-04-29T23:59:59").getTime();\r\n  \r\n  const x = setInterval(() => {\r\n    const now = new Date().getTime();\r\n    const distance = endDate - now;\r\n\r\n    if (distance < 0) {\r\n      clearInterval(x);\r\n      document.getElementById("countdown").innerHTML = "\ud83c\udf89 \u062c\u0634\u0646\u0648\u0627\u0631\u0647 \u0628\u0647 \u067e\u0627\u06cc\u0627\u0646 \u0631\u0633\u06cc\u062f\u0647 \u0627\u0633\u062a!";\r\n      return;\r\n    }\r\n\r\n    const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n    const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n    document.getElementById("days").textContent = toPersianNumber(days.toString().padStart(2, \'0\'));\r\n    document.getElementById("hours").textContent = toPersianNumber(hours.toString().padStart(2, \'0\'));\r\n    document.getElementById("minutes").textContent = toPersianNumber(minutes.toString().padStart(2, \'0\'));\r\n    document.getElementById("seconds").textContent = toPersianNumber(seconds.toString().padStart(2, \'0\'));\r\n  }, 1000);\r\n</script>\r\n'
                    }
                  />
                </div>
              </div>
              <div
                data-plasmic-name={"cta"}
                data-plasmic-override={overrides.cta}
                className={classNames(projectcss.all, sty.cta)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"ctaText"}
                  data-plasmic-override={overrides.ctaText}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.ctaText)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7S8Zm
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "smallMobile")
                      ? "\u0628\u0631\u0627\u06cc \u0645\u0639\u0631\u0641\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646\u060c \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0632\u06cc\u0631 \u0628\u0632\u0646\r"
                      : hasVariant(globalVariants, "screen", "mobile")
                      ? "\u0628\u0631\u0627\u06cc \u0645\u0639\u0631\u0641\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646\u060c \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0632\u06cc\u0631 \u0628\u0632\u0646 \ud83d\udc47\r"
                      : hasVariant(globalVariants, "screen", "tablet")
                      ? "\u0628\u0631\u0627\u06cc \u0645\u0639\u0631\u0641\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0628\u0647 \u062f\u06cc\u06af\u0631\u0627\u0646\u060c \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0632\u06cc\u0631 \u0628\u0632\u0646 \ud83d\udc47\r"
                      : "\u0628\u0631\u0627\u06cc \u0645\u0639\u0631\u0641\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646\u060c \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0632\u06cc\u0631 \u0628\u0632\u0646 \ud83d\udc47\r"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"ctaButton"}
                  data-plasmic-override={overrides.ctaButton}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.ctaButton)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vvG7H,
                      "clickable"
                    )}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateCopyTextOpen"] = false
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["shareLink", "open"]
                              },
                              operation: 0,
                              value: true
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateCopyTextOpen"] != null &&
                        typeof $steps["updateCopyTextOpen"] === "object" &&
                        typeof $steps["updateCopyTextOpen"].then === "function"
                      ) {
                        $steps["updateCopyTextOpen"] = await $steps[
                          "updateCopyTextOpen"
                        ];
                      }

                      $steps["runCode"] = true
                        ? (() => {
                            const actionArgs = {
                              customFunction: async () => {
                                return (() => {
                                  const text = $state.textInput.value;
                                  return navigator.clipboard
                                    .writeText(text)
                                    .then(() => {
                                      console.log("copy");
                                    })
                                    .catch(err => {
                                      console.error(
                                        "خطا در کپی کردن متن:",
                                        err
                                      );
                                    });
                                })();
                              }
                            };
                            return (({ customFunction }) => {
                              return customFunction();
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["runCode"] != null &&
                        typeof $steps["runCode"] === "object" &&
                        typeof $steps["runCode"].then === "function"
                      ) {
                        $steps["runCode"] = await $steps["runCode"];
                      }

                      $steps["runCode2"] = true
                        ? (() => {
                            const actionArgs = {
                              customFunction: async () => {
                                return (async () => {
                                  const shareText = `
از طریق برنامه‌ی رنتامون می‌تونی برای سایت‌های جاجیگا، اتاقک،‌ جاباما و... یکجا قیمت بذاری.

۷ تا از معروف‌ترین سایت‌های اجاره ویلا رو یکجا تجمیع کرده و امکانات اون‌ها رو توی خودش داره.

اینجا بزن 👇
${$state.textInput.value}
`;
                                  if (navigator.share) {
                                    try {
                                      await navigator.share({
                                        text: shareText
                                      });
                                      console.log(
                                        "اشتراک‌گذاری با موفقیت انجام شد!"
                                      );
                                    } catch (err) {
                                      console.error(
                                        "خطا در اشتراک‌گذاری:",
                                        err
                                      );
                                    }
                                  } else {
                                    console.log(
                                      "مرورگر شما از Web Share API پشتیبانی نمی‌کند."
                                    );
                                  }
                                })();
                              }
                            };
                            return (({ customFunction }) => {
                              return customFunction();
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["runCode2"] != null &&
                        typeof $steps["runCode2"] === "object" &&
                        typeof $steps["runCode2"].then === "function"
                      ) {
                        $steps["runCode2"] = await $steps["runCode2"];
                      }
                    }}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "\u0627\u0631\u0633\u0627\u0644 \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a"
                      : "\u0627\u0631\u0633\u0627\u0644 \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      sty.freeBox__cvTxm,
                      "ltr"
                    )}
                  >
                    <TextInput
                      data-plasmic-name={"textInput"}
                      data-plasmic-override={overrides.textInput}
                      className={classNames("__wab_instance", sty.textInput)}
                      onChange={async (...eventArgs: any) => {
                        ((...eventArgs) => {
                          generateStateOnChangeProp($state, [
                            "textInput",
                            "value"
                          ])((e => e.target?.value).apply(null, eventArgs));
                        }).apply(null, eventArgs);

                        if (
                          eventArgs.length > 1 &&
                          eventArgs[1] &&
                          eventArgs[1]._plasmic_state_init_
                        ) {
                          return;
                        }
                      }}
                      placeholder={
                        "\u062f\u0631 \u062d\u0627\u0644 \u0628\u0627\u0631\u06af\u0630\u0627\u0631\u06cc....."
                      }
                      value={
                        generateStateValueProp($state, [
                          "textInput",
                          "value"
                        ]) ?? ""
                      }
                    />
                  </div>
                  <ApiRequest
                    data-plasmic-name={"apiRequest"}
                    data-plasmic-override={overrides.apiRequest}
                    className={classNames("__wab_instance", sty.apiRequest)}
                    errorDisplay={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vWzFd
                        )}
                      >
                        {"Error fetching data"}
                      </div>
                    }
                    loadingDisplay={null}
                    method={"POST"}
                    onError={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "apiRequest",
                        "error"
                      ]).apply(null, eventArgs);
                    }}
                    onLoading={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "apiRequest",
                        "loading"
                      ]).apply(null, eventArgs);
                    }}
                    onSuccess={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "apiRequest",
                        "data"
                      ]).apply(null, eventArgs);
                    }}
                    ref={ref => {
                      $refs["apiRequest"] = ref;
                    }}
                    url={
                      "https://gateway.rentamon.com/webhook/generate_referral_code"
                    }
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"ctaText2"}
                  data-plasmic-override={overrides.ctaText2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.ctaText2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__z4SpY
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "smallMobile")
                      ? "\u0627\u06cc\u0646 \u0644\u06cc\u0646\u06a9 \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0634\u0645\u0627\u0633\u062a \u0648 \u0628\u0631\u0627\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u0647\u062f\u06cc\u0647\u060c \u0641\u0631\u062f \u062f\u0639\u0648\u062a \u0634\u062f\u0647 \u062d\u062a\u0645\u0627 \u0628\u0627\u06cc\u062f \u0631\u0648\u06cc \u0647\u0645\u06cc\u0646 \u0644\u06cc\u0646\u06a9 \u0628\u0632\u0646\u0647."
                      : hasVariant(globalVariants, "screen", "mobile")
                      ? "\u062a\u0648\u062c\u0647: \u0627\u06cc\u0646 \u0644\u06cc\u0646\u06a9 \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0634\u0645\u0627\u0633\u062a \u0648 \u0628\u0631\u0627\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u0647\u062f\u06cc\u0647\u060c \u0641\u0631\u062f \u062f\u0639\u0648\u062a \u0634\u062f\u0647 \u062d\u062a\u0645\u0627 \u0628\u0627\u06cc\u062f \u0631\u0648\u06cc \u0647\u0645\u06cc\u0646 \u0644\u06cc\u0646\u06a9 \u0628\u0632\u0646\u0647 \u0648 \u062b\u0628\u062a\u200c\u0646\u0627\u0645 \u06a9\u0646\u0647."
                      : hasVariant(globalVariants, "screen", "tablet")
                      ? "\u062a\u0648\u062c\u0647: \u0627\u06cc\u0646 \u0644\u06cc\u0646\u06a9 \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0634\u0645\u0627\u0633\u062a \u0648 \u0628\u0631\u0627\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u0647\u062f\u06cc\u0647\u060c \u0641\u0631\u062f \u062f\u0639\u0648\u062a \u0634\u062f\u0647 \u062d\u062a\u0645\u0627 \u0628\u0627\u06cc\u062f \u0631\u0648\u06cc \u0647\u0645\u06cc\u0646 \u0644\u06cc\u0646\u06a9 \u0628\u0632\u0646\u0647 \u0648 \u062b\u0628\u062a\u200c\u0646\u0627\u0645 \u06a9\u0646\u0647."
                      : "\u062a\u0648\u062c\u0647: \u0627\u06cc\u0646 \u0644\u06cc\u0646\u06a9 \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0634\u0645\u0627\u0633\u062a \u0648 \u0628\u0631\u0627\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u0647\u062f\u06cc\u0647\u060c \u0641\u0631\u062f \u062f\u0639\u0648\u062a \u0634\u062f\u0647 \u062d\u062a\u0645\u0627 \u0628\u0627\u06cc\u062f \u0631\u0648\u06cc \u0647\u0645\u06cc\u0646 \u0644\u06cc\u0646\u06a9 \u0628\u0632\u0646\u0647 \u0648 \u062b\u0628\u062a\u200c\u0646\u0627\u0645 \u06a9\u0646\u0647."}
                  </div>
                </Stack__>
                <AntdModal
                  data-plasmic-name={"shareLink"}
                  data-plasmic-override={overrides.shareLink}
                  className={classNames("__wab_instance", sty.shareLink)}
                  defaultStylesClassName={classNames(
                    projectcss.root_reset,
                    projectcss.plasmic_default_styles,
                    projectcss.plasmic_mixins,
                    projectcss.plasmic_tokens,
                    plasmic_antd_5_hostless_css.plasmic_tokens,
                    plasmic_plasmic_rich_components_css.plasmic_tokens
                  )}
                  hideFooter={true}
                  modalScopeClassName={sty["shareLink__modal"]}
                  onOpenChange={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, [
                      "shareLink",
                      "open"
                    ]).apply(null, eventArgs);
                  }}
                  open={generateStateValueProp($state, ["shareLink", "open"])}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bzTHz
                      )}
                    >
                      {
                        "\u0627\u06cc\u0646 \u067e\u06cc\u0627\u0645 \u0631\u0648 \u0628\u0631\u0627\u06cc \u062f\u06cc\u06af\u0631\u0627\u0646 \u0628\u0641\u0631\u0633\u062a \ud83d\udc47"
                      }
                    </div>
                  }
                  trigger={null}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ybr0A)}
                  >
                    <div
                      data-plasmic-name={"refertxt"}
                      data-plasmic-override={overrides.refertxt}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.refertxt
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "smallMobile") ? (
                        <React.Fragment>
                          {(() => {
                            try {
                              return `
از طریق برنامه‌ی رنتامون می‌تونی برای سایت‌های جاجیگا، اتاقک،‌ جاباما و... یکجا قیمت بذاری.

۷ تا از معروف‌ترین سایت‌های اجاره ویلا رو یکجا تجمیع کرده و امکانات اون‌ها رو توی خودش داره.

اینجا بزن 👇
لینک دعوت`;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return "\r\u0627\u0632 \u0637\u0631\u06cc\u0642 \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0628\u0631\u0627\u06cc \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u062c\u0627\u062c\u06cc\u06af\u0627\u060c \u0627\u062a\u0627\u0642\u06a9\u060c\u200c \u062c\u0627\u0628\u0627\u0645\u0627 \u0648... \u06cc\u06a9\u062c\u0627 \u0642\u06cc\u0645\u062a \u0628\u0630\u0627\u0631\u06cc.\n\n\u06f7 \u062a\u0627 \u0627\u0632 \u0645\u0639\u0631\u0648\u0641\u200c\u062a\u0631\u06cc\u0646 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0648\u06cc\u0644\u0627 \u0631\u0648 \u06cc\u06a9\u062c\u0627 \u062a\u062c\u0645\u06cc\u0639 \u06a9\u0631\u062f\u0647 \u0648 \u0627\u0645\u06a9\u0627\u0646\u0627\u062a \u0627\u0648\u0646\u200c\u0647\u0627 \u0631\u0648 \u062a\u0648\u06cc \u062e\u0648\u062f\u0634 \u062f\u0627\u0631\u0647.\n\n\u0627\u06cc\u0646\u062c\u0627 \u0628\u0632\u0646 \ud83d\udc47\r\nrentamon.com";
                              }
                              throw e;
                            }
                          })()}
                        </React.Fragment>
                      ) : hasVariant(globalVariants, "screen", "mobile") ? (
                        <React.Fragment>
                          {(() => {
                            try {
                              return `
از طریق برنامه‌ی رنتامون می‌تونی برای سایت‌های جاجیگا، اتاقک،‌ جاباما و... یکجا قیمت بذاری.


۷ تا از معروف‌ترین سایت‌های اجاره ویلا رو یکجا تجمیع کرده و امکانات اون‌ها رو توی خودش داره.


اینجا بزن 👇
لینک دعوت`;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return "\r\u0627\u0632 \u0637\u0631\u06cc\u0642 \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0628\u0631\u0627\u06cc \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u062c\u0627\u062c\u06cc\u06af\u0627\u060c \u0627\u062a\u0627\u0642\u06a9\u060c\u200c \u062c\u0627\u0628\u0627\u0645\u0627 \u0648... \u06cc\u06a9\u062c\u0627 \u0642\u06cc\u0645\u062a \u0628\u0630\u0627\u0631\u06cc.\n\n\u06f7 \u062a\u0627 \u0627\u0632 \u0645\u0639\u0631\u0648\u0641\u200c\u062a\u0631\u06cc\u0646 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0648\u06cc\u0644\u0627 \u0631\u0648 \u06cc\u06a9\u062c\u0627 \u062a\u062c\u0645\u06cc\u0639 \u06a9\u0631\u062f\u0647 \u0648 \u0627\u0645\u06a9\u0627\u0646\u0627\u062a \u0627\u0648\u0646\u200c\u0647\u0627 \u0631\u0648 \u062a\u0648\u06cc \u062e\u0648\u062f\u0634 \u062f\u0627\u0631\u0647.\n\n\u0627\u06cc\u0646\u062c\u0627 \u0628\u0632\u0646 \ud83d\udc47\r\nrentamon.com/referral/?xyz123";
                              }
                              throw e;
                            }
                          })()}
                        </React.Fragment>
                      ) : hasVariant(globalVariants, "screen", "tablet") ? (
                        <React.Fragment>
                          {(() => {
                            try {
                              return `
از طریق برنامه‌ی رنتامون می‌تونی برای سایت‌های جاجیگا، اتاقک،‌ جاباما و... یکجا قیمت بذاری.


۷ تا از معروف‌ترین سایت‌های اجاره ویلا رو یکجا تجمیع کرده و امکانات اون‌ها رو توی خودش داره.


اینجا بزن 👇
لینک دعوت
`;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return "\r\u0627\u0632 \u0637\u0631\u06cc\u0642 \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0628\u0631\u0627\u06cc \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u062c\u0627\u062c\u06cc\u06af\u0627\u060c \u0627\u062a\u0627\u0642\u06a9\u060c\u200c \u062c\u0627\u0628\u0627\u0645\u0627 \u0648... \u06cc\u06a9\u062c\u0627 \u0642\u06cc\u0645\u062a \u0628\u0630\u0627\u0631\u06cc.\n\n\u06f7 \u062a\u0627 \u0627\u0632 \u0645\u0639\u0631\u0648\u0641\u200c\u062a\u0631\u06cc\u0646 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0648\u06cc\u0644\u0627 \u0631\u0648 \u06cc\u06a9\u062c\u0627 \u062a\u062c\u0645\u06cc\u0639 \u06a9\u0631\u062f\u0647 \u0648 \u0627\u0645\u06a9\u0627\u0646\u0627\u062a \u0627\u0648\u0646\u200c\u0647\u0627 \u0631\u0648 \u062a\u0648\u06cc \u062e\u0648\u062f\u0634 \u062f\u0627\u0631\u0647.\n\n\u0627\u06cc\u0646\u062c\u0627 \u0628\u0632\u0646 \ud83d\udc47\r\nrentamon.com/referral/?xyz123";
                              }
                              throw e;
                            }
                          })()}
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          {(() => {
                            try {
                              return `
از طریق برنامه‌ی رنتامون می‌تونی برای سایت‌های جاجیگا، اتاقک،‌ جاباما و... یکجا قیمت بذاری.


۷ تا از معروف‌ترین سایت‌های اجاره ویلا رو یکجا تجمیع کرده و امکانات اون‌ها رو توی خودش داره.


اینجا بزن 👇
لینک دعوت`;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return "\r\u0627\u0632 \u0637\u0631\u06cc\u0642 \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0628\u0631\u0627\u06cc \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u062c\u0627\u062c\u06cc\u06af\u0627\u060c \u0627\u062a\u0627\u0642\u06a9\u060c\u200c \u062c\u0627\u0628\u0627\u0645\u0627 \u0648... \u06cc\u06a9\u062c\u0627 \u0642\u06cc\u0645\u062a \u0628\u0630\u0627\u0631\u06cc.\n\n\u06f7 \u062a\u0627 \u0627\u0632 \u0645\u0639\u0631\u0648\u0641\u200c\u062a\u0631\u06cc\u0646 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0648\u06cc\u0644\u0627 \u0631\u0648 \u06cc\u06a9\u062c\u0627 \u062a\u062c\u0645\u06cc\u0639 \u06a9\u0631\u062f\u0647 \u0648 \u0627\u0645\u06a9\u0627\u0646\u0627\u062a \u0627\u0648\u0646\u200c\u0647\u0627 \u0631\u0648 \u062a\u0648\u06cc \u062e\u0648\u062f\u0634 \u062f\u0627\u0631\u0647.\n\n\u0627\u06cc\u0646\u062c\u0627 \u0628\u0632\u0646 \ud83d\udc47\r\nrentamon.com";
                              }
                              throw e;
                            }
                          })()}
                        </React.Fragment>
                      )}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"ctaButton2"}
                    data-plasmic-override={overrides.ctaButton2}
                    className={classNames(projectcss.all, sty.ctaButton2)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__nosZ8)}
                      onClick={async event => {
                        const $steps = {};

                        $steps["runCode"] = true
                          ? (() => {
                              const actionArgs = {
                                customFunction: async () => {
                                  return (async () => {
                                    const shareText = `
از طریق برنامه‌ی رنتامون می‌تونی برای سایت‌های جاجیگا، اتاقک،‌ جاباما و... یکجا قیمت بذاری.

۷ تا از معروف‌ترین سایت‌های اجاره ویلا رو یکجا تجمیع کرده و امکانات اون‌ها رو توی خودش داره.

اینجا بزن 👇
${$state.textInput.value}
`;
                                    if (navigator.share) {
                                      try {
                                        await navigator.share({
                                          text: shareText
                                        });
                                        console.log(
                                          "اشتراک‌گذاری با موفقیت انجام شد!"
                                        );
                                      } catch (err) {
                                        console.error(
                                          "خطا در اشتراک‌گذاری:",
                                          err
                                        );
                                      }
                                    } else {
                                      console.log(
                                        "مرورگر شما از Web Share API پشتیبانی نمی‌کند."
                                      );
                                    }
                                  })();
                                }
                              };
                              return (({ customFunction }) => {
                                return customFunction();
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["runCode"] != null &&
                          typeof $steps["runCode"] === "object" &&
                          typeof $steps["runCode"].then === "function"
                        ) {
                          $steps["runCode"] = await $steps["runCode"];
                        }

                        $steps["updateShareLinkOpen"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: ["shareLink", "open"]
                                },
                                operation: 0
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;

                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateShareLinkOpen"] != null &&
                          typeof $steps["updateShareLinkOpen"] === "object" &&
                          typeof $steps["updateShareLinkOpen"].then ===
                            "function"
                        ) {
                          $steps["updateShareLinkOpen"] = await $steps[
                            "updateShareLinkOpen"
                          ];
                        }
                      }}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jWl2Q
                        )}
                        onClick={async event => {
                          const $steps = {};

                          $steps["runCode2"] = false
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return function share() {
                                      const shareText = `از طریق برنامه‌ی رنتامون می‌تونی برای سایت‌های جاجیگا، اتاقک،‌ جاباما و... یکجا قیمت بذاری. ۷ تا از معروف‌ترین سایت‌های اجاره ویلا رو یکجا تجمیع کرده و امکانات اون‌ها رو توی خودش داره. اینجا بزن 👇 rentamon.com`;
                                      if (navigator.share) {
                                        navigator
                                          .share({
                                            title: "رنتامون",
                                            text: shareText,
                                            url: "https://rentamon.com"
                                          })
                                          .then(() =>
                                            console.log("Shared successfully")
                                          )
                                          .catch(error =>
                                            console.error(
                                              "Error sharing:",
                                              error
                                            )
                                          );
                                      } else {
                                        navigator.clipboard
                                          .writeText(shareText)
                                          .then(() => {
                                            alert(
                                              "متن در حافظه کپی شد و آماده ارسال به دیگرانه"
                                            );
                                          })
                                          .catch(() => {
                                            alert(
                                              "کپی کردن متن با خطا مواجه شد. لطفاً دستی کپی کن."
                                            );
                                          });
                                      }
                                    };
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode2"] != null &&
                            typeof $steps["runCode2"] === "object" &&
                            typeof $steps["runCode2"].then === "function"
                          ) {
                            $steps["runCode2"] = await $steps["runCode2"];
                          }

                          $steps["runCode"] = false
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (() => {
                                      const text = `از طریق برنامه‌ی رنتامون می‌تونی برای سایت‌های جاجیگا، اتاقک،‌ جاباما و... یکجا قیمت بذاری.

۷ تا از معروف‌ترین سایت‌های اجاره ویلا رو یکجا تجمیع کرده و امکانات اون‌ها رو توی خودش داره.

اینجا بزن 👇
rentamon.com`;
                                      return navigator.clipboard
                                        .writeText(text)
                                        .then(() =>
                                          console.log(
                                            "متن با موفقیت در کلیپ‌بورد کپی شد!"
                                          )
                                        )
                                        .catch(err =>
                                          console.error("خطا در کپی متن: ", err)
                                        );
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode"] != null &&
                            typeof $steps["runCode"] === "object" &&
                            typeof $steps["runCode"].then === "function"
                          ) {
                            $steps["runCode"] = await $steps["runCode"];
                          }

                          $steps["updateCopyTextOpen"] = false
                            ? (() => {
                                const actionArgs = {
                                  variable: {
                                    objRoot: $state,
                                    variablePath: ["shareLink", "open"]
                                  },
                                  operation: 0
                                };
                                return (({
                                  variable,
                                  value,
                                  startIndex,
                                  deleteCount
                                }) => {
                                  if (!variable) {
                                    return;
                                  }
                                  const { objRoot, variablePath } = variable;

                                  $stateSet(objRoot, variablePath, value);
                                  return value;
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["updateCopyTextOpen"] != null &&
                            typeof $steps["updateCopyTextOpen"] === "object" &&
                            typeof $steps["updateCopyTextOpen"].then ===
                              "function"
                          ) {
                            $steps["updateCopyTextOpen"] = await $steps[
                              "updateCopyTextOpen"
                            ];
                          }

                          $steps["invokeGlobalAction"] = false
                            ? (() => {
                                const actionArgs = {
                                  args: [
                                    undefined,
                                    "\u0645\u062a\u0646 \u062f\u0631 \u062d\u0627\u0641\u0638\u0647 \u06a9\u067e\u06cc \u0634\u062f \u0648 \u0622\u0645\u0627\u062f\u0647 \u0627\u0631\u0633\u0627\u0644 \u0628\u0647 \u062f\u0648\u0633\u062a\u0627\u0646\u0647 :)",
                                    "top-center"
                                  ]
                                };
                                return $globalActions[
                                  "Fragment.showToast"
                                ]?.apply(null, [...actionArgs.args]);
                              })()
                            : undefined;
                          if (
                            $steps["invokeGlobalAction"] != null &&
                            typeof $steps["invokeGlobalAction"] === "object" &&
                            typeof $steps["invokeGlobalAction"].then ===
                              "function"
                          ) {
                            $steps["invokeGlobalAction"] = await $steps[
                              "invokeGlobalAction"
                            ];
                          }

                          $steps["runCode3"] = false
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (async () => {
                                      return (async () => {
                                        const shareText = `
از طریق برنامه‌ی رنتامون می‌تونی برای سایت‌های جاجیگا، اتاقک،‌ جاباما و... یکجا قیمت بذاری.

۷ تا از معروف‌ترین سایت‌های اجاره ویلا رو یکجا تجمیع کرده و امکانات اون‌ها رو توی خودش داره.

اینجا بزن 👇
${$state.textInput.value}
`;
                                        if (navigator.share) {
                                          try {
                                            await navigator.share({
                                              text: shareText
                                            });
                                            console.log(
                                              "اشتراک‌گذاری با موفقیت انجام شد!"
                                            );
                                          } catch (err) {
                                            console.error(
                                              "خطا در اشتراک‌گذاری:",
                                              err
                                            );
                                          }
                                        } else {
                                          console.log(
                                            "مرورگر شما از Web Share API پشتیبانی نمی‌کند."
                                          );
                                        }
                                      })();
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode3"] != null &&
                            typeof $steps["runCode3"] === "object" &&
                            typeof $steps["runCode3"].then === "function"
                          ) {
                            $steps["runCode3"] = await $steps["runCode3"];
                          }
                        }}
                      >
                        {hasVariant(globalVariants, "screen", "mobile")
                          ? "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06af\u0630\u0627\u0631\u06cc"
                          : hasVariant(globalVariants, "screen", "tablet")
                          ? "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06af\u0630\u0627\u0631\u06cc"
                          : "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06af\u0630\u0627\u0631\u06cc"}
                      </div>
                      <Icon51Icon
                        data-plasmic-name={"svg"}
                        data-plasmic-override={overrides.svg}
                        className={classNames(projectcss.all, sty.svg)}
                        role={"img"}
                      />
                    </div>
                  </div>
                </AntdModal>
              </div>
            </div>
          </div>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__zy5QH)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__gdp1I)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__fDkXb)}>
                <div className={classNames(projectcss.all, sty.freeBox__z9E3B)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oysSn
                    )}
                  >
                    {"\u062f\u0639\u0648\u062a\u200c\u0647\u0627"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___9OyKc)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qqO4L
                    )}
                  >
                    {"\u0645\u0648\u0641\u0642"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__sCzW4)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kilUs
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {
                          "\u0647\u062f\u06cc\u0647 \u062f\u0631\u06cc\u0627\u0641\u062a\u06cc "
                        }
                      </React.Fragment>
                      {
                        <sup
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.sup___6KQyx
                          )}
                        >
                          {"(\u062a\u0648\u0645\u0627\u0646)"}
                        </sup>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__k4YbL)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qs8ZC
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {"\u062f\u0631 \u0627\u0646\u062a\u0638\u0627\u0631"}
                      </React.Fragment>
                      {
                        <sup
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.sup__pXuHw
                          )}
                        >
                          {"(\u062a\u0648\u0645\u0627\u0646)"}
                        </sup>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__ztFk)}>
                <div className={classNames(projectcss.all, sty.freeBox__tX50X)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__susvn
                    )}
                  >
                    <React.Fragment>
                      {(() => {
                        try {
                          return (() => {
                            let all =
                              $state.apiRequest2.data[1].statuses.paidCount +
                              $state.apiRequest2.data[1].statuses.pendingCount;
                            return all
                              .toString()
                              .replace(/\d/g, d => "۰۱۲۳۴۵۶۷۸۹"[d]);
                          })();
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return "\u062f\u0631\u062d\u0627\u0644 \u0628\u0627\u0631\u06af\u0630\u0627\u0631\u06cc";
                          }
                          throw e;
                        }
                      })()}
                    </React.Fragment>
                  </div>
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__wYvn)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bmRh
                    )}
                  >
                    <React.Fragment>
                      {(() => {
                        try {
                          return $state.apiRequest2.data[1].statuses.paidCount
                            .toString()
                            .replace(/\d/g, d => "۰۱۲۳۴۵۶۷۸۹"[d]);
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return "\u062f\u0631\u062d\u0627\u0644 \u0628\u0627\u0631\u06af\u0630\u0627\u0631\u06cc";
                          }
                          throw e;
                        }
                      })()}
                    </React.Fragment>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__znaIq)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sVmT9
                    )}
                  >
                    <React.Fragment>
                      {(() => {
                        try {
                          return (() => {
                            {
                              {
                                return (
                                  $state.apiRequest2.data[1].statuses
                                    .paidCount * 200000
                                ).toLocaleString("fa-IR");
                              }
                            }
                          })();
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return "\u062f\u0631\u062d\u0627\u0644 \u0628\u0627\u0631\u06af\u0630\u0627\u0631\u06cc";
                          }
                          throw e;
                        }
                      })()}
                    </React.Fragment>
                  </div>
                </Stack__>
                <div className={classNames(projectcss.all, sty.freeBox__eQaNs)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yods0
                    )}
                  >
                    <React.Fragment>
                      {(() => {
                        try {
                          return (() => {
                            {
                              {
                                return (
                                  $state.apiRequest2.data[1].statuses
                                    .pendingCount * 200000
                                ).toLocaleString("fa-IR");
                              }
                            }
                          })();
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return "\u062f\u0631\u062d\u0627\u0644 \u0628\u0627\u0631\u06af\u0630\u0627\u0631\u06cc";
                          }
                          throw e;
                        }
                      })()}
                    </React.Fragment>
                  </div>
                </div>
              </div>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__leVaB)}>
              <div className={classNames(projectcss.all, sty.freeBox__nIhuu)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__m5MWl
                  )}
                >
                  {
                    "\u062c\u0632\u06cc\u06cc\u0627\u062a \u062f\u0639\u0648\u062a \u0634\u0648\u0646\u062f\u0647\u200c\u0647\u0627"
                  }
                </div>
              </div>
              <ApiRequest
                data-plasmic-name={"apiRequest2"}
                data-plasmic-override={overrides.apiRequest2}
                className={classNames("__wab_instance", sty.apiRequest2)}
                errorDisplay={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dmLq6
                    )}
                  >
                    {"Error fetching data"}
                  </div>
                }
                loadingDisplay={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__l4WmW
                    )}
                  >
                    {
                      "\u062f\u0631 \u062d\u0627\u0644 \u0628\u0627\u0631\u06af\u0630\u0627\u0631\u06cc ...."
                    }
                  </div>
                }
                method={"GET"}
                onError={async (...eventArgs: any) => {
                  generateStateOnChangeProp($state, [
                    "apiRequest2",
                    "error"
                  ]).apply(null, eventArgs);
                }}
                onLoading={async (...eventArgs: any) => {
                  generateStateOnChangeProp($state, [
                    "apiRequest2",
                    "loading"
                  ]).apply(null, eventArgs);
                }}
                onSuccess={async (...eventArgs: any) => {
                  generateStateOnChangeProp($state, [
                    "apiRequest2",
                    "data"
                  ]).apply(null, eventArgs);
                }}
                ref={ref => {
                  $refs["apiRequest2"] = ref;
                }}
                url={"https://gateway.rentamon.com/webhook/get_referral_data"}
              >
                {(() => {
                  try {
                    return (
                      $state.apiRequest2.data[0].referrers[0].first_name == null
                    );
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return true;
                    }
                    throw e;
                  }
                })() ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__pIvhO)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aEReQ
                      )}
                    >
                      {
                        "\u0647\u0646\u0648\u0632 \u0647\u06cc\u0686 \u062f\u0639\u0648\u062a\u06cc \u0646\u062f\u0627\u0634\u062a\u06cc"
                      }
                    </div>
                  </div>
                ) : null}
                {(() => {
                  try {
                    return (
                      $state.apiRequest2.data[0].referrers[0].first_name != null
                    );
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return true;
                    }
                    throw e;
                  }
                })()
                  ? (_par =>
                      !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                      (() => {
                        try {
                          return $state.apiRequest2.data[0].referrers;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    ).map((__plasmic_item_0, __plasmic_idx_0) => {
                      const currentItem = __plasmic_item_0;
                      const currentIndex = __plasmic_idx_0;
                      return (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ylm9Q
                          )}
                          key={currentIndex}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__qtgvs
                            )}
                          >
                            <PlasmicLink__
                              data-plasmic-name={"link"}
                              data-plasmic-override={overrides.link}
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link
                              )}
                              component={Link}
                              href={(() => {
                                try {
                                  return `tel:${$state.apiRequest2.data[0].referrers[currentIndex].username}`;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()}
                              platform={"nextjs"}
                            >
                              <React.Fragment>
                                {(() => {
                                  try {
                                    return $state.apiRequest2.data[0].referrers[
                                      currentIndex
                                    ].username
                                      .toString()
                                      .replace(/\d/g, d => "۰۱۲۳۴۵۶۷۸۹"[d]);
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "";
                                    }
                                    throw e;
                                  }
                                })()}
                              </React.Fragment>
                            </PlasmicLink__>
                          </div>
                          {(() => {
                            try {
                              return (
                                $state.apiRequest2.data[0].referrers[
                                  currentIndex
                                ].first_name != null
                              );
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return true;
                              }
                              throw e;
                            }
                          })() ? (
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___30Pc
                              )}
                            >
                              {(() => {
                                try {
                                  return (
                                    $state.apiRequest2.data[0].referrers[
                                      currentIndex
                                    ].status != "pending"
                                  );
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return true;
                                  }
                                  throw e;
                                }
                              })() ? (
                                <PlasmicImg__
                                  alt={""}
                                  className={classNames(sty.img__qgUbn)}
                                  displayHeight={"auto"}
                                  displayMaxHeight={"none"}
                                  displayMaxWidth={"100%"}
                                  displayMinHeight={"0"}
                                  displayMinWidth={"0"}
                                  displayWidth={
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "smallMobile"
                                    )
                                      ? "30px"
                                      : "30px"
                                  }
                                  loading={"lazy"}
                                  src={{
                                    src: "/plasmic/website_starter/images/image102.svg",
                                    fullWidth: 23,
                                    fullHeight: 23,
                                    aspectRatio: 1
                                  }}
                                />
                              ) : null}
                              {(() => {
                                try {
                                  return (
                                    $state.apiRequest2.data[0].referrers[
                                      currentIndex
                                    ].status == "pending"
                                  );
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return true;
                                  }
                                  throw e;
                                }
                              })() ? (
                                <PlasmicImg__
                                  alt={""}
                                  className={classNames(sty.img__lkOxy)}
                                  displayHeight={"auto"}
                                  displayMaxHeight={"none"}
                                  displayMaxWidth={"100%"}
                                  displayMinHeight={"0"}
                                  displayMinWidth={"0"}
                                  displayWidth={"40px"}
                                  loading={"lazy"}
                                  src={{
                                    src: "/plasmic/website_starter/images/image103.svg",
                                    fullWidth: 33,
                                    fullHeight: 33,
                                    aspectRatio: 1
                                  }}
                                />
                              ) : null}
                            </Stack__>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__o47Ei
                            )}
                          >
                            {(() => {
                              try {
                                return (
                                  $state.apiRequest2.data[0].referrers[
                                    currentIndex
                                  ].username != null
                                );
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return true;
                                }
                                throw e;
                              }
                            })() ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___7UZC
                                )}
                              >
                                <React.Fragment>
                                  {(() => {
                                    try {
                                      return $state.apiRequest2.data[0]
                                        .referrers[currentIndex].status ==
                                        "pending"
                                        ? "در انتظار فعالسازی"
                                        : "دعوت موفق";
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return "";
                                      }
                                      throw e;
                                    }
                                  })()}
                                </React.Fragment>
                              </div>
                            ) : null}
                          </div>
                        </div>
                      );
                    })
                  : null}
              </ApiRequest>
            </div>
          </Stack__>
          <div
            data-plasmic-name={"rules"}
            data-plasmic-override={overrides.rules}
            className={classNames(projectcss.all, sty.rules)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fzwa0
              )}
            >
              {hasVariant(globalVariants, "screen", "smallMobile")
                ? "\u0637\u0631\u062d \u062f\u0639\u0648\u062a \u0686\u0637\u0648\u0631 \u06a9\u0627\u0631 \u0645\u06cc\u200c\u06a9\u0646\u0647\u061f"
                : hasVariant(globalVariants, "screen", "tablet")
                ? "\u0637\u0631\u062d \u062f\u0639\u0648\u062a \u0686\u0637\u0648\u0631 \u06a9\u0627\u0631 \u0645\u06cc\u200c\u06a9\u0646\u0647\u061f"
                : "\u0637\u0631\u062d \u062f\u0639\u0648\u062a \u0686\u0637\u0648\u0631 \u06a9\u0627\u0631 \u0645\u06cc\u200c\u06a9\u0646\u0647\u061f"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__wamHc
              )}
            >
              {hasVariant(globalVariants, "screen", "smallMobile")
                ? "1\ufe0f\u20e3 \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u062e\u0648\u062f\u062a \u0631\u0648 \u0628\u0631\u0627\u06cc \u062f\u06cc\u06af\u0631\u0627\u0646 \u0628\u0641\u0631\u0633\u062a\r\n2\ufe0f\u20e3 \u062f\u06cc\u06af\u0631\u0627\u0646 \u0628\u0627 \u0632\u062f\u0646 \u0631\u0648\u06cc \u0627\u06cc\u0646 \u0644\u06cc\u0646\u06a9\u060c \u062f\u0631 \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u062b\u0628\u062a\u200c\u0646\u0627\u0645 \u0645\u06cc\u200c\u06a9\u0646\u0646\r\n3\ufe0f\u20e3 \u0641\u0631\u062f \u062f\u0639\u0648\u062a \u0634\u062f\u0647\u060c \u0633\u0627\u06cc\u062a\u200c\u0647\u0627 \u0631\u0648 \u0628\u0647 \u062a\u0642\u0648\u06cc\u0645\u200c\u0627\u0634 \u0645\u062a\u0635\u0644 \u0645\u06cc\u200c\u06a9\u0646\u0647\r\n4\ufe0f\u20e3 \u0645\u0628\u0644\u063a \u06f1\u06f0\u06f0 \u0647\u0632\u0627\u0631 \u062a\u0648\u0645\u0627\u0646 \u0647\u062f\u06cc\u0647 \u0628\u0647 \u06a9\u06cc\u0641 \u067e\u0648\u0644\u062a \u0627\u0636\u0627\u0641\u0647 \u0645\u06cc\u200c\u0634\u0647\n5\ufe0f\u20e3 \u0641\u0631\u062f \u062f\u0639\u0648\u062a \u0634\u062f\u0647 \u06f1\u06f0\u06f0 \u0647\u0632\u0627\u0631 \u062a\u0648\u0645\u0627\u0646 \u0627\u0639\u062a\u0628\u0627\u0631 \u0647\u062f\u06cc\u0647 \u0645\u06cc\u200c\u06af\u06cc\u0631\u0647"
                : "1\ufe0f\u20e3 \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u062e\u0648\u062f\u062a \u0631\u0648 \u0628\u0631\u0627\u06cc \u062f\u06cc\u06af\u0631\u0627\u0646 \u0628\u0641\u0631\u0633\u062a\r\n2\ufe0f\u20e3 \u062f\u06cc\u06af\u0631\u0627\u0646 \u0628\u0627 \u0632\u062f\u0646 \u0631\u0648\u06cc \u0627\u06cc\u0646 \u0644\u06cc\u0646\u06a9\u060c \u062f\u0631 \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u062b\u0628\u062a\u200c\u0646\u0627\u0645 \u0645\u06cc\u200c\u06a9\u0646\u0646\r\n3\ufe0f\u20e3 \u0641\u0631\u062f \u062f\u0639\u0648\u062a \u0634\u062f\u0647\u060c \u0633\u0627\u06cc\u062a\u200c\u0647\u0627 \u0631\u0648 \u0628\u0647 \u062a\u0642\u0648\u06cc\u0645\u200c\u0627\u0634 \u0645\u062a\u0635\u0644 \u0645\u06cc\u200c\u06a9\u0646\u0647\r\n4\ufe0f\u20e3 \u0645\u0628\u0644\u063a \u06f1\u06f0\u06f0 \u0647\u0632\u0627\u0631 \u062a\u0648\u0645\u0627\u0646 \u0647\u062f\u06cc\u0647 \u0628\u0647 \u06a9\u06cc\u0641 \u067e\u0648\u0644\u062a \u0627\u0636\u0627\u0641\u0647 \u0645\u06cc\u200c\u0634\u0647\n5\ufe0f\u20e3 \u0641\u0631\u062f \u062f\u0639\u0648\u062a \u0634\u062f\u0647 \u06f1\u06f0\u06f0 \u0647\u0632\u0627\u0631 \u062a\u0648\u0645\u0627\u0646 \u0627\u0639\u062a\u0628\u0627\u0631 \u0647\u062f\u06cc\u0647 \u0645\u06cc\u200c\u06af\u06cc\u0631\u0647"}
            </div>
          </div>
          <div
            data-plasmic-name={"smsImage"}
            data-plasmic-override={overrides.smsImage}
            className={classNames(projectcss.all, sty.smsImage)}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__uxHdh)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={
                hasVariant(globalVariants, "screen", "mobile") ? "100%" : "100%"
              }
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/website_starter/images/image81.png",
                fullWidth: 800,
                fullHeight: 450,
                aspectRatio: undefined
              }}
            />
          </div>
          <div
            data-plasmic-name={"tips"}
            data-plasmic-override={overrides.tips}
            className={classNames(projectcss.all, sty.tips)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___8XjgW
              )}
            >
              {hasVariant(globalVariants, "screen", "smallMobile")
                ? "\u0628\u0631\u0627\u06cc \u062c\u0627\u06cc\u0632\u0647\u200c\u06cc \u0645\u06cc\u0644\u06cc\u0648\u0646\u06cc!"
                : "\u0628\u0631\u0627\u06cc \u062c\u0627\u06cc\u0632\u0647\u200c\u06cc \u0645\u06cc\u0644\u06cc\u0648\u0646\u06cc!"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__afnP3
              )}
            >
              {hasVariant(globalVariants, "screen", "smallMobile")
                ? "\u2705 \u0646\u06cc\u0627\u0632 \u0646\u06cc\u0633\u062a \u06a9\u0647 \u062d\u062a\u0645\u0627 \u0641\u0631\u062f \u062f\u0639\u0648\u062a \u0634\u062f\u0647 \u0631\u0648 \u0628\u0634\u0646\u0627\u0633\u06cc. \u06a9\u0627\u0641\u06cc\u0647 \u0627\u0641\u0631\u0627\u062f \u0628\u0627 \u0632\u062f\u0646 \u0631\u0648\u06cc \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a\u062a\u060c \u062b\u0628\u062a\u200c\u0646\u0627\u0645 \u06a9\u0646\u0646.\n\u2705 \u0647\u0631 \u06cc\u06a9 \u062f\u0639\u0648\u062a \u0645\u0648\u0641\u0642\u060c \u06f1\u06f0\u06f0 \u0647\u0632\u0627\u0631 \u062a\u0648\u0645\u0627\u0646 \u0647\u062f\u06cc\u0647 \u062f\u0627\u0631\u0647. \u067e\u0633 \u0647\u0631 \u0686\u0647 \u062f\u0639\u0648\u062a \u0628\u06cc\u0634\u062a\u0631\u060c \u062f\u0631\u0622\u0645\u062f \u0628\u06cc\u0634\u062a\u0631!\n\u2705 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u062e\u0648\u062f\u062a \u0631\u0648 \u062f\u0631 \u0627\u0633\u062a\u0648\u0631\u06cc \u0627\u06cc\u0646\u0633\u062a\u0627\u06af\u0631\u0627\u0645 \u0628\u0630\u0627\u0631\u06cc\u060c \u0648 \u06cc\u0627 \u062f\u0631 \u06af\u0631\u0648\u0647\u200c\u0647\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u200c\u0647\u0627 \u0627\u0631\u0633\u0627\u0644 \u06a9\u0646\u06cc.\n\u2705 \u0645\u062b\u0644\u0627 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u062f\u0631 \u06cc\u06a9 \u067e\u06cc\u0627\u0645 \u06cc\u0627 \u0627\u0633\u062a\u0648\u0631\u06cc\u060c \u0627\u0645\u06a9\u0627\u0646\u0627\u062a \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0631\u0648 \u0645\u0639\u0631\u0641\u06cc\u060c \u0648 \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a \u062e\u0648\u062f\u062a \u0631\u0648 \u062f\u0627\u062e\u0644\u0634 \u0628\u0630\u0627\u0631\u06cc."
                : hasVariant(globalVariants, "screen", "mobile")
                ? "\u2705 \u0646\u06cc\u0627\u0632 \u0646\u06cc\u0633\u062a \u06a9\u0647 \u062d\u062a\u0645\u0627 \u0641\u0631\u062f \u062f\u0639\u0648\u062a \u0634\u062f\u0647 \u0631\u0648 \u0628\u0634\u0646\u0627\u0633\u06cc. \u06a9\u0627\u0641\u06cc\u0647 \u0627\u0641\u0631\u0627\u062f \u0628\u0627 \u0632\u062f\u0646 \u0631\u0648\u06cc \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a\u062a\u060c \u062b\u0628\u062a\u200c\u0646\u0627\u0645 \u06a9\u0646\u0646.\n\u2705 \u0647\u0631 \u06cc\u06a9 \u062f\u0639\u0648\u062a \u0645\u0648\u0641\u0642\u060c \u06f1\u06f0\u06f0 \u0647\u0632\u0627\u0631 \u062a\u0648\u0645\u0627\u0646 \u0647\u062f\u06cc\u0647 \u062f\u0627\u0631\u0647. \u067e\u0633 \u0647\u0631 \u0686\u0647 \u062f\u0639\u0648\u062a \u0628\u06cc\u0634\u062a\u0631\u060c \u062f\u0631\u0622\u0645\u062f \u0628\u06cc\u0634\u062a\u0631!\n\u2705 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u062e\u0648\u062f\u062a \u0631\u0648 \u062f\u0631 \u0627\u0633\u062a\u0648\u0631\u06cc \u0627\u06cc\u0646\u0633\u062a\u0627\u06af\u0631\u0627\u0645 \u0628\u0630\u0627\u0631\u06cc\u060c \u0648 \u06cc\u0627 \u062f\u0631 \u06af\u0631\u0648\u0647\u200c\u0647\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u200c\u0647\u0627 \u0627\u0631\u0633\u0627\u0644 \u06a9\u0646\u06cc.\n\u2705 \u0645\u062b\u0644\u0627 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u062f\u0631 \u06cc\u06a9 \u067e\u06cc\u0627\u0645 \u06cc\u0627 \u0627\u0633\u062a\u0648\u0631\u06cc\u060c \u0627\u0645\u06a9\u0627\u0646\u0627\u062a \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0631\u0648 \u0645\u0639\u0631\u0641\u06cc\u060c \u0648 \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a \u062e\u0648\u062f\u062a \u0631\u0648 \u062f\u0627\u062e\u0644\u0634 \u0628\u0630\u0627\u0631\u06cc."
                : hasVariant(globalVariants, "screen", "tablet")
                ? "\u2705 \u0646\u06cc\u0627\u0632 \u0646\u06cc\u0633\u062a \u06a9\u0647 \u062d\u062a\u0645\u0627 \u0641\u0631\u062f \u062f\u0639\u0648\u062a \u0634\u062f\u0647 \u0631\u0648 \u0628\u0634\u0646\u0627\u0633\u06cc. \u06a9\u0627\u0641\u06cc\u0647 \u0627\u0641\u0631\u0627\u062f \u0628\u0627 \u0632\u062f\u0646 \u0631\u0648\u06cc \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a\u062a\u060c \u062b\u0628\u062a\u200c\u0646\u0627\u0645 \u06a9\u0646\u0646.\n\u2705 \u0647\u0631 \u06cc\u06a9 \u062f\u0639\u0648\u062a \u0645\u0648\u0641\u0642\u060c \u06f1\u06f0\u06f0 \u0647\u0632\u0627\u0631 \u062a\u0648\u0645\u0627\u0646 \u0647\u062f\u06cc\u0647 \u062f\u0627\u0631\u0647. \u067e\u0633 \u0647\u0631 \u0686\u0647 \u062f\u0639\u0648\u062a \u0628\u06cc\u0634\u062a\u0631\u060c \u062f\u0631\u0622\u0645\u062f \u0628\u06cc\u0634\u062a\u0631!\n\u2705 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u062e\u0648\u062f\u062a \u0631\u0648 \u062f\u0631 \u0627\u0633\u062a\u0648\u0631\u06cc \u0627\u06cc\u0646\u0633\u062a\u0627\u06af\u0631\u0627\u0645 \u0628\u0630\u0627\u0631\u06cc\u060c \u0648 \u06cc\u0627 \u062f\u0631 \u06af\u0631\u0648\u0647\u200c\u0647\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u200c\u0647\u0627 \u0627\u0631\u0633\u0627\u0644 \u06a9\u0646\u06cc.\n\u2705 \u0645\u062b\u0644\u0627 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u062f\u0631 \u06cc\u06a9 \u067e\u06cc\u0627\u0645 \u06cc\u0627 \u0627\u0633\u062a\u0648\u0631\u06cc\u060c \u0627\u0645\u06a9\u0627\u0646\u0627\u062a \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0631\u0648 \u0645\u0639\u0631\u0641\u06cc\u060c \u0648 \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a \u062e\u0648\u062f\u062a \u0631\u0648 \u062f\u0627\u062e\u0644\u0634 \u0628\u0630\u0627\u0631\u06cc."
                : "\u2705 \u0646\u06cc\u0627\u0632 \u0646\u06cc\u0633\u062a \u06a9\u0647 \u062d\u062a\u0645\u0627 \u0641\u0631\u062f \u062f\u0639\u0648\u062a \u0634\u062f\u0647 \u0631\u0648 \u0628\u0634\u0646\u0627\u0633\u06cc. \u06a9\u0627\u0641\u06cc\u0647 \u0627\u0641\u0631\u0627\u062f \u0628\u0627 \u0632\u062f\u0646 \u0631\u0648\u06cc \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a\u062a\u060c \u062b\u0628\u062a\u200c\u0646\u0627\u0645 \u06a9\u0646\u0646.\n\u2705 \u0647\u0631 \u06cc\u06a9 \u062f\u0639\u0648\u062a \u0645\u0648\u0641\u0642\u060c \u06f1\u06f0\u06f0 \u0647\u0632\u0627\u0631 \u062a\u0648\u0645\u0627\u0646 \u0647\u062f\u06cc\u0647 \u062f\u0627\u0631\u0647. \u067e\u0633 \u0647\u0631 \u0686\u0647 \u062f\u0639\u0648\u062a \u0628\u06cc\u0634\u062a\u0631\u060c \u062f\u0631\u0622\u0645\u062f \u0628\u06cc\u0634\u062a\u0631!\n\u2705 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u062e\u0648\u062f\u062a \u0631\u0648 \u062f\u0631 \u0627\u0633\u062a\u0648\u0631\u06cc \u0627\u06cc\u0646\u0633\u062a\u0627\u06af\u0631\u0627\u0645 \u0628\u0630\u0627\u0631\u06cc\u060c \u0648 \u06cc\u0627 \u062f\u0631 \u06af\u0631\u0648\u0647\u200c\u0647\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u200c\u0647\u0627 \u0627\u0631\u0633\u0627\u0644 \u06a9\u0646\u06cc.\n\u2705 \u0645\u062b\u0644\u0627 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u062f\u0631 \u06cc\u06a9 \u067e\u06cc\u0627\u0645 \u06cc\u0627 \u0627\u0633\u062a\u0648\u0631\u06cc\u060c \u0627\u0645\u06a9\u0627\u0646\u0627\u062a \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0631\u0648 \u0645\u0639\u0631\u0641\u06cc\u060c \u0648 \u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a \u062e\u0648\u062f\u062a \u0631\u0648 \u062f\u0627\u062e\u0644\u0634 \u0628\u0630\u0627\u0631\u06cc."}
            </div>
          </div>
          <div
            data-plasmic-name={"html"}
            data-plasmic-override={overrides.html}
            className={classNames(projectcss.all, sty.html)}
          >
            <Embed
              data-plasmic-name={"clarity2"}
              data-plasmic-override={overrides.clarity2}
              className={classNames("__wab_instance", sty.clarity2)}
              code={
                '<script type="text/javascript">\r\n    (function(c,l,a,r,i,t,y){\r\n        c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};\r\n        t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;\r\n        y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);\r\n    })(window, document, "clarity", "script", "iv4wnfjr7k");\r\n</script>'
              }
            />

            <Embed
              data-plasmic-name={"goftino"}
              data-plasmic-override={overrides.goftino}
              className={classNames("__wab_instance", sty.goftino)}
              code={
                '<script type="text/javascript">\r\n  !function(){var i="WgsGXv",a=window,d=document;function g(){var g=d.createElement("script"),s="https://www.goftino.com/widget/"+i,l=localStorage.getItem("goftino_"+i);g.async=!0,g.src=l?s+"?o="+l:s;d.getElementsByTagName("head")[0].appendChild(g);}"complete"===d.readyState?g():a.attachEvent?a.attachEvent("onload",g):a.addEventListener("load",g,!1);}();\r\n</script>'
              }
            />
          </div>
          <RentamonFooter
            data-plasmic-name={"rentamonFooter"}
            data-plasmic-override={overrides.rentamonFooter}
            className={classNames("__wab_instance", sty.rentamonFooter)}
          />

          <SideEffect
            data-plasmic-name={"sideEffect"}
            data-plasmic-override={overrides.sideEffect}
            className={classNames("__wab_instance", sty.sideEffect)}
            onMount={async () => {
              const $steps = {};

              $steps["runCode"] = true
                ? (() => {
                    const actionArgs = {
                      customFunction: async () => {
                        return (async () => {
                          const isPlasmicStudio =
                            Object.values($ctx.Fragment.previewApiConfig)
                              .length > 0;
                          console.log("side effect started");
                          async function refreshToken() {
                            if (isPlasmicStudio) return;
                            console.log("side effect in the cudition");
                            try {
                              const response = await fetch(
                                "https://sso.rentamon.com/auth/refresh",
                                {
                                  method: "GET",
                                  credentials: "include"
                                }
                              );
                              console.log("Refreshed Token in 10 minutes");
                              if (response.ok) {
                                const data = await response.json();
                                console.log(
                                  "Token refreshed successfully:",
                                  data
                                );
                              } else {
                                console.error(
                                  "Failed to refresh token:",
                                  response.status
                                );
                              }
                            } catch (error) {
                              console.error("Error refreshing token:", error);
                            }
                          }
                          setInterval(refreshToken, 300000);
                          refreshToken();
                          function getCookie(name) {
                            const value = `; ${globalThis.document.cookie}`;
                            const parts = value.split(`; ${name}=`);
                            if (parts.length === 2)
                              return parts.pop().split(";").shift();
                          }
                          const ussoRefreshAvailable =
                            getCookie("usso_refresh_available") || false;
                          console.log(
                            "this is ussoRefresh: ",
                            ussoRefreshAvailable
                          );
                          const ussoAccessAvailable =
                            getCookie("usso_access_available") || false;
                          console.log(
                            "this is ussoAccessAvailable: ",
                            ussoAccessAvailable
                          );
                          if (!ussoAccessAvailable && !isPlasmicStudio) {
                            if (!ussoRefreshAvailable) {
                              console.log("got here in redirect");
                              return (window.location.href =
                                "https://sso.rentamon.com/web/index.html?callback=https://app.rentamon.com/referral/");
                            } else {
                              console.log("got here in refreshToken");
                              return fetch(
                                "https://sso.rentamon.com/auth/refresh",
                                {
                                  method: "GET",
                                  credentials: "include"
                                }
                              )
                                .then(response => {
                                  if (!response.ok) {
                                    throw new Error("Failed to refresh token");
                                  }
                                  return response.json();
                                })
                                .then(data => {
                                  console.log("Token refreshed:", data);
                                  window.location.reload();
                                })
                                .catch(error => {
                                  console.error("Error:", error);
                                  window.location.href =
                                    "https://sso.rentamon.com/web/index.html?callback=https://app.rentamon.com/referral/";
                                });
                            }
                          }
                        })();
                      }
                    };
                    return (({ customFunction }) => {
                      return customFunction();
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["runCode"] != null &&
                typeof $steps["runCode"] === "object" &&
                typeof $steps["runCode"].then === "function"
              ) {
                $steps["runCode"] = await $steps["runCode"];
              }
            }}
          />

          <NavigationRntFooter
            data-plasmic-name={"navigationRntFooter"}
            data-plasmic-override={overrides.navigationRntFooter}
            className={classNames("__wab_instance", sty.navigationRntFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbarRentamonComponent",
    "mainContents",
    "intro1st",
    "introTitle",
    "teamImage",
    "introImage",
    "introduction",
    "embedHtml",
    "cta",
    "ctaText",
    "ctaButton",
    "textInput",
    "apiRequest",
    "ctaText2",
    "shareLink",
    "refertxt",
    "ctaButton2",
    "svg",
    "apiRequest2",
    "link",
    "rules",
    "smsImage",
    "tips",
    "html",
    "clarity2",
    "goftino",
    "rentamonFooter",
    "sideEffect",
    "navigationRntFooter"
  ],
  navbarRentamonComponent: ["navbarRentamonComponent"],
  mainContents: [
    "mainContents",
    "intro1st",
    "introTitle",
    "teamImage",
    "introImage",
    "introduction",
    "embedHtml",
    "cta",
    "ctaText",
    "ctaButton",
    "textInput",
    "apiRequest",
    "ctaText2",
    "shareLink",
    "refertxt",
    "ctaButton2",
    "svg"
  ],
  intro1st: [
    "intro1st",
    "introTitle",
    "teamImage",
    "introImage",
    "introduction",
    "embedHtml",
    "cta",
    "ctaText",
    "ctaButton",
    "textInput",
    "apiRequest",
    "ctaText2",
    "shareLink",
    "refertxt",
    "ctaButton2",
    "svg"
  ],
  introTitle: ["introTitle"],
  teamImage: ["teamImage", "introImage", "introduction", "embedHtml"],
  introImage: ["introImage"],
  introduction: ["introduction"],
  embedHtml: ["embedHtml"],
  cta: [
    "cta",
    "ctaText",
    "ctaButton",
    "textInput",
    "apiRequest",
    "ctaText2",
    "shareLink",
    "refertxt",
    "ctaButton2",
    "svg"
  ],
  ctaText: ["ctaText"],
  ctaButton: ["ctaButton", "textInput", "apiRequest"],
  textInput: ["textInput"],
  apiRequest: ["apiRequest"],
  ctaText2: ["ctaText2"],
  shareLink: ["shareLink", "refertxt", "ctaButton2", "svg"],
  refertxt: ["refertxt"],
  ctaButton2: ["ctaButton2", "svg"],
  svg: ["svg"],
  apiRequest2: ["apiRequest2", "link"],
  link: ["link"],
  rules: ["rules"],
  smsImage: ["smsImage"],
  tips: ["tips"],
  html: ["html", "clarity2", "goftino"],
  clarity2: ["clarity2"],
  goftino: ["goftino"],
  rentamonFooter: ["rentamonFooter"],
  sideEffect: ["sideEffect"],
  navigationRntFooter: ["navigationRntFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbarRentamonComponent: typeof NavbarRentamonComponent;
  mainContents: "div";
  intro1st: "div";
  introTitle: "div";
  teamImage: "div";
  introImage: "div";
  introduction: "div";
  embedHtml: typeof Embed;
  cta: "div";
  ctaText: "div";
  ctaButton: "div";
  textInput: typeof TextInput;
  apiRequest: typeof ApiRequest;
  ctaText2: "div";
  shareLink: typeof AntdModal;
  refertxt: "div";
  ctaButton2: "div";
  svg: "svg";
  apiRequest2: typeof ApiRequest;
  link: "a";
  rules: "div";
  smsImage: "div";
  tips: "div";
  html: "div";
  clarity2: typeof Embed;
  goftino: typeof Embed;
  rentamonFooter: typeof RentamonFooter;
  sideEffect: typeof SideEffect;
  navigationRntFooter: typeof NavigationRntFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicReferral__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicReferral__VariantsArgs;
    args?: PlasmicReferral__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicReferral__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicReferral__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicReferral__ArgProps,
          internalVariantPropNames: PlasmicReferral__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicReferral__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicReferral";
  } else {
    func.displayName = `PlasmicReferral.${nodeName}`;
  }
  return func;
}

export const PlasmicReferral = Object.assign(
  // Top-level PlasmicReferral renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbarRentamonComponent: makeNodeComponent("navbarRentamonComponent"),
    mainContents: makeNodeComponent("mainContents"),
    intro1st: makeNodeComponent("intro1st"),
    introTitle: makeNodeComponent("introTitle"),
    teamImage: makeNodeComponent("teamImage"),
    introImage: makeNodeComponent("introImage"),
    introduction: makeNodeComponent("introduction"),
    embedHtml: makeNodeComponent("embedHtml"),
    cta: makeNodeComponent("cta"),
    ctaText: makeNodeComponent("ctaText"),
    ctaButton: makeNodeComponent("ctaButton"),
    textInput: makeNodeComponent("textInput"),
    apiRequest: makeNodeComponent("apiRequest"),
    ctaText2: makeNodeComponent("ctaText2"),
    shareLink: makeNodeComponent("shareLink"),
    refertxt: makeNodeComponent("refertxt"),
    ctaButton2: makeNodeComponent("ctaButton2"),
    svg: makeNodeComponent("svg"),
    apiRequest2: makeNodeComponent("apiRequest2"),
    link: makeNodeComponent("link"),
    rules: makeNodeComponent("rules"),
    smsImage: makeNodeComponent("smsImage"),
    tips: makeNodeComponent("tips"),
    html: makeNodeComponent("html"),
    clarity2: makeNodeComponent("clarity2"),
    goftino: makeNodeComponent("goftino"),
    rentamonFooter: makeNodeComponent("rentamonFooter"),
    sideEffect: makeNodeComponent("sideEffect"),
    navigationRntFooter: makeNodeComponent("navigationRntFooter"),

    // Metadata about props expected for PlasmicReferral
    internalVariantProps: PlasmicReferral__VariantProps,
    internalArgProps: PlasmicReferral__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "دعوت دوستان به رنتامون",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicReferral;
/* prettier-ignore-end */
