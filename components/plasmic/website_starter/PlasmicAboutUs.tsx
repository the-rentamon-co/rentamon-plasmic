/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7SNMkB8UMukVgcWJYokeAQ
// Component: eddiHU6vfbzN

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import NavbarRntHeader from "../../NavbarRntHeader"; // plasmic-import: gWac1FMbIJat/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import RentamonFooter from "../../RentamonFooter"; // plasmic-import: DSdlo5kdtbOe/component
import { SideEffect } from "@plasmicpkgs/plasmic-basic-components";

import { useScreenVariants as useScreenVariantsaSuSwU8JUYf } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: aSUSwU8jUYf-/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/projectcss
import sty from "./PlasmicAboutUs.module.css"; // plasmic-import: eddiHU6vfbzN/css

createPlasmicElementProxy;

export type PlasmicAboutUs__VariantMembers = {};
export type PlasmicAboutUs__VariantsArgs = {};
type VariantPropType = keyof PlasmicAboutUs__VariantsArgs;
export const PlasmicAboutUs__VariantProps = new Array<VariantPropType>();

export type PlasmicAboutUs__ArgsType = {};
type ArgPropType = keyof PlasmicAboutUs__ArgsType;
export const PlasmicAboutUs__ArgProps = new Array<ArgPropType>();

export type PlasmicAboutUs__OverridesType = {
  root?: Flex__<"div">;
  navbarRntHeader?: Flex__<typeof NavbarRntHeader>;
  mainContents?: Flex__<"div">;
  intro1st?: Flex__<"div">;
  introTitle?: Flex__<"div">;
  دربارهما?: Flex__<"div">;
  teamImage?: Flex__<"div">;
  introCalendarLeft?: Flex__<"div">;
  introduction?: Flex__<"div">;
  team?: Flex__<"div">;
  sectionTitle?: Flex__<"div">;
  member13?: Flex__<"div">;
  icon13?: Flex__<"div">;
  title14?: Flex__<"div">;
  caption13?: Flex__<"div">;
  member14?: Flex__<"div">;
  icon14?: Flex__<"div">;
  title15?: Flex__<"div">;
  caption14?: Flex__<"div">;
  member15?: Flex__<"div">;
  icon15?: Flex__<"div">;
  title16?: Flex__<"div">;
  caption15?: Flex__<"div">;
  member16?: Flex__<"div">;
  icon16?: Flex__<"div">;
  title17?: Flex__<"div">;
  caption16?: Flex__<"div">;
  member17?: Flex__<"div">;
  icon17?: Flex__<"div">;
  title18?: Flex__<"div">;
  caption17?: Flex__<"div">;
  member18?: Flex__<"div">;
  icon18?: Flex__<"div">;
  title19?: Flex__<"div">;
  caption18?: Flex__<"div">;
  principles?: Flex__<"div">;
  title7?: Flex__<"div">;
  uotlines?: Flex__<"div">;
  ul?: Flex__<"ul">;
  gallery?: Flex__<"div">;
  introAutoSyncGif2?: Flex__<"div">;
  teamup?: Flex__<"div">;
  introAutoSyncTitle3?: Flex__<"div">;
  introAutoSyncCaption3?: Flex__<"div">;
  address?: Flex__<"div">;
  content?: Flex__<"div">;
  addressText?: Flex__<"div">;
  map?: Flex__<"div">;
  embedHtml?: Flex__<typeof Embed>;
  html?: Flex__<"div">;
  clarity2?: Flex__<typeof Embed>;
  goftino?: Flex__<typeof Embed>;
  rentamonFooter?: Flex__<typeof RentamonFooter>;
  sideEffect?: Flex__<typeof SideEffect>;
};

export interface DefaultAboutUsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicAboutUs__RenderFunc(props: {
  variants: PlasmicAboutUs__VariantsArgs;
  args: PlasmicAboutUs__ArgsType;
  overrides: PlasmicAboutUs__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "propertyId",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsaSuSwU8JUYf()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicAboutUs.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicAboutUs.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicAboutUs.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <NavbarRntHeader
            data-plasmic-name={"navbarRntHeader"}
            data-plasmic-override={overrides.navbarRntHeader}
            className={classNames("__wab_instance", sty.navbarRntHeader)}
          />

          <div
            data-plasmic-name={"mainContents"}
            data-plasmic-override={overrides.mainContents}
            className={classNames(projectcss.all, sty.mainContents)}
          >
            <div
              data-plasmic-name={"intro1st"}
              data-plasmic-override={overrides.intro1st}
              className={classNames(projectcss.all, sty.intro1st)}
            >
              <div
                data-plasmic-name={"introTitle"}
                data-plasmic-override={overrides.introTitle}
                className={classNames(projectcss.all, sty.introTitle)}
              >
                <div
                  data-plasmic-name={
                    "\u062f\u0631\u0628\u0627\u0631\u0647\u0645\u0627"
                  }
                  data-plasmic-override={overrides.دربارهما}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.دربارهما,
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "fadeinf"
                      : undefined
                  )}
                >
                  {"\u062f\u0631\u0628\u0627\u0631\u0647 \u0645\u0627"}
                </div>
              </div>
              <div
                data-plasmic-name={"teamImage"}
                data-plasmic-override={overrides.teamImage}
                className={classNames(projectcss.all, sty.teamImage)}
              >
                <div
                  data-plasmic-name={"introCalendarLeft"}
                  data-plasmic-override={overrides.introCalendarLeft}
                  className={classNames(projectcss.all, sty.introCalendarLeft)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(
                      sty.img__gyl5M,
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "fadeinf"
                        : undefined
                    )}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/teamJpg.jpg",
                      fullWidth: 800,
                      fullHeight: 222,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"introduction"}
              data-plasmic-override={overrides.introduction}
              className={classNames(projectcss.all, sty.introduction)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qfSbm
                )}
              >
                {
                  "\u062d\u062f\u0648\u062f \u06f4\u06f0 \u0647\u0632\u0627\u0631 \u0646\u0641\u0631 \u0627\u0632 \u0637\u0631\u06cc\u0642 \u067e\u0644\u062a\u0641\u0631\u0645\u200c\u0647\u0627\u06cc \u062c\u0627\u062c\u06cc\u06af\u0627\u060c \u062c\u0627\u0628\u0627\u0645\u0627\u060c \u0627\u062a\u0627\u0642\u06a9 \u0648\u2026 \u062f\u0631\u0622\u0645\u062f\u0632\u0627\u06cc\u06cc \u0645\u06cc\u200c\u06a9\u0646\u0646\u062f. \u0627\u0645\u0627 \u0628\u0647 \u062f\u0644\u06cc\u0644 \u00ab\u0646\u06cc\u0627\u0632 \u0628\u0647 \u0645\u062f\u06cc\u0631\u06cc\u062a \u0648\u0636\u0639\u06cc\u062a \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0631 \u0686\u0646\u062f\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u06cc \u0645\u062e\u062a\u0644\u0641\u00bb \u0631\u0633\u06cc\u062f\u0646 \u0628\u0647 \u062d\u062f\u0627\u06a9\u062b\u0631 \u0638\u0631\u0641\u06cc\u062a\u0650 \u062f\u0631\u0622\u0645\u062f\u060c \u06a9\u0627\u0631 \u0628\u0633\u06cc\u0627\u0631 \u0633\u062e\u062a \u0648 \u0648\u0642\u062a\u200c\u06af\u06cc\u0631\u06cc\u0647.\r\n\r"
                }
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__iTajt
                )}
              >
                {
                  "\u0634\u0631\u06a9\u062a \u062a\u0648\u0633\u0639\u0647 \u0641\u0646\u0627\u0648\u0631\u06cc \u0648 \u062a\u0648\u0627\u0646\u0645\u062f\u0633\u0627\u0632\u06cc \u0634\u0631\u06cc\u0641 (\u0631\u0646\u062a\u0627\u0645\u0648\u0646) \u0628\u0647 \u0634\u0645\u0627\u0631\u0647 \u062b\u0628\u062a \u06f2\u06f2\u06f5\u06f7\u06f7\u060c \u0628\u0627 \u0627\u0631\u0627\u0626\u0647 \u067e\u0646\u0644 \u0645\u062f\u06cc\u0631\u06cc\u062a \u06cc\u06a9\u067e\u0627\u0631\u0686\u0647 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647\u060c \u0645\u062f\u06cc\u0631\u06cc\u062a \u0648\u0636\u0639\u06cc\u062a \u062a\u0642\u0648\u06cc\u0645 \u0648 \u0646\u0631\u062e\u200c\u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0631\u0627\u06cc \u0635\u0627\u062d\u0628\u06cc\u0646 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062e\u0648\u062f\u06a9\u0627\u0631 \u0648 \u0686\u0646\u062f\u06cc\u0646 \u0628\u0631\u0627\u0628\u0631 \u0633\u0631\u06cc\u0639 \u0645\u06cc\u200c\u06a9\u0646\u0647. \u0645\u0639\u062a\u0642\u062f\u06cc\u0645 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0627\u06cc\u0646 \u0645\u062d\u0635\u0648\u0644 \u062a\u0648\u0633\u0637 \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646\u060c \u0645\u0646\u062c\u0631 \u0628\u0647 \u0633\u0647\u0648\u0644\u062a \u0648 \u0628\u0647\u0628\u0648\u062f \u06a9\u06cc\u0641\u06cc\u062a \u062a\u0639\u0627\u0645\u0644 \u0628\u0627 \u067e\u0644\u062a\u0641\u0631\u0645\u200c\u0647\u0627 \u0648 \u062d\u062a\u06cc \u0645\u0633\u0627\u0641\u0631\u0647\u0627 \u0645\u06cc\u0634\u0647\u060c \u0648 \u0646\u0647\u0627\u06cc\u062a\u0627 \u0635\u0646\u0639\u062a \u06af\u0631\u062f\u0634\u06af\u0631\u06cc \u06a9\u0634\u0648\u0631 \u0631\u0648\u0646\u0642 \u067e\u06cc\u062f\u0627 \u0645\u06cc\u200c\u06a9\u0646\u0647. \u0627\u06cc\u0646 \u0647\u062f\u0641\u0647 \u06a9\u0647 \u0645\u0627 \u0631\u0648 \u062f\u0648\u0631 \u0647\u0645 \u062c\u0645\u0639 \u06a9\u0631\u062f\u0647.\r"
                }
              </div>
            </div>
            <div
              data-plasmic-name={"team"}
              data-plasmic-override={overrides.team}
              className={classNames(
                projectcss.all,
                sty.team,
                hasVariant(globalVariants, "screen", "mobile")
                  ? "fadein"
                  : "fadein"
              )}
            >
              <div
                data-plasmic-name={"sectionTitle"}
                data-plasmic-override={overrides.sectionTitle}
                className={classNames(projectcss.all, sty.sectionTitle)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lJFb
                  )}
                >
                  {
                    "\u0622\u0634\u0646\u0627\u06cc\u06cc \u0628\u0627 \u062a\u06cc\u0645 \u0631\u0646\u062a\u0627\u0645\u0648\u0646"
                  }
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__jYb4P)}>
                <div className={classNames(projectcss.all, sty.freeBox__sw6Bz)}>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"member13"}
                    data-plasmic-override={overrides.member13}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.member13)}
                  >
                    <div
                      data-plasmic-name={"icon13"}
                      data-plasmic-override={overrides.icon13}
                      className={classNames(projectcss.all, sty.icon13)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__xwj8W)}
                        displayHeight={"auto"}
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "none"
                            : "120px"
                        }
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "80%"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "none"
                            : "120px"
                        }
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "auto"
                            : "120px"
                        }
                        displayMinWidth={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "auto"
                            : "120px"
                        }
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "70%"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "80%"
                            : "auto"
                        }
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/boojarJpg.jpg",
                          fullWidth: 300,
                          fullHeight: 300,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"title14"}
                      data-plasmic-override={overrides.title14}
                      className={classNames(projectcss.all, sty.title14)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5Juuk
                        )}
                        onClick={async event => {
                          const $steps = {};

                          $steps["updatePropertyId"] = true
                            ? (() => {
                                const actionArgs = {
                                  variable: {
                                    objRoot: $state,
                                    variablePath: ["propertyId"]
                                  },
                                  operation: 0
                                };
                                return (({
                                  variable,
                                  value,
                                  startIndex,
                                  deleteCount
                                }) => {
                                  if (!variable) {
                                    return;
                                  }
                                  const { objRoot, variablePath } = variable;

                                  $stateSet(objRoot, variablePath, value);
                                  return value;
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["updatePropertyId"] != null &&
                            typeof $steps["updatePropertyId"] === "object" &&
                            typeof $steps["updatePropertyId"].then ===
                              "function"
                          ) {
                            $steps["updatePropertyId"] = await $steps[
                              "updatePropertyId"
                            ];
                          }
                        }}
                      >
                        {
                          "\u0646\u0627\u0632\u0646\u06cc\u0646 \u0628\u0648\u062c\u0627\u0631"
                        }
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"caption13"}
                      data-plasmic-override={overrides.caption13}
                      className={classNames(projectcss.all, sty.caption13)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xc1NB
                        )}
                        onClick={async event => {
                          const $steps = {};

                          $steps["runCode"] = true
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (() => {
                                      return window.open(
                                        "https://www.linkedin.com/in/nazaninboojar/",
                                        "_blank"
                                      );
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode"] != null &&
                            typeof $steps["runCode"] === "object" &&
                            typeof $steps["runCode"].then === "function"
                          ) {
                            $steps["runCode"] = await $steps["runCode"];
                          }
                        }}
                      >
                        {
                          "\u0647\u0645\u200c\u0628\u0646\u06cc\u0627\u0646\u200c\u06af\u0630\u0627\u0631 \u0648 \u0645\u062f\u06cc\u0631\u0645\u062d\u0635\u0648\u0644"
                        }
                      </div>
                    </div>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__fpiMh)}>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"member14"}
                    data-plasmic-override={overrides.member14}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.member14)}
                  >
                    <div
                      data-plasmic-name={"icon14"}
                      data-plasmic-override={overrides.icon14}
                      className={classNames(projectcss.all, sty.icon14)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__joyhH)}
                        displayHeight={"auto"}
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "none"
                            : "120px"
                        }
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "80%"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "none"
                            : "120px"
                        }
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "auto"
                            : "120px"
                        }
                        displayMinWidth={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "auto"
                            : "120px"
                        }
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "70%"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "80%"
                            : "auto"
                        }
                        loading={"lazy"}
                        src={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? {
                                src: "/plasmic/website_starter/images/abolhassaniJpg.jpg",
                                fullWidth: 300,
                                fullHeight: 300,
                                aspectRatio: undefined
                              }
                            : {
                                src: "/plasmic/website_starter/images/photo20240703115630288X300Webp.webp",
                                fullWidth: 288,
                                fullHeight: 300,
                                aspectRatio: undefined
                              }
                        }
                      />
                    </div>
                    <div
                      data-plasmic-name={"title15"}
                      data-plasmic-override={overrides.title15}
                      className={classNames(projectcss.all, sty.title15)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___6Yvin
                        )}
                      >
                        {
                          "\u0632\u0647\u0631\u0627 \u0627\u0628\u0648\u0627\u0644\u062d\u0633\u0646\u06cc"
                        }
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"caption14"}
                      data-plasmic-override={overrides.caption14}
                      className={classNames(projectcss.all, sty.caption14)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__p31Yw
                        )}
                        onClick={async event => {
                          const $steps = {};

                          $steps["runCode"] = true
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (() => {
                                      return window.open(
                                        "https://www.linkedin.com/in/zahra-abolhasani-375125315/",
                                        "_blank"
                                      );
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode"] != null &&
                            typeof $steps["runCode"] === "object" &&
                            typeof $steps["runCode"].then === "function"
                          ) {
                            $steps["runCode"] = await $steps["runCode"];
                          }
                        }}
                      >
                        {
                          "\u0645\u0648\u0641\u0642\u06cc\u062a \u06a9\u0627\u0631\u0628\u0631\u0627\u0646"
                        }
                      </div>
                    </div>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__hwjvi)}>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"member15"}
                    data-plasmic-override={overrides.member15}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.member15)}
                  >
                    <div
                      data-plasmic-name={"icon15"}
                      data-plasmic-override={overrides.icon15}
                      className={classNames(projectcss.all, sty.icon15)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__twbaf)}
                        displayHeight={"auto"}
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "none"
                            : "120px"
                        }
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "80%"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "none"
                            : "120px"
                        }
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "auto"
                            : "120px"
                        }
                        displayMinWidth={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "auto"
                            : "120px"
                        }
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "70%"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "80%"
                            : "auto"
                        }
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/photo20240908194639300X300Jpg.jpg",
                          fullWidth: 300,
                          fullHeight: 300,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"title16"}
                      data-plasmic-override={overrides.title16}
                      className={classNames(projectcss.all, sty.title16)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mt7SY
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "tablet")
                          ? "\u0639\u0644\u06cc\u0631\u0636\u0627 \u0646\u06cc\u06a9\u0648\u0646\u06cc\u0627"
                          : "\u0633\u06cc\u062f \u0639\u0644\u06cc\u0631\u0636\u0627 \u0646\u06cc\u06a9\u0648\u0646\u06cc\u0627"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"caption15"}
                      data-plasmic-override={overrides.caption15}
                      className={classNames(projectcss.all, sty.caption15)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__at5Mx
                        )}
                        onClick={async event => {
                          const $steps = {};

                          $steps["runCode"] = true
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (() => {
                                      return window.open(
                                        "https://www.linkedin.com/in/alireza-nikouniya/",
                                        "_blank"
                                      );
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode"] != null &&
                            typeof $steps["runCode"] === "object" &&
                            typeof $steps["runCode"].then === "function"
                          ) {
                            $steps["runCode"] = await $steps["runCode"];
                          }
                        }}
                      >
                        {
                          "\u062a\u0648\u0633\u0639\u0647\u200c\u062f\u0647\u0646\u062f\u0647 \u0646\u0631\u0645\u200c\u0627\u0641\u0632\u0627\u0631"
                        }
                      </div>
                    </div>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox___30Av)}>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"member16"}
                    data-plasmic-override={overrides.member16}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.member16)}
                  >
                    <div
                      data-plasmic-name={"icon16"}
                      data-plasmic-override={overrides.icon16}
                      className={classNames(projectcss.all, sty.icon16)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__pwLhz)}
                        displayHeight={"auto"}
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "none"
                            : "120px"
                        }
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "80%"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "none"
                            : "120px"
                        }
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "auto"
                            : "120px"
                        }
                        displayMinWidth={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "auto"
                            : "120px"
                        }
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "70%"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "80%"
                            : "auto"
                        }
                        loading={"lazy"}
                        src={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? {
                                src: "/plasmic/website_starter/images/parsaJpg2.jpg",
                                fullWidth: 300,
                                fullHeight: 300,
                                aspectRatio: undefined
                              }
                            : {
                                src: "/plasmic/website_starter/images/parsaJpg.jpg",
                                fullWidth: 243,
                                fullHeight: 243,
                                aspectRatio: undefined
                              }
                        }
                      />
                    </div>
                    <div
                      data-plasmic-name={"title17"}
                      data-plasmic-override={overrides.title17}
                      className={classNames(projectcss.all, sty.title17)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__oUshg
                        )}
                      >
                        {
                          "\u067e\u0627\u0631\u0633\u0627 \u062e\u0633\u0631\u0648\u06cc"
                        }
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"caption16"}
                      data-plasmic-override={overrides.caption16}
                      className={classNames(projectcss.all, sty.caption16)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ms3SB
                        )}
                        onClick={async event => {
                          const $steps = {};

                          $steps["runCode"] = true
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (() => {
                                      return window.open(
                                        "https://www.linkedin.com/in/parsa-khosravi-70432a244/",
                                        "_blank"
                                      );
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode"] != null &&
                            typeof $steps["runCode"] === "object" &&
                            typeof $steps["runCode"].then === "function"
                          ) {
                            $steps["runCode"] = await $steps["runCode"];
                          }
                        }}
                      >
                        {
                          "\u062a\u0648\u0633\u0639\u0647\u200c\u062f\u0647\u0646\u062f\u0647 \u0641\u0646\u06cc"
                        }
                      </div>
                    </div>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__xvu5G)}>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"member17"}
                    data-plasmic-override={overrides.member17}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.member17)}
                  >
                    <div
                      data-plasmic-name={"icon17"}
                      data-plasmic-override={overrides.icon17}
                      className={classNames(projectcss.all, sty.icon17)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__pdcvq)}
                        displayHeight={"auto"}
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "none"
                            : "120px"
                        }
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "80%"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "none"
                            : "120px"
                        }
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "auto"
                            : "120px"
                        }
                        displayMinWidth={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "auto"
                            : "120px"
                        }
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "70%"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "80%"
                            : "auto"
                        }
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/small300X288Jpg2.jpg",
                          fullWidth: 300,
                          fullHeight: 300,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"title18"}
                      data-plasmic-override={overrides.title18}
                      className={classNames(projectcss.all, sty.title18)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fD02V
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "tablet")
                          ? "\u0645\u0635\u0637\u0641\u06cc \u0641\u0642\u06cc\u0647"
                          : "\u0633\u06cc\u062f \u0645\u0635\u0637\u0641\u06cc \u0641\u0642\u06cc\u0647"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"caption17"}
                      data-plasmic-override={overrides.caption17}
                      className={classNames(projectcss.all, sty.caption17)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___3DnQx
                        )}
                        onClick={async event => {
                          const $steps = {};

                          $steps["runCode"] = true
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (() => {
                                      return window.open(
                                        "https://www.linkedin.com/in/mostafa-faghih/",
                                        "_blank"
                                      );
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode"] != null &&
                            typeof $steps["runCode"] === "object" &&
                            typeof $steps["runCode"].then === "function"
                          ) {
                            $steps["runCode"] = await $steps["runCode"];
                          }
                        }}
                      >
                        {
                          "\u0628\u0646\u06cc\u0627\u0646\u200c\u06af\u0630\u0627\u0631 \u0648 \u0645\u062f\u06cc\u0631\u0639\u0627\u0645\u0644"
                        }
                      </div>
                    </div>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__qPe16)}>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"member18"}
                    data-plasmic-override={overrides.member18}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.member18)}
                  >
                    <div
                      data-plasmic-name={"icon18"}
                      data-plasmic-override={overrides.icon18}
                      className={classNames(projectcss.all, sty.icon18)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___36Rv)}
                        displayHeight={"auto"}
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "none"
                            : "120px"
                        }
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "80%"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "none"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "none"
                            : "120px"
                        }
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "auto"
                            : "120px"
                        }
                        displayMinWidth={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "auto"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "auto"
                            : "120px"
                        }
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "70%"
                            : hasVariant(globalVariants, "screen", "tablet")
                            ? "80%"
                            : "auto"
                        }
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/hamidiJpg.jpg",
                          fullWidth: 300,
                          fullHeight: 300,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"title19"}
                      data-plasmic-override={overrides.title19}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.title19)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___75Pai
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "tablet")
                          ? "\u0645\u062d\u0645\u062f \u062d\u0633\u06cc\u0646 \u062d\u0645\u06cc\u062f\u06cc"
                          : "\u0645\u062d\u0645\u062f\u062d\u0633\u06cc\u0646 \u062d\u0645\u06cc\u062f\u06cc"}
                      </div>
                    </Stack__>
                    <div
                      data-plasmic-name={"caption18"}
                      data-plasmic-override={overrides.caption18}
                      className={classNames(projectcss.all, sty.caption18)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jPxzh
                        )}
                        onClick={async event => {
                          const $steps = {};

                          $steps["runCode"] = true
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (() => {
                                      return window.open(
                                        "https://www.linkedin.com/in/s-m-hossein-hamidi/",
                                        "_blank"
                                      );
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode"] != null &&
                            typeof $steps["runCode"] === "object" &&
                            typeof $steps["runCode"].then === "function"
                          ) {
                            $steps["runCode"] = await $steps["runCode"];
                          }
                        }}
                      >
                        {hasVariant(globalVariants, "screen", "tablet")
                          ? "\u0645\u0634\u0627\u0648\u0631 \u0648 \u0631\u0627\u0647\u0628\u0631"
                          : "\u0645\u0634\u0627\u0648\u0631 \u0648 \u0631\u0627\u0647\u0628\u0631 \u0645\u062d\u0635\u0648\u0644"}
                      </div>
                    </div>
                  </Stack__>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"principles"}
              data-plasmic-override={overrides.principles}
              className={classNames(projectcss.all, sty.principles)}
            >
              <div
                data-plasmic-name={"title7"}
                data-plasmic-override={overrides.title7}
                className={classNames(projectcss.all, sty.title7)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tywBr
                  )}
                >
                  {
                    "\u0627\u0635\u0648\u0644 \u062d\u0627\u06a9\u0645 \u0628\u0631 \u0631\u0646\u062a\u0627\u0645\u0648\u0646:\r"
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"uotlines"}
                data-plasmic-override={overrides.uotlines}
                className={classNames(projectcss.all, sty.uotlines)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2Smea
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ul
                        data-plasmic-name={"ul"}
                        data-plasmic-override={overrides.ul}
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__ts82O
                          )}
                        >
                          {
                            "\u0627\u0648\u0644\u0648\u06cc\u062a \u0627\u0648\u0644 \u0628\u0631\u0627\u06cc \u062a\u0635\u0645\u06cc\u0645\u200c\u06af\u06cc\u0631\u06cc \u062e\u0648\u0634\u062d\u0627\u0644\u06cc \u06a9\u0627\u0631\u0628\u0631\u0647\u060c \u0646\u0647 \u062a\u0648\u0627\u0646\u0627\u06cc\u06cc \u0645\u0627"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__tz4ML
                          )}
                        >
                          {
                            "\u062a\u0637\u0627\u0628\u0642 \u0641\u0631\u0647\u0646\u06af\u06cc \u0627\u0639\u0636\u0627\u06cc \u062a\u06cc\u0645 (culture fit \u0628\u0648\u062f\u0646) \u0627\u0632 \u0645\u0647\u0627\u0631\u062a \u0641\u0631\u062f\u06cc \u0645\u0647\u0645\u200c\u062a\u0631\u0647"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__tK7Eu
                          )}
                        >
                          {
                            "\u0633\u0631\u0639\u062a \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u0627\u0632 \u0645\u0647\u0627\u0631\u062a \u0641\u0639\u0644\u06cc \u0645\u0647\u0645\u200c\u062a\u0631\u0647"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___6D6LN
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>
                              {
                                "\u0633\u0644\u0633\u0644\u0647\u200c\u0645\u0631\u0627\u062a\u0628\u06cc \u0646\u06cc\u0633\u062a\u06cc\u0645 \u0648 \u0645\u06cc\u200c\u062e\u0648\u0627\u06cc\u0645 flat \u0628\u0627\u0634\u06cc\u0645 ("
                              }
                            </React.Fragment>
                            {
                              <PlasmicLink__
                                className={classNames(
                                  projectcss.all,
                                  projectcss.a,
                                  projectcss.__wab_text,
                                  projectcss.plasmic_default__inline,
                                  sty.link__lmQNn
                                )}
                                component={Link}
                                platform={"nextjs"}
                              >
                                {
                                  "\u0627\u0644\u06af\u0648 \u0633\u0627\u062e\u062a\u0627\u0631 \u062a\u06cc\u0645\u200c\u0647\u0627"
                                }
                              </PlasmicLink__>
                            }
                            <React.Fragment>{")"}</React.Fragment>
                          </React.Fragment>
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__otPvx
                          )}
                        >
                          {
                            "\u0633\u0639\u06cc \u0645\u06cc\u200c\u06a9\u0646\u06cc\u0645 \u0622\u062f\u0645\u200c\u0647\u0627 \u062d\u062f\u0627\u06a9\u062b\u0631 \u0622\u0632\u0627\u062f\u06cc \u0639\u0645\u0644 \u0631\u0648 \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u0646\u062f. (Authority and autonomy)"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___6WSkN
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>
                              {
                                "\u0622\u0632\u0627\u062f\u06cc \u062f\u0631 \u06a9\u0646\u0627\u0631 \u0645\u0633\u0626\u0648\u0644\u06cc\u062a\u200c\u067e\u0630\u06cc\u0631\u06cc \u0628\u0631 \u0627\u0633\u0627\u0633 \u0645\u062f\u0644 \u0645\u0637\u0631\u062d \u0634\u062f\u0647 \u062f\u0631 "
                              }
                            </React.Fragment>
                            {
                              <PlasmicLink__
                                className={classNames(
                                  projectcss.all,
                                  projectcss.a,
                                  projectcss.__wab_text,
                                  projectcss.plasmic_default__inline,
                                  sty.link__zU6Mf
                                )}
                                component={Link}
                                platform={"nextjs"}
                              >
                                {
                                  "\u06a9\u062a\u0627\u0628 \u0642\u0627\u0646\u0648\u0646 \u0628\u06cc\u200c\u0642\u0627\u0646\u0648\u0646\u06cc"
                                }
                              </PlasmicLink__>
                            }
                            <React.Fragment>{" \u0648 "}</React.Fragment>
                            {
                              <PlasmicLink__
                                className={classNames(
                                  projectcss.all,
                                  projectcss.a,
                                  projectcss.__wab_text,
                                  projectcss.plasmic_default__inline,
                                  sty.link___8A0Rf
                                )}
                                component={Link}
                                platform={"nextjs"}
                              >
                                {"\u0627\u06cc\u0646\u062c\u0627"}
                              </PlasmicLink__>
                            }
                            <React.Fragment>{""}</React.Fragment>
                          </React.Fragment>
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__fKxgq
                          )}
                        >
                          {
                            "\u0627\u0641\u0631\u0627\u062f\u06cc \u06a9\u0647 \u0627\u0648\u0644\u0648\u06cc\u062a \u0627\u0648\u0644 \u0632\u0646\u062f\u06af\u06cc\u200c\u0634\u0648\u0646 \u00ab\u0631\u0634\u062f \u0648 \u062a\u0648\u0633\u0639\u0647\u200c\u06cc \u0641\u0631\u062f\u06cc\u0647\u00bb \u0627\u06cc\u0646\u062c\u0627 \u062e\u0648\u0634\u062d\u0627\u0644\u0646"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__vumsQ
                          )}
                        >
                          {
                            "\u0645\u06cc\u200c\u062e\u0648\u0627\u06cc\u0645 \u062c\u0632\u0648 \u0633\u0631\u06cc\u0639\u200c\u0627\u0644\u0631\u0634\u062f\u200c\u0647\u0627 \u0628\u0627\u0634\u06cc\u0645\u060c \u067e\u0633 \u0628\u0627 \u0627\u0639\u0637\u0627\u0621 \u0633\u0647\u0627\u0645 \u062f\u0631 \u0631\u0634\u062f \u0634\u0631\u06a9\u062a \u0634\u0631\u06cc\u06a9 \u0645\u06cc\u200c\u0634\u06cc\u0645"
                          }
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
              <div
                data-plasmic-name={"gallery"}
                data-plasmic-override={overrides.gallery}
                className={classNames(projectcss.all, sty.gallery)}
              >
                <div
                  data-plasmic-name={"introAutoSyncGif2"}
                  data-plasmic-override={overrides.introAutoSyncGif2}
                  className={classNames(projectcss.all, sty.introAutoSyncGif2)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(
                      sty.img__eS5B6,
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "fadein"
                        : "fadein"
                    )}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/meetingJpg.jpg",
                      fullWidth: 800,
                      fullHeight: 409,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"teamup"}
              data-plasmic-override={overrides.teamup}
              className={classNames(projectcss.all, sty.teamup)}
            >
              <div
                data-plasmic-name={"introAutoSyncTitle3"}
                data-plasmic-override={overrides.introAutoSyncTitle3}
                className={classNames(projectcss.all, sty.introAutoSyncTitle3)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oxUg7
                  )}
                >
                  {
                    "\u0647\u0645\u0631\u0627\u0647 \u0634\u0648 \u0639\u0632\u06cc\u0632 :\u200c)"
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"introAutoSyncCaption3"}
                data-plasmic-override={overrides.introAutoSyncCaption3}
                className={classNames(
                  projectcss.all,
                  sty.introAutoSyncCaption3
                )}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__eiQcw
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "\u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0641\u0631\u0635\u062a\u200c\u0647\u0627\u06cc \u0634\u063a\u0644\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u062f\u0631 "
                      }
                    </React.Fragment>
                    {
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          projectcss.plasmic_default__inline,
                          sty.link___1GwSz
                        )}
                        component={Link}
                        href={
                          "https://jobvision.ir/companies/104272/%D8%A7%D8%B3%D8%AA%D8%AE%D8%AF%D8%A7%D9%85-%D8%B1%D9%86%D8%AA%D8%A7%D9%85%D9%88%D9%86"
                        }
                        platform={"nextjs"}
                      >
                        {"\u062c\u0627\u0628\u200c\u0648\u06cc\u0698\u0646"}
                      </PlasmicLink__>
                    }
                    <React.Fragment>
                      {
                        " \u0628\u0628\u06cc\u0646\u06cc \u0648 \u06cc\u0627 \u0631\u0632\u0648\u0645\u0647\u200c\u0627\u062a \u0631\u0648 \u0628\u0647 \u0627\u06cc\u0646 \u0622\u062f\u0631\u0633 \u0628\u0641\u0631\u0633\u062a\u06cc:\r\ninfo [at] rentamon.com\n"
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontStyle: "italic" }}
                    >
                      {
                        "(\u0628\u0647 \u0645\u0646\u0642\u0636\u06cc \u0634\u062f\u0646 \u0622\u06af\u0647\u06cc \u0634\u063a\u0644\u06cc \u062a\u0648\u062c\u0647 \u0646\u06a9\u0646)"
                      }
                    </span>
                    <React.Fragment>{"\r"}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"address"}
              data-plasmic-override={overrides.address}
              className={classNames(projectcss.all, sty.address)}
            >
              <div
                data-plasmic-name={"content"}
                data-plasmic-override={overrides.content}
                className={classNames(projectcss.all, sty.content)}
              >
                <div
                  data-plasmic-name={"addressText"}
                  data-plasmic-override={overrides.addressText}
                  className={classNames(projectcss.all, sty.addressText)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__t7Oz
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {
                          "\u0642\u0645\u060c \u067e\u0631\u062f\u06cc\u0633\u0627\u0646\u060c \u0628\u0644\u0648\u0627\u0631 \u0645\u0648\u0644\u0648\u06cc\u060c \u067e\u0627\u0631\u06a9 \u0639\u0644\u0645 \u0648 \u0641\u0646\u0627\u0648\u0631\u06cc \u0642\u0645\u060c \u0628\u0644\u0648\u06a9 \u06f1\u060c \u0637\u0628\u0642\u0647 \u06f3\u060c \u0634\u0631\u06a9\u062a \u062a\u0648\u0633\u0639\u0647 \u0641\u0646\u0627\u0648\u0631\u06cc \u0648 \u062a\u0648\u0627\u0646\u0645\u0646\u062f\u0633\u0627\u0632\u06cc \u0634\u0631\u06cc\u0641\r\n\r\n\n\u062a\u0645\u0627\u0633: "
                        }
                      </React.Fragment>
                      {
                        <PlasmicLink__
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__cNvbN
                          )}
                          component={Link}
                          href={"tel: 02191096227"}
                          platform={"nextjs"}
                        >
                          {
                            "\u06f0\u06f2\u06f1-\u06f9\u06f1\u06f0\u06f9\u06f6\u06f2\u06f2\u06f7"
                          }
                        </PlasmicLink__>
                      }
                      <React.Fragment>
                        {
                          "\r\n\u06a9\u062f \u067e\u0633\u062a\u06cc: \u06f3\u06f7\u06f4\u06f9\u06f1\u06f1\u06f3\u06f9\u06f1\u06f6\r\n\u0627\u06cc\u0645\u06cc\u0644: info [at] rentamon.com"
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
                <div
                  data-plasmic-name={"map"}
                  data-plasmic-override={overrides.map}
                  className={classNames(projectcss.all, sty.map)}
                >
                  <Embed
                    data-plasmic-name={"embedHtml"}
                    data-plasmic-override={overrides.embedHtml}
                    className={classNames("__wab_instance", sty.embedHtml)}
                    code={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? '<div style="width: 100%; height: 100%;">\r\n  <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3285.336332222352!2d50.80808741151561!3d34.57035540330491!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3f93a3007be0a67b%3A0x5974548a77f028da!2z2LTYsdqp2Kog2LHZhtiq2KfZhdmI2YYgfCBSZW50YW1vbg!5e0!3m2!1sen!2s!4v1739718249338!5m2!1sen!2s" style="width: 100%; height: 100%; border: 0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>\r\n</div>\r\n'
                        : hasVariant(globalVariants, "screen", "tablet")
                        ? '<div style="width: 100%; height: 100%;">\r\n  <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3285.336332222352!2d50.80808741151561!3d34.57035540330491!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3f93a3007be0a67b%3A0x5974548a77f028da!2z2LTYsdqp2Kog2LHZhtiq2KfZhdmI2YYgfCBSZW50YW1vbg!5e0!3m2!1sen!2s!4v1739718249338!5m2!1sen!2s" style="width: 100%; height: 100%; border: 0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>\r\n</div>\r\n'
                        : '<div style="width: 100%; height: 100%;">\r\n  <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3285.336332222352!2d50.80808741151561!3d34.57035540330491!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3f93a3007be0a67b%3A0x5974548a77f028da!2z2LTYsdqp2Kog2LHZhtiq2KfZhdmI2YYgfCBSZW50YW1vbg!5e0!3m2!1sen!2s!4v1739718249338!5m2!1sen!2s" style="width: 100%; height: 100%; border: 0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>\r\n</div>\r\n'
                    }
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            data-plasmic-name={"html"}
            data-plasmic-override={overrides.html}
            className={classNames(projectcss.all, sty.html)}
          >
            <Embed
              data-plasmic-name={"clarity2"}
              data-plasmic-override={overrides.clarity2}
              className={classNames("__wab_instance", sty.clarity2)}
              code={
                '<script type="text/javascript">\r\n    (function(c,l,a,r,i,t,y){\r\n        c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};\r\n        t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;\r\n        y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);\r\n    })(window, document, "clarity", "script", "iv4wnfjr7k");\r\n</script>'
              }
            />

            <Embed
              data-plasmic-name={"goftino"}
              data-plasmic-override={overrides.goftino}
              className={classNames("__wab_instance", sty.goftino)}
              code={
                '<script type="text/javascript">\r\n  !function(){var i="WgsGXv",a=window,d=document;function g(){var g=d.createElement("script"),s="https://www.goftino.com/widget/"+i,l=localStorage.getItem("goftino_"+i);g.async=!0,g.src=l?s+"?o="+l:s;d.getElementsByTagName("head")[0].appendChild(g);}"complete"===d.readyState?g():a.attachEvent?a.attachEvent("onload",g):a.addEventListener("load",g,!1);}();\r\n</script>'
              }
            />
          </div>
          <RentamonFooter
            data-plasmic-name={"rentamonFooter"}
            data-plasmic-override={overrides.rentamonFooter}
            className={classNames("__wab_instance", sty.rentamonFooter)}
          />

          <SideEffect
            data-plasmic-name={"sideEffect"}
            data-plasmic-override={overrides.sideEffect}
            className={classNames("__wab_instance", sty.sideEffect)}
            onMount={async () => {
              const $steps = {};

              $steps["runCode"] = true
                ? (() => {
                    const actionArgs = {
                      customFunction: async () => {
                        return (() => {
                          return (function redirectIfAppSubdomain() {
                            const {
                              protocol,
                              hostname,
                              pathname,
                              search,
                              hash
                            } = window.location;
                            console.log("here");
                            if (hostname === "app.rentamon.com") {
                              const targetHost = "rentamon.com";
                              const newUrl = `${protocol}//${targetHost}${pathname}${search}${hash}`;
                              window.location.replace(newUrl);
                            }
                          })();
                        })();
                      }
                    };
                    return (({ customFunction }) => {
                      return customFunction();
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["runCode"] != null &&
                typeof $steps["runCode"] === "object" &&
                typeof $steps["runCode"].then === "function"
              ) {
                $steps["runCode"] = await $steps["runCode"];
              }
            }}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbarRntHeader",
    "mainContents",
    "intro1st",
    "introTitle",
    "\u062f\u0631\u0628\u0627\u0631\u0647\u0645\u0627",
    "teamImage",
    "introCalendarLeft",
    "introduction",
    "team",
    "sectionTitle",
    "member13",
    "icon13",
    "title14",
    "caption13",
    "member14",
    "icon14",
    "title15",
    "caption14",
    "member15",
    "icon15",
    "title16",
    "caption15",
    "member16",
    "icon16",
    "title17",
    "caption16",
    "member17",
    "icon17",
    "title18",
    "caption17",
    "member18",
    "icon18",
    "title19",
    "caption18",
    "principles",
    "title7",
    "uotlines",
    "ul",
    "gallery",
    "introAutoSyncGif2",
    "teamup",
    "introAutoSyncTitle3",
    "introAutoSyncCaption3",
    "address",
    "content",
    "addressText",
    "map",
    "embedHtml",
    "html",
    "clarity2",
    "goftino",
    "rentamonFooter",
    "sideEffect"
  ],
  navbarRntHeader: ["navbarRntHeader"],
  mainContents: [
    "mainContents",
    "intro1st",
    "introTitle",
    "\u062f\u0631\u0628\u0627\u0631\u0647\u0645\u0627",
    "teamImage",
    "introCalendarLeft",
    "introduction",
    "team",
    "sectionTitle",
    "member13",
    "icon13",
    "title14",
    "caption13",
    "member14",
    "icon14",
    "title15",
    "caption14",
    "member15",
    "icon15",
    "title16",
    "caption15",
    "member16",
    "icon16",
    "title17",
    "caption16",
    "member17",
    "icon17",
    "title18",
    "caption17",
    "member18",
    "icon18",
    "title19",
    "caption18",
    "principles",
    "title7",
    "uotlines",
    "ul",
    "gallery",
    "introAutoSyncGif2",
    "teamup",
    "introAutoSyncTitle3",
    "introAutoSyncCaption3",
    "address",
    "content",
    "addressText",
    "map",
    "embedHtml"
  ],
  intro1st: [
    "intro1st",
    "introTitle",
    "\u062f\u0631\u0628\u0627\u0631\u0647\u0645\u0627",
    "teamImage",
    "introCalendarLeft"
  ],
  introTitle: [
    "introTitle",
    "\u062f\u0631\u0628\u0627\u0631\u0647\u0645\u0627"
  ],
  دربارهما: ["\u062f\u0631\u0628\u0627\u0631\u0647\u0645\u0627"],
  teamImage: ["teamImage", "introCalendarLeft"],
  introCalendarLeft: ["introCalendarLeft"],
  introduction: ["introduction"],
  team: [
    "team",
    "sectionTitle",
    "member13",
    "icon13",
    "title14",
    "caption13",
    "member14",
    "icon14",
    "title15",
    "caption14",
    "member15",
    "icon15",
    "title16",
    "caption15",
    "member16",
    "icon16",
    "title17",
    "caption16",
    "member17",
    "icon17",
    "title18",
    "caption17",
    "member18",
    "icon18",
    "title19",
    "caption18"
  ],
  sectionTitle: ["sectionTitle"],
  member13: ["member13", "icon13", "title14", "caption13"],
  icon13: ["icon13"],
  title14: ["title14"],
  caption13: ["caption13"],
  member14: ["member14", "icon14", "title15", "caption14"],
  icon14: ["icon14"],
  title15: ["title15"],
  caption14: ["caption14"],
  member15: ["member15", "icon15", "title16", "caption15"],
  icon15: ["icon15"],
  title16: ["title16"],
  caption15: ["caption15"],
  member16: ["member16", "icon16", "title17", "caption16"],
  icon16: ["icon16"],
  title17: ["title17"],
  caption16: ["caption16"],
  member17: ["member17", "icon17", "title18", "caption17"],
  icon17: ["icon17"],
  title18: ["title18"],
  caption17: ["caption17"],
  member18: ["member18", "icon18", "title19", "caption18"],
  icon18: ["icon18"],
  title19: ["title19"],
  caption18: ["caption18"],
  principles: [
    "principles",
    "title7",
    "uotlines",
    "ul",
    "gallery",
    "introAutoSyncGif2"
  ],
  title7: ["title7"],
  uotlines: ["uotlines", "ul"],
  ul: ["ul"],
  gallery: ["gallery", "introAutoSyncGif2"],
  introAutoSyncGif2: ["introAutoSyncGif2"],
  teamup: ["teamup", "introAutoSyncTitle3", "introAutoSyncCaption3"],
  introAutoSyncTitle3: ["introAutoSyncTitle3"],
  introAutoSyncCaption3: ["introAutoSyncCaption3"],
  address: ["address", "content", "addressText", "map", "embedHtml"],
  content: ["content", "addressText", "map", "embedHtml"],
  addressText: ["addressText"],
  map: ["map", "embedHtml"],
  embedHtml: ["embedHtml"],
  html: ["html", "clarity2", "goftino"],
  clarity2: ["clarity2"],
  goftino: ["goftino"],
  rentamonFooter: ["rentamonFooter"],
  sideEffect: ["sideEffect"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbarRntHeader: typeof NavbarRntHeader;
  mainContents: "div";
  intro1st: "div";
  introTitle: "div";
  دربارهما: "div";
  teamImage: "div";
  introCalendarLeft: "div";
  introduction: "div";
  team: "div";
  sectionTitle: "div";
  member13: "div";
  icon13: "div";
  title14: "div";
  caption13: "div";
  member14: "div";
  icon14: "div";
  title15: "div";
  caption14: "div";
  member15: "div";
  icon15: "div";
  title16: "div";
  caption15: "div";
  member16: "div";
  icon16: "div";
  title17: "div";
  caption16: "div";
  member17: "div";
  icon17: "div";
  title18: "div";
  caption17: "div";
  member18: "div";
  icon18: "div";
  title19: "div";
  caption18: "div";
  principles: "div";
  title7: "div";
  uotlines: "div";
  ul: "ul";
  gallery: "div";
  introAutoSyncGif2: "div";
  teamup: "div";
  introAutoSyncTitle3: "div";
  introAutoSyncCaption3: "div";
  address: "div";
  content: "div";
  addressText: "div";
  map: "div";
  embedHtml: typeof Embed;
  html: "div";
  clarity2: typeof Embed;
  goftino: typeof Embed;
  rentamonFooter: typeof RentamonFooter;
  sideEffect: typeof SideEffect;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicAboutUs__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicAboutUs__VariantsArgs;
    args?: PlasmicAboutUs__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicAboutUs__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicAboutUs__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicAboutUs__ArgProps,
          internalVariantPropNames: PlasmicAboutUs__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicAboutUs__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAboutUs";
  } else {
    func.displayName = `PlasmicAboutUs.${nodeName}`;
  }
  return func;
}

export const PlasmicAboutUs = Object.assign(
  // Top-level PlasmicAboutUs renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbarRntHeader: makeNodeComponent("navbarRntHeader"),
    mainContents: makeNodeComponent("mainContents"),
    intro1st: makeNodeComponent("intro1st"),
    introTitle: makeNodeComponent("introTitle"),
    دربارهما: makeNodeComponent(
      "\u062f\u0631\u0628\u0627\u0631\u0647\u0645\u0627"
    ),
    teamImage: makeNodeComponent("teamImage"),
    introCalendarLeft: makeNodeComponent("introCalendarLeft"),
    introduction: makeNodeComponent("introduction"),
    team: makeNodeComponent("team"),
    sectionTitle: makeNodeComponent("sectionTitle"),
    member13: makeNodeComponent("member13"),
    icon13: makeNodeComponent("icon13"),
    title14: makeNodeComponent("title14"),
    caption13: makeNodeComponent("caption13"),
    member14: makeNodeComponent("member14"),
    icon14: makeNodeComponent("icon14"),
    title15: makeNodeComponent("title15"),
    caption14: makeNodeComponent("caption14"),
    member15: makeNodeComponent("member15"),
    icon15: makeNodeComponent("icon15"),
    title16: makeNodeComponent("title16"),
    caption15: makeNodeComponent("caption15"),
    member16: makeNodeComponent("member16"),
    icon16: makeNodeComponent("icon16"),
    title17: makeNodeComponent("title17"),
    caption16: makeNodeComponent("caption16"),
    member17: makeNodeComponent("member17"),
    icon17: makeNodeComponent("icon17"),
    title18: makeNodeComponent("title18"),
    caption17: makeNodeComponent("caption17"),
    member18: makeNodeComponent("member18"),
    icon18: makeNodeComponent("icon18"),
    title19: makeNodeComponent("title19"),
    caption18: makeNodeComponent("caption18"),
    principles: makeNodeComponent("principles"),
    title7: makeNodeComponent("title7"),
    uotlines: makeNodeComponent("uotlines"),
    ul: makeNodeComponent("ul"),
    gallery: makeNodeComponent("gallery"),
    introAutoSyncGif2: makeNodeComponent("introAutoSyncGif2"),
    teamup: makeNodeComponent("teamup"),
    introAutoSyncTitle3: makeNodeComponent("introAutoSyncTitle3"),
    introAutoSyncCaption3: makeNodeComponent("introAutoSyncCaption3"),
    address: makeNodeComponent("address"),
    content: makeNodeComponent("content"),
    addressText: makeNodeComponent("addressText"),
    map: makeNodeComponent("map"),
    embedHtml: makeNodeComponent("embedHtml"),
    html: makeNodeComponent("html"),
    clarity2: makeNodeComponent("clarity2"),
    goftino: makeNodeComponent("goftino"),
    rentamonFooter: makeNodeComponent("rentamonFooter"),
    sideEffect: makeNodeComponent("sideEffect"),

    // Metadata about props expected for PlasmicAboutUs
    internalVariantProps: PlasmicAboutUs__VariantProps,
    internalArgProps: PlasmicAboutUs__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "درباره رنتامونی‌ها",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicAboutUs;
/* prettier-ignore-end */
