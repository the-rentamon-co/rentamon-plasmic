// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7SNMkB8UMukVgcWJYokeAQ
// Component: eddiHU6vfbzN

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import NavbarRentamonComponent from "../../NavbarRentamonComponent"; // plasmic-import: gWac1FMbIJat/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import RentamonFooter from "../../RentamonFooter"; // plasmic-import: DSdlo5kdtbOe/component

import { useScreenVariants as useScreenVariantsaSuSwU8JUYf } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: aSUSwU8jUYf-/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/projectcss
import sty from "./PlasmicAboutUs.module.css"; // plasmic-import: eddiHU6vfbzN/css

createPlasmicElementProxy;

export type PlasmicAboutUs__VariantMembers = {};
export type PlasmicAboutUs__VariantsArgs = {};
type VariantPropType = keyof PlasmicAboutUs__VariantsArgs;
export const PlasmicAboutUs__VariantProps = new Array<VariantPropType>();

export type PlasmicAboutUs__ArgsType = {};
type ArgPropType = keyof PlasmicAboutUs__ArgsType;
export const PlasmicAboutUs__ArgProps = new Array<ArgPropType>();

export type PlasmicAboutUs__OverridesType = {
  root?: Flex__<"div">;
  navbarRentamonComponent?: Flex__<typeof NavbarRentamonComponent>;
  mainContents?: Flex__<"div">;
  intro1st?: Flex__<"div">;
  introTitle?: Flex__<"div">;
  teamImage?: Flex__<"div">;
  introCalendarLeft?: Flex__<"div">;
  introduction?: Flex__<"div">;
  team?: Flex__<"div">;
  sectionTitle?: Flex__<"div">;
  freeBox?: Flex__<"div">;
  members?: Flex__<"div">;
  member6?: Flex__<"div">;
  icon6?: Flex__<"div">;
  title6?: Flex__<"div">;
  caption6?: Flex__<"div">;
  member5?: Flex__<"div">;
  icon5?: Flex__<"div">;
  title5?: Flex__<"div">;
  caption5?: Flex__<"div">;
  member4?: Flex__<"div">;
  icon4?: Flex__<"div">;
  title4?: Flex__<"div">;
  caption4?: Flex__<"div">;
  member3?: Flex__<"div">;
  icon3?: Flex__<"div">;
  title3?: Flex__<"div">;
  caption3?: Flex__<"div">;
  member2?: Flex__<"div">;
  icon2?: Flex__<"div">;
  title2?: Flex__<"div">;
  caption2?: Flex__<"div">;
  member?: Flex__<"div">;
  icon?: Flex__<"div">;
  title?: Flex__<"div">;
  caption?: Flex__<"div">;
  members2?: Flex__<"div">;
  member7?: Flex__<"div">;
  icon7?: Flex__<"div">;
  title8?: Flex__<"div">;
  caption7?: Flex__<"div">;
  member8?: Flex__<"div">;
  icon8?: Flex__<"div">;
  title9?: Flex__<"div">;
  caption8?: Flex__<"div">;
  member9?: Flex__<"div">;
  icon9?: Flex__<"div">;
  title10?: Flex__<"div">;
  caption9?: Flex__<"div">;
  member10?: Flex__<"div">;
  icon10?: Flex__<"div">;
  title11?: Flex__<"div">;
  caption10?: Flex__<"div">;
  member11?: Flex__<"div">;
  icon11?: Flex__<"div">;
  title12?: Flex__<"div">;
  caption11?: Flex__<"div">;
  member12?: Flex__<"div">;
  icon12?: Flex__<"div">;
  title13?: Flex__<"div">;
  caption12?: Flex__<"div">;
  principles?: Flex__<"div">;
  title7?: Flex__<"div">;
  uotlines?: Flex__<"div">;
  ul?: Flex__<"ul">;
  gallery?: Flex__<"div">;
  introAutoSyncGif2?: Flex__<"div">;
  teamup?: Flex__<"div">;
  introAutoSyncTitle3?: Flex__<"div">;
  introAutoSyncCaption3?: Flex__<"div">;
  address?: Flex__<"div">;
  content?: Flex__<"div">;
  addressText?: Flex__<"div">;
  map?: Flex__<"div">;
  embedHtml?: Flex__<typeof Embed>;
  rentamonFooter?: Flex__<typeof RentamonFooter>;
};

export interface DefaultAboutUsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicAboutUs__RenderFunc(props: {
  variants: PlasmicAboutUs__VariantsArgs;
  args: PlasmicAboutUs__ArgsType;
  overrides: PlasmicAboutUs__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "propertyId",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsaSuSwU8JUYf()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicAboutUs.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicAboutUs.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicAboutUs.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <NavbarRentamonComponent
            data-plasmic-name={"navbarRentamonComponent"}
            data-plasmic-override={overrides.navbarRentamonComponent}
            className={classNames(
              "__wab_instance",
              sty.navbarRentamonComponent
            )}
          />

          <div
            data-plasmic-name={"mainContents"}
            data-plasmic-override={overrides.mainContents}
            className={classNames(projectcss.all, sty.mainContents)}
          >
            <div
              data-plasmic-name={"intro1st"}
              data-plasmic-override={overrides.intro1st}
              className={classNames(projectcss.all, sty.intro1st)}
            >
              <div
                data-plasmic-name={"introTitle"}
                data-plasmic-override={overrides.introTitle}
                className={classNames(projectcss.all, sty.introTitle)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__y8Rfl
                  )}
                >
                  {"\u062f\u0631\u0628\u0627\u0631\u0647 \u0645\u0627"}
                </div>
              </div>
              <div
                data-plasmic-name={"teamImage"}
                data-plasmic-override={overrides.teamImage}
                className={classNames(projectcss.all, sty.teamImage)}
              >
                <div
                  data-plasmic-name={"introCalendarLeft"}
                  data-plasmic-override={overrides.introCalendarLeft}
                  className={classNames(projectcss.all, sty.introCalendarLeft)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__gyl5M)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/teamJpg.jpg",
                      fullWidth: 800,
                      fullHeight: 222,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"introduction"}
              data-plasmic-override={overrides.introduction}
              className={classNames(projectcss.all, sty.introduction)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qfSbm
                )}
              >
                {
                  "\u062a\u0642\u0631\u06cc\u0628\u0627 \u06f4\u06f0 \u0647\u0632\u0627\u0631 \u0646\u0641\u0631 \u0627\u0632 \u0637\u0631\u06cc\u0642 \u067e\u0644\u062a\u0641\u0631\u0645\u200c\u0647\u0627\u06cc \u062c\u0627\u062c\u06cc\u06af\u0627\u060c \u062c\u0627\u0628\u0627\u0645\u0627\u060c \u0627\u062a\u0627\u0642\u06a9 \u0648\u2026 \u062f\u0631\u0622\u0645\u062f\u0632\u0627\u06cc\u06cc \u0645\u06cc\u200c\u06a9\u0646\u0646\u062f. \u0627\u0645\u0627 \u0628\u0647 \u062f\u0644\u06cc\u0644 \u00ab\u0646\u06cc\u0627\u0632 \u0628\u0647 \u0645\u062f\u06cc\u0631\u06cc\u062a \u0648\u0636\u0639\u06cc\u062a \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062f\u0631 \u0686\u0646\u062f\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u06cc \u0645\u062e\u062a\u0644\u0641\u00bb \u0631\u0633\u06cc\u062f\u0646 \u0628\u0647 \u062d\u062f\u0627\u06a9\u062b\u0631 \u0638\u0631\u0641\u06cc\u062a\u0650 \u062f\u0631\u0622\u0645\u062f\u060c \u06a9\u0627\u0631 \u0628\u0633\u06cc\u0627\u0631 \u0633\u062e\u062a \u0648 \u0648\u0642\u062a\u200c\u06af\u06cc\u0631\u06cc\u0647.\r\n\r"
                }
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__iTajt
                )}
              >
                {
                  "\u0634\u0631\u06a9\u062a \u062a\u0648\u0633\u0639\u0647 \u0641\u0646\u0627\u0648\u0631\u06cc \u0648 \u062a\u0648\u0627\u0646\u0645\u062f\u0633\u0627\u0632\u06cc \u0634\u0631\u06cc\u0641 (\u0631\u0646\u062a\u0627\u0645\u0648\u0646) \u0628\u0647 \u0634\u0645\u0627\u0631\u0647 \u062b\u0628\u062a \u06f2\u06f2\u06f5\u06f7\u06f7\u060c \u0628\u0627 \u0627\u0631\u0627\u0626\u0647 \u067e\u0646\u0644 \u0645\u062f\u06cc\u0631\u06cc\u062a \u06cc\u06a9\u067e\u0627\u0631\u0686\u0647 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647\u060c \u0645\u062f\u06cc\u0631\u06cc\u062a \u0648\u0636\u0639\u06cc\u062a \u062a\u0642\u0648\u06cc\u0645 \u0648 \u0646\u0631\u062e\u200c\u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0631\u0627\u06cc \u0635\u0627\u062d\u0628\u06cc\u0646 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u062e\u0648\u062f\u06a9\u0627\u0631 \u0648 \u0686\u0646\u062f\u06cc\u0646 \u0628\u0631\u0627\u0628\u0631 \u0633\u0631\u06cc\u0639 \u0645\u06cc\u200c\u06a9\u0646\u0647. \u0645\u0639\u062a\u0642\u062f\u06cc\u0645 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0627\u06cc\u0646 \u0645\u062d\u0635\u0648\u0644 \u062a\u0648\u0633\u0637 \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646\u060c \u0645\u0646\u062c\u0631 \u0628\u0647 \u0633\u0647\u0648\u0644\u062a \u0648 \u0628\u0647\u0628\u0648\u062f \u06a9\u06cc\u0641\u06cc\u062a \u062a\u0639\u0627\u0645\u0644 \u0628\u0627 \u067e\u0644\u062a\u0641\u0631\u0645\u200c\u0647\u0627 \u0648 \u062d\u062a\u06cc \u0645\u0633\u0627\u0641\u0631\u0647\u0627 \u0645\u06cc\u0634\u0647\u060c \u0648 \u0646\u0647\u0627\u06cc\u062a\u0627 \u0635\u0646\u0639\u062a \u06af\u0631\u062f\u0634\u06af\u0631\u06cc \u06a9\u0634\u0648\u0631 \u0631\u0648\u0646\u0642 \u067e\u06cc\u062f\u0627 \u0645\u06cc\u200c\u06a9\u0646\u0647. \u0627\u06cc\u0646 \u0647\u062f\u0641\u0647 \u06a9\u0647 \u0645\u0627 \u0631\u0648 \u062f\u0648\u0631 \u0647\u0645 \u062c\u0645\u0639 \u06a9\u0631\u062f\u0647.\r"
                }
              </div>
            </div>
            <div
              data-plasmic-name={"team"}
              data-plasmic-override={overrides.team}
              className={classNames(projectcss.all, sty.team)}
            >
              <div
                data-plasmic-name={"sectionTitle"}
                data-plasmic-override={overrides.sectionTitle}
                className={classNames(projectcss.all, sty.sectionTitle)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lJFb
                  )}
                >
                  {
                    "\u0622\u0634\u0646\u0627\u06cc\u06cc \u0628\u0627 \u062a\u06cc\u0645 \u0631\u0646\u062a\u0627\u0645\u0648\u0646"
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"freeBox"}
                data-plasmic-override={overrides.freeBox}
                className={classNames(projectcss.all, sty.freeBox)}
              >
                <div
                  data-plasmic-name={"members"}
                  data-plasmic-override={overrides.members}
                  className={classNames(projectcss.all, sty.members)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"member6"}
                    data-plasmic-override={overrides.member6}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.member6)}
                  >
                    <div
                      data-plasmic-name={"icon6"}
                      data-plasmic-override={overrides.icon6}
                      className={classNames(projectcss.all, sty.icon6)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__uhSb7)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50%"
                            : "70%"
                        }
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/hamidiJpg.jpg",
                          fullWidth: 300,
                          fullHeight: 300,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"title6"}
                      data-plasmic-override={overrides.title6}
                      className={classNames(projectcss.all, sty.title6)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__e0Xz
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "tablet")
                          ? "\u0645\u062d\u0645\u062f \u062d\u0633\u06cc\u0646 \u062d\u0645\u06cc\u062f\u06cc"
                          : "\u0645\u062d\u0645\u062f\u062d\u0633\u06cc\u0646 \u062d\u0645\u06cc\u062f\u06cc"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"caption6"}
                      data-plasmic-override={overrides.caption6}
                      className={classNames(projectcss.all, sty.caption6)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kBe8N
                        )}
                        onClick={async event => {
                          const $steps = {};

                          $steps["runCode"] = true
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (() => {
                                      return window.open(
                                        "https://www.linkedin.com/in/s-m-hossein-hamidi/",
                                        "_blank"
                                      );
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode"] != null &&
                            typeof $steps["runCode"] === "object" &&
                            typeof $steps["runCode"].then === "function"
                          ) {
                            $steps["runCode"] = await $steps["runCode"];
                          }
                        }}
                      >
                        {hasVariant(globalVariants, "screen", "tablet")
                          ? "\u0645\u0634\u0627\u0648\u0631 \u0648 \u0631\u0627\u0647\u0628\u0631"
                          : "\u0645\u0634\u0627\u0648\u0631 \u0648 \u0631\u0627\u0647\u0628\u0631 \u0645\u062d\u0635\u0648\u0644"}
                      </div>
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"member5"}
                    data-plasmic-override={overrides.member5}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.member5)}
                  >
                    <div
                      data-plasmic-name={"icon5"}
                      data-plasmic-override={overrides.icon5}
                      className={classNames(projectcss.all, sty.icon5)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___0Jcoh)}
                        displayHeight={"auto"}
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "120px"
                            : "none"
                        }
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "80%"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "120px"
                            : "70%"
                        }
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "120px"
                            : "0"
                        }
                        displayMinWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "120px"
                            : "0"
                        }
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/small300X288Jpg.jpg",
                          fullWidth: 300,
                          fullHeight: 288,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"title5"}
                      data-plasmic-override={overrides.title5}
                      className={classNames(projectcss.all, sty.title5)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8S2Og
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "tablet")
                          ? "\u0645\u0635\u0637\u0641\u06cc \u0641\u0642\u06cc\u0647"
                          : "\u0633\u06cc\u062f \u0645\u0635\u0637\u0641\u06cc \u0641\u0642\u06cc\u0647"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"caption5"}
                      data-plasmic-override={overrides.caption5}
                      className={classNames(projectcss.all, sty.caption5)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ufawH
                        )}
                        onClick={async event => {
                          const $steps = {};

                          $steps["runCode"] = true
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (() => {
                                      return window.open(
                                        "https://www.linkedin.com/in/mostafa-faghih/",
                                        "_blank"
                                      );
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode"] != null &&
                            typeof $steps["runCode"] === "object" &&
                            typeof $steps["runCode"].then === "function"
                          ) {
                            $steps["runCode"] = await $steps["runCode"];
                          }
                        }}
                      >
                        {
                          "\u0628\u0646\u06cc\u0627\u0646\u200c\u06af\u0630\u0627\u0631 \u0648 \u0645\u062f\u06cc\u0631\u0639\u0627\u0645\u0644"
                        }
                      </div>
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"member4"}
                    data-plasmic-override={overrides.member4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.member4)}
                  >
                    <div
                      data-plasmic-name={"icon4"}
                      data-plasmic-override={overrides.icon4}
                      className={classNames(projectcss.all, sty.icon4)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___5Lo52)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50%"
                            : "70%"
                        }
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/parsaJpg.jpg",
                          fullWidth: 243,
                          fullHeight: 243,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"title4"}
                      data-plasmic-override={overrides.title4}
                      className={classNames(projectcss.all, sty.title4)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__b2Xn1
                        )}
                      >
                        {
                          "\u067e\u0627\u0631\u0633\u0627 \u062e\u0633\u0631\u0648\u06cc"
                        }
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"caption4"}
                      data-plasmic-override={overrides.caption4}
                      className={classNames(projectcss.all, sty.caption4)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hir99
                        )}
                        onClick={async event => {
                          const $steps = {};

                          $steps["runCode"] = true
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (() => {
                                      return window.open(
                                        "https://www.linkedin.com/in/parsa-khosravi-70432a244/",
                                        "_blank"
                                      );
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode"] != null &&
                            typeof $steps["runCode"] === "object" &&
                            typeof $steps["runCode"].then === "function"
                          ) {
                            $steps["runCode"] = await $steps["runCode"];
                          }
                        }}
                      >
                        {
                          "\u062a\u0648\u0633\u0639\u0647\u200c\u062f\u0647\u0646\u062f\u0647 \u0641\u0646\u06cc"
                        }
                      </div>
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"member3"}
                    data-plasmic-override={overrides.member3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.member3)}
                  >
                    <div
                      data-plasmic-name={"icon3"}
                      data-plasmic-override={overrides.icon3}
                      className={classNames(projectcss.all, sty.icon3)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__b2Pxw)}
                        displayHeight={"auto"}
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "120px"
                            : "none"
                        }
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "80%"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "120px"
                            : "70%"
                        }
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "120px"
                            : "0"
                        }
                        displayMinWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "120px"
                            : "0"
                        }
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/photo20240908194639300X300Jpg.jpg",
                          fullWidth: 300,
                          fullHeight: 300,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"title3"}
                      data-plasmic-override={overrides.title3}
                      className={classNames(projectcss.all, sty.title3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kz7Mz
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "tablet")
                          ? "\u0639\u0644\u06cc\u0631\u0636\u0627 \u0646\u06cc\u06a9\u0648\u0646\u06cc\u0627"
                          : "\u0633\u06cc\u062f \u0639\u0644\u06cc\u0631\u0636\u0627 \u0646\u06cc\u06a9\u0648\u0646\u06cc\u0627"}
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"caption3"}
                      data-plasmic-override={overrides.caption3}
                      className={classNames(projectcss.all, sty.caption3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tL93E
                        )}
                        onClick={async event => {
                          const $steps = {};

                          $steps["runCode"] = true
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (() => {
                                      return window.open(
                                        "https://www.linkedin.com/in/alireza-nikouniya/",
                                        "_blank"
                                      );
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode"] != null &&
                            typeof $steps["runCode"] === "object" &&
                            typeof $steps["runCode"].then === "function"
                          ) {
                            $steps["runCode"] = await $steps["runCode"];
                          }
                        }}
                      >
                        {
                          "\u062a\u0648\u0633\u0639\u0647\u200c\u062f\u0647\u0646\u062f\u0647 \u0646\u0631\u0645\u200c\u0627\u0641\u0632\u0627\u0631"
                        }
                      </div>
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"member2"}
                    data-plasmic-override={overrides.member2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.member2)}
                  >
                    <div
                      data-plasmic-name={"icon2"}
                      data-plasmic-override={overrides.icon2}
                      className={classNames(projectcss.all, sty.icon2)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__ucUvY)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "50%"
                            : "70%"
                        }
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/photo20240703115630288X300Webp.webp",
                          fullWidth: 288,
                          fullHeight: 300,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"title2"}
                      data-plasmic-override={overrides.title2}
                      className={classNames(projectcss.all, sty.title2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bbkiY
                        )}
                      >
                        {
                          "\u0632\u0647\u0631\u0627 \u0627\u0628\u0648\u0627\u0644\u062d\u0633\u0646\u06cc"
                        }
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"caption2"}
                      data-plasmic-override={overrides.caption2}
                      className={classNames(projectcss.all, sty.caption2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xzGw
                        )}
                        onClick={async event => {
                          const $steps = {};

                          $steps["runCode"] = true
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (() => {
                                      return window.open(
                                        "https://www.linkedin.com/in/zahra-abolhasani-375125315/",
                                        "_blank"
                                      );
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode"] != null &&
                            typeof $steps["runCode"] === "object" &&
                            typeof $steps["runCode"].then === "function"
                          ) {
                            $steps["runCode"] = await $steps["runCode"];
                          }
                        }}
                      >
                        {
                          "\u0645\u0648\u0641\u0642\u06cc\u062a \u06a9\u0627\u0631\u0628\u0631\u0627\u0646"
                        }
                      </div>
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"member"}
                    data-plasmic-override={overrides.member}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.member)}
                  >
                    <div
                      data-plasmic-name={"icon"}
                      data-plasmic-override={overrides.icon}
                      className={classNames(projectcss.all, sty.icon)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__tGoln)}
                        displayHeight={"auto"}
                        displayMaxHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "120px"
                            : "none"
                        }
                        displayMaxWidth={
                          hasVariant(globalVariants, "screen", "smallMobile")
                            ? "80%"
                            : hasVariant(globalVariants, "screen", "mobile")
                            ? "120px"
                            : "70%"
                        }
                        displayMinHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "120px"
                            : "0"
                        }
                        displayMinWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? "120px"
                            : "0"
                        }
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/website_starter/images/boojarJpg.jpg",
                          fullWidth: 300,
                          fullHeight: 300,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      data-plasmic-name={"title"}
                      data-plasmic-override={overrides.title}
                      className={classNames(projectcss.all, sty.title)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___7UeVi
                        )}
                        onClick={async event => {
                          const $steps = {};

                          $steps["updatePropertyId"] = true
                            ? (() => {
                                const actionArgs = {
                                  variable: {
                                    objRoot: $state,
                                    variablePath: ["propertyId"]
                                  },
                                  operation: 0
                                };
                                return (({
                                  variable,
                                  value,
                                  startIndex,
                                  deleteCount
                                }) => {
                                  if (!variable) {
                                    return;
                                  }
                                  const { objRoot, variablePath } = variable;

                                  $stateSet(objRoot, variablePath, value);
                                  return value;
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["updatePropertyId"] != null &&
                            typeof $steps["updatePropertyId"] === "object" &&
                            typeof $steps["updatePropertyId"].then ===
                              "function"
                          ) {
                            $steps["updatePropertyId"] = await $steps[
                              "updatePropertyId"
                            ];
                          }
                        }}
                      >
                        {
                          "\u0646\u0627\u0632\u0646\u06cc\u0646 \u0628\u0648\u062c\u0627\u0631"
                        }
                      </div>
                    </div>
                    <div
                      data-plasmic-name={"caption"}
                      data-plasmic-override={overrides.caption}
                      className={classNames(projectcss.all, sty.caption)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uvJa1
                        )}
                        onClick={async event => {
                          const $steps = {};

                          $steps["runCode"] = true
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (() => {
                                      return window.open(
                                        "https://www.linkedin.com/in/nazaninboojar/",
                                        "_blank"
                                      );
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode"] != null &&
                            typeof $steps["runCode"] === "object" &&
                            typeof $steps["runCode"].then === "function"
                          ) {
                            $steps["runCode"] = await $steps["runCode"];
                          }
                        }}
                      >
                        {
                          "\u0647\u0645\u200c\u0628\u0646\u06cc\u0627\u0646\u200c\u06af\u0630\u0627\u0631 \u0648 \u0645\u062f\u06cc\u0631\u0645\u062d\u0635\u0648\u0644"
                        }
                      </div>
                    </div>
                  </Stack__>
                </div>
                {(
                  hasVariant(globalVariants, "screen", "mobile") ? true : false
                ) ? (
                  <div
                    data-plasmic-name={"members2"}
                    data-plasmic-override={overrides.members2}
                    className={classNames(projectcss.all, sty.members2)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"member7"}
                      data-plasmic-override={overrides.member7}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.member7)}
                    >
                      <div
                        data-plasmic-name={"icon7"}
                        data-plasmic-override={overrides.icon7}
                        className={classNames(projectcss.all, sty.icon7)}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__dlV88)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={
                            hasVariant(globalVariants, "screen", "mobile")
                              ? "50%"
                              : "70%"
                          }
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/website_starter/images/hamidiJpg.jpg",
                            fullWidth: 300,
                            fullHeight: 300,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                      <div
                        data-plasmic-name={"title8"}
                        data-plasmic-override={overrides.title8}
                        className={classNames(projectcss.all, sty.title8)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__heZiH
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "tablet")
                            ? "\u0645\u062d\u0645\u062f \u062d\u0633\u06cc\u0646 \u062d\u0645\u06cc\u062f\u06cc"
                            : "\u0645\u062d\u0645\u062f\u062d\u0633\u06cc\u0646 \u062d\u0645\u06cc\u062f\u06cc"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"caption7"}
                        data-plasmic-override={overrides.caption7}
                        className={classNames(projectcss.all, sty.caption7)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ssEtA
                          )}
                          onClick={async event => {
                            const $steps = {};

                            $steps["runCode"] = true
                              ? (() => {
                                  const actionArgs = {
                                    customFunction: async () => {
                                      return (() => {
                                        return window.open(
                                          "https://www.linkedin.com/in/s-m-hossein-hamidi/",
                                          "_blank"
                                        );
                                      })();
                                    }
                                  };
                                  return (({ customFunction }) => {
                                    return customFunction();
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["runCode"] != null &&
                              typeof $steps["runCode"] === "object" &&
                              typeof $steps["runCode"].then === "function"
                            ) {
                              $steps["runCode"] = await $steps["runCode"];
                            }
                          }}
                        >
                          {hasVariant(globalVariants, "screen", "tablet")
                            ? "\u0645\u0634\u0627\u0648\u0631 \u0648 \u0631\u0627\u0647\u0628\u0631"
                            : "\u0645\u0634\u0627\u0648\u0631 \u0648 \u0631\u0627\u0647\u0628\u0631 \u0645\u062d\u0635\u0648\u0644"}
                        </div>
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"member8"}
                      data-plasmic-override={overrides.member8}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.member8)}
                    >
                      <div
                        data-plasmic-name={"icon8"}
                        data-plasmic-override={overrides.icon8}
                        className={classNames(projectcss.all, sty.icon8)}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__itAmY)}
                          displayHeight={"auto"}
                          displayMaxHeight={
                            hasVariant(globalVariants, "screen", "mobile")
                              ? "120px"
                              : "none"
                          }
                          displayMaxWidth={
                            hasVariant(globalVariants, "screen", "smallMobile")
                              ? "80%"
                              : hasVariant(globalVariants, "screen", "mobile")
                              ? "120px"
                              : "70%"
                          }
                          displayMinHeight={
                            hasVariant(globalVariants, "screen", "mobile")
                              ? "120px"
                              : "0"
                          }
                          displayMinWidth={
                            hasVariant(globalVariants, "screen", "mobile")
                              ? "120px"
                              : "0"
                          }
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={
                            hasVariant(globalVariants, "screen", "mobile")
                              ? {
                                  src: "/plasmic/website_starter/images/hamidiJpg.jpg",
                                  fullWidth: 300,
                                  fullHeight: 300,
                                  aspectRatio: undefined
                                }
                              : {
                                  src: "/plasmic/website_starter/images/small300X288Jpg.jpg",
                                  fullWidth: 300,
                                  fullHeight: 288,
                                  aspectRatio: undefined
                                }
                          }
                        />
                      </div>
                      <div
                        data-plasmic-name={"title9"}
                        data-plasmic-override={overrides.title9}
                        className={classNames(projectcss.all, sty.title9)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___0DAaJ
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "tablet")
                            ? "\u0645\u062d\u0645\u062f\u062d\u0633\u06cc\u0646 \u062d\u0645\u06cc\u062f\u06cc"
                            : "\u0633\u06cc\u062f \u0645\u0635\u0637\u0641\u06cc \u0641\u0642\u06cc\u0647"}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"caption8"}
                        data-plasmic-override={overrides.caption8}
                        className={classNames(projectcss.all, sty.caption8)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__e3KTb
                          )}
                          onClick={async event => {
                            const $steps = {};

                            $steps["runCode"] = true
                              ? (() => {
                                  const actionArgs = {
                                    customFunction: async () => {
                                      return (() => {
                                        return window.open(
                                          "https://www.linkedin.com/in/s-m-hossein-hamidi/",
                                          "_blank"
                                        );
                                      })();
                                    }
                                  };
                                  return (({ customFunction }) => {
                                    return customFunction();
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["runCode"] != null &&
                              typeof $steps["runCode"] === "object" &&
                              typeof $steps["runCode"].then === "function"
                            ) {
                              $steps["runCode"] = await $steps["runCode"];
                            }
                          }}
                        >
                          {hasVariant(globalVariants, "screen", "tablet")
                            ? "\u0645\u0634\u0627\u0648\u0631 \u0648 \u0631\u0627\u0647\u0628\u0631"
                            : "\u0628\u0646\u06cc\u0627\u0646\u200c\u06af\u0630\u0627\u0631 \u0648 \u0645\u062f\u06cc\u0631\u0639\u0627\u0645\u0644"}
                        </div>
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"member9"}
                      data-plasmic-override={overrides.member9}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.member9)}
                    >
                      <div
                        data-plasmic-name={"icon9"}
                        data-plasmic-override={overrides.icon9}
                        className={classNames(projectcss.all, sty.icon9)}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img___4G1K0)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={
                            hasVariant(globalVariants, "screen", "mobile")
                              ? "50%"
                              : "70%"
                          }
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/website_starter/images/parsaJpg.jpg",
                            fullWidth: 243,
                            fullHeight: 243,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                      <div
                        data-plasmic-name={"title10"}
                        data-plasmic-override={overrides.title10}
                        className={classNames(projectcss.all, sty.title10)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qiEn
                          )}
                        >
                          {
                            "\u067e\u0627\u0631\u0633\u0627 \u062e\u0633\u0631\u0648\u06cc"
                          }
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"caption9"}
                        data-plasmic-override={overrides.caption9}
                        className={classNames(projectcss.all, sty.caption9)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kaBfc
                          )}
                          onClick={async event => {
                            const $steps = {};

                            $steps["runCode"] = true
                              ? (() => {
                                  const actionArgs = {
                                    customFunction: async () => {
                                      return (() => {
                                        return window.open(
                                          "https://www.linkedin.com/in/parsa-khosravi-70432a244/",
                                          "_blank"
                                        );
                                      })();
                                    }
                                  };
                                  return (({ customFunction }) => {
                                    return customFunction();
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["runCode"] != null &&
                              typeof $steps["runCode"] === "object" &&
                              typeof $steps["runCode"].then === "function"
                            ) {
                              $steps["runCode"] = await $steps["runCode"];
                            }
                          }}
                        >
                          {
                            "\u062a\u0648\u0633\u0639\u0647\u200c\u062f\u0647\u0646\u062f\u0647 \u0641\u0646\u06cc"
                          }
                        </div>
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"member10"}
                      data-plasmic-override={overrides.member10}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.member10)}
                    >
                      <div
                        data-plasmic-name={"icon10"}
                        data-plasmic-override={overrides.icon10}
                        className={classNames(projectcss.all, sty.icon10)}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__ut3LR)}
                          displayHeight={"auto"}
                          displayMaxHeight={
                            hasVariant(globalVariants, "screen", "mobile")
                              ? "120px"
                              : "none"
                          }
                          displayMaxWidth={
                            hasVariant(globalVariants, "screen", "smallMobile")
                              ? "80%"
                              : hasVariant(globalVariants, "screen", "mobile")
                              ? "120px"
                              : "70%"
                          }
                          displayMinHeight={
                            hasVariant(globalVariants, "screen", "mobile")
                              ? "120px"
                              : "0"
                          }
                          displayMinWidth={
                            hasVariant(globalVariants, "screen", "mobile")
                              ? "120px"
                              : "0"
                          }
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={
                            hasVariant(globalVariants, "screen", "mobile")
                              ? {
                                  src: "/plasmic/website_starter/images/parsaJpg.jpg",
                                  fullWidth: 243,
                                  fullHeight: 243,
                                  aspectRatio: undefined
                                }
                              : {
                                  src: "/plasmic/website_starter/images/photo20240908194639300X300Jpg.jpg",
                                  fullWidth: 300,
                                  fullHeight: 300,
                                  aspectRatio: undefined
                                }
                          }
                        />
                      </div>
                      <div
                        data-plasmic-name={"title11"}
                        data-plasmic-override={overrides.title11}
                        className={classNames(projectcss.all, sty.title11)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__akJli
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "tablet") ? (
                            "\u067e\u0627\u0631\u0633\u0627 \u062e\u0633\u0631\u0648\u06cc"
                          ) : (
                            <React.Fragment>
                              {(() => {
                                try {
                                  return undefined;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "\u0639\u0644\u06cc\u0631\u0636\u0627 \u0646\u06cc\u06a9\u0648\u0646\u06cc\u0627";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          )}
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"caption10"}
                        data-plasmic-override={overrides.caption10}
                        className={classNames(projectcss.all, sty.caption10)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__klm9C
                          )}
                          onClick={async event => {
                            const $steps = {};

                            $steps["runCode"] = true
                              ? (() => {
                                  const actionArgs = {
                                    customFunction: async () => {
                                      return (() => {
                                        return window.open(
                                          "https://www.linkedin.com/in/parsa-khosravi-70432a244/",
                                          "_blank"
                                        );
                                      })();
                                    }
                                  };
                                  return (({ customFunction }) => {
                                    return customFunction();
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["runCode"] != null &&
                              typeof $steps["runCode"] === "object" &&
                              typeof $steps["runCode"].then === "function"
                            ) {
                              $steps["runCode"] = await $steps["runCode"];
                            }
                          }}
                        >
                          {hasVariant(globalVariants, "screen", "tablet")
                            ? "\u062a\u0648\u0633\u0639\u0647\u200c\u062f\u0647\u0646\u062f\u0647 \u0641\u0646\u06cc"
                            : "\u062a\u0648\u0633\u0639\u0647\u200c\u062f\u0647\u0646\u062f\u0647 \u0646\u0631\u0645\u200c\u0627\u0641\u0632\u0627\u0631"}
                        </div>
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"member11"}
                      data-plasmic-override={overrides.member11}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.member11)}
                    >
                      <div
                        data-plasmic-name={"icon11"}
                        data-plasmic-override={overrides.icon11}
                        className={classNames(projectcss.all, sty.icon11)}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__tmvmR)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={
                            hasVariant(globalVariants, "screen", "mobile")
                              ? "50%"
                              : "70%"
                          }
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/website_starter/images/photo20240703115630288X300Webp.webp",
                            fullWidth: 288,
                            fullHeight: 300,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                      <div
                        data-plasmic-name={"title12"}
                        data-plasmic-override={overrides.title12}
                        className={classNames(projectcss.all, sty.title12)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__oaeKx
                          )}
                        >
                          {
                            "\u0632\u0647\u0631\u0627 \u0627\u0628\u0648\u0627\u0644\u062d\u0633\u0646\u06cc"
                          }
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"caption11"}
                        data-plasmic-override={overrides.caption11}
                        className={classNames(projectcss.all, sty.caption11)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mgg4Z
                          )}
                          onClick={async event => {
                            const $steps = {};

                            $steps["runCode"] = true
                              ? (() => {
                                  const actionArgs = {
                                    customFunction: async () => {
                                      return (() => {
                                        return window.open(
                                          "https://www.linkedin.com/in/zahra-abolhasani-375125315/",
                                          "_blank"
                                        );
                                      })();
                                    }
                                  };
                                  return (({ customFunction }) => {
                                    return customFunction();
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["runCode"] != null &&
                              typeof $steps["runCode"] === "object" &&
                              typeof $steps["runCode"].then === "function"
                            ) {
                              $steps["runCode"] = await $steps["runCode"];
                            }
                          }}
                        >
                          {
                            "\u0645\u0648\u0641\u0642\u06cc\u062a \u06a9\u0627\u0631\u0628\u0631\u0627\u0646"
                          }
                        </div>
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"member12"}
                      data-plasmic-override={overrides.member12}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.member12)}
                    >
                      <div
                        data-plasmic-name={"icon12"}
                        data-plasmic-override={overrides.icon12}
                        className={classNames(projectcss.all, sty.icon12)}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__qrgBa)}
                          displayHeight={"auto"}
                          displayMaxHeight={
                            hasVariant(globalVariants, "screen", "mobile")
                              ? "120px"
                              : "none"
                          }
                          displayMaxWidth={
                            hasVariant(globalVariants, "screen", "smallMobile")
                              ? "80%"
                              : hasVariant(globalVariants, "screen", "mobile")
                              ? "120px"
                              : "70%"
                          }
                          displayMinHeight={
                            hasVariant(globalVariants, "screen", "mobile")
                              ? "120px"
                              : "0"
                          }
                          displayMinWidth={
                            hasVariant(globalVariants, "screen", "mobile")
                              ? "120px"
                              : "0"
                          }
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={
                            hasVariant(globalVariants, "screen", "mobile")
                              ? {
                                  src: "/plasmic/website_starter/images/photo20240703115630288X300Webp.webp",
                                  fullWidth: 288,
                                  fullHeight: 300,
                                  aspectRatio: undefined
                                }
                              : {
                                  src: "/plasmic/website_starter/images/boojarJpg.jpg",
                                  fullWidth: 300,
                                  fullHeight: 300,
                                  aspectRatio: undefined
                                }
                          }
                        />
                      </div>
                      <div
                        data-plasmic-name={"title13"}
                        data-plasmic-override={overrides.title13}
                        className={classNames(projectcss.all, sty.title13)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__uxgX3
                          )}
                          onClick={async event => {
                            const $steps = {};

                            $steps["updatePropertyId"] = true
                              ? (() => {
                                  const actionArgs = {
                                    variable: {
                                      objRoot: $state,
                                      variablePath: ["propertyId"]
                                    },
                                    operation: 0
                                  };
                                  return (({
                                    variable,
                                    value,
                                    startIndex,
                                    deleteCount
                                  }) => {
                                    if (!variable) {
                                      return;
                                    }
                                    const { objRoot, variablePath } = variable;

                                    $stateSet(objRoot, variablePath, value);
                                    return value;
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["updatePropertyId"] != null &&
                              typeof $steps["updatePropertyId"] === "object" &&
                              typeof $steps["updatePropertyId"].then ===
                                "function"
                            ) {
                              $steps["updatePropertyId"] = await $steps[
                                "updatePropertyId"
                              ];
                            }
                          }}
                        >
                          {
                            "\u0632\u0647\u0631\u0627 \u0627\u0628\u0648\u0627\u0644\u062d\u0633\u0646\u06cc"
                          }
                        </div>
                      </div>
                      <div
                        data-plasmic-name={"caption12"}
                        data-plasmic-override={overrides.caption12}
                        className={classNames(projectcss.all, sty.caption12)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___8K30O
                          )}
                          onClick={async event => {
                            const $steps = {};

                            $steps["runCode"] = true
                              ? (() => {
                                  const actionArgs = {
                                    customFunction: async () => {
                                      return (() => {
                                        return window.open(
                                          "https://www.linkedin.com/in/zahra-abolhasani-375125315/",
                                          "_blank"
                                        );
                                      })();
                                    }
                                  };
                                  return (({ customFunction }) => {
                                    return customFunction();
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["runCode"] != null &&
                              typeof $steps["runCode"] === "object" &&
                              typeof $steps["runCode"].then === "function"
                            ) {
                              $steps["runCode"] = await $steps["runCode"];
                            }
                          }}
                        >
                          {hasVariant(globalVariants, "screen", "tablet")
                            ? "\u0645\u0648\u0641\u0642\u06cc\u062a \u06a9\u0627\u0631\u0628\u0631\u0627\u0646"
                            : "\u0647\u0645\u200c\u0628\u0646\u06cc\u0627\u0646\u200c\u06af\u0630\u0627\u0631 \u0648 \u0645\u062f\u06cc\u0631\u0645\u062d\u0635\u0648\u0644"}
                        </div>
                      </div>
                    </Stack__>
                  </div>
                ) : null}
              </div>
            </div>
            <div
              data-plasmic-name={"principles"}
              data-plasmic-override={overrides.principles}
              className={classNames(projectcss.all, sty.principles)}
            >
              <div
                data-plasmic-name={"title7"}
                data-plasmic-override={overrides.title7}
                className={classNames(projectcss.all, sty.title7)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tywBr
                  )}
                >
                  {
                    "\u0627\u0635\u0648\u0644 \u062d\u0627\u06a9\u0645 \u0628\u0631 \u0631\u0646\u062a\u0627\u0645\u0648\u0646:\r"
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"uotlines"}
                data-plasmic-override={overrides.uotlines}
                className={classNames(projectcss.all, sty.uotlines)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2Smea
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ul
                        data-plasmic-name={"ul"}
                        data-plasmic-override={overrides.ul}
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__ts82O
                          )}
                        >
                          {
                            "\u0627\u0648\u0644\u0648\u06cc\u062a \u0627\u0648\u0644 \u0628\u0631\u0627\u06cc \u062a\u0635\u0645\u06cc\u0645\u200c\u06af\u06cc\u0631\u06cc \u062e\u0648\u0634\u062d\u0627\u0644\u06cc \u06a9\u0627\u0631\u0628\u0631\u0647\u060c \u0646\u0647 \u062a\u0648\u0627\u0646\u0627\u06cc\u06cc \u0645\u0627"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__tz4ML
                          )}
                        >
                          {
                            "\u062a\u0637\u0627\u0628\u0642 \u0641\u0631\u0647\u0646\u06af\u06cc \u0627\u0639\u0636\u0627\u06cc \u062a\u06cc\u0645 (culture fit \u0628\u0648\u062f\u0646) \u0627\u0632 \u0645\u0647\u0627\u0631\u062a \u0641\u0631\u062f\u06cc \u0645\u0647\u0645\u200c\u062a\u0631\u0647"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__tK7Eu
                          )}
                        >
                          {
                            "\u0633\u0631\u0639\u062a \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u0627\u0632 \u0645\u0647\u0627\u0631\u062a \u0641\u0639\u0644\u06cc \u0645\u0647\u0645\u200c\u062a\u0631\u0647"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___6D6LN
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>
                              {
                                "\u0633\u0644\u0633\u0644\u0647\u200c\u0645\u0631\u0627\u062a\u0628\u06cc \u0646\u06cc\u0633\u062a\u06cc\u0645 \u0648 \u0645\u06cc\u200c\u062e\u0648\u0627\u06cc\u0645 flat \u0628\u0627\u0634\u06cc\u0645 ("
                              }
                            </React.Fragment>
                            {
                              <PlasmicLink__
                                className={classNames(
                                  projectcss.all,
                                  projectcss.a,
                                  projectcss.__wab_text,
                                  projectcss.plasmic_default__inline,
                                  sty.link__lmQNn
                                )}
                                component={Link}
                                platform={"nextjs"}
                              >
                                {
                                  "\u0627\u0644\u06af\u0648 \u0633\u0627\u062e\u062a\u0627\u0631 \u062a\u06cc\u0645\u200c\u0647\u0627"
                                }
                              </PlasmicLink__>
                            }
                            <React.Fragment>{")"}</React.Fragment>
                          </React.Fragment>
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__otPvx
                          )}
                        >
                          {
                            "\u0633\u0639\u06cc \u0645\u06cc\u200c\u06a9\u0646\u06cc\u0645 \u0622\u062f\u0645\u200c\u0647\u0627 \u062d\u062f\u0627\u06a9\u062b\u0631 \u0622\u0632\u0627\u062f\u06cc \u0639\u0645\u0644 \u0631\u0648 \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u0646\u062f. (Authority and autonomy)"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___6WSkN
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>
                              {
                                "\u0622\u0632\u0627\u062f\u06cc \u062f\u0631 \u06a9\u0646\u0627\u0631 \u0645\u0633\u0626\u0648\u0644\u06cc\u062a\u200c\u067e\u0630\u06cc\u0631\u06cc \u0628\u0631 \u0627\u0633\u0627\u0633 \u0645\u062f\u0644 \u0645\u0637\u0631\u062d \u0634\u062f\u0647 \u062f\u0631 "
                              }
                            </React.Fragment>
                            {
                              <PlasmicLink__
                                className={classNames(
                                  projectcss.all,
                                  projectcss.a,
                                  projectcss.__wab_text,
                                  projectcss.plasmic_default__inline,
                                  sty.link__zU6Mf
                                )}
                                component={Link}
                                platform={"nextjs"}
                              >
                                {
                                  "\u06a9\u062a\u0627\u0628 \u0642\u0627\u0646\u0648\u0646 \u0628\u06cc\u200c\u0642\u0627\u0646\u0648\u0646\u06cc"
                                }
                              </PlasmicLink__>
                            }
                            <React.Fragment>{" \u0648 "}</React.Fragment>
                            {
                              <PlasmicLink__
                                className={classNames(
                                  projectcss.all,
                                  projectcss.a,
                                  projectcss.__wab_text,
                                  projectcss.plasmic_default__inline,
                                  sty.link___8A0Rf
                                )}
                                component={Link}
                                platform={"nextjs"}
                              >
                                {"\u0627\u06cc\u0646\u062c\u0627"}
                              </PlasmicLink__>
                            }
                            <React.Fragment>{""}</React.Fragment>
                          </React.Fragment>
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__fKxgq
                          )}
                        >
                          {
                            "\u0627\u0641\u0631\u0627\u062f\u06cc \u06a9\u0647 \u0627\u0648\u0644\u0648\u06cc\u062a \u0627\u0648\u0644 \u0632\u0646\u062f\u06af\u06cc\u200c\u0634\u0648\u0646 \u00ab\u0631\u0634\u062f \u0648 \u062a\u0648\u0633\u0639\u0647\u200c\u06cc \u0641\u0631\u062f\u06cc\u0647\u00bb \u0627\u06cc\u0646\u062c\u0627 \u062e\u0648\u0634\u062d\u0627\u0644\u0646"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__vumsQ
                          )}
                        >
                          {
                            "\u0645\u06cc\u200c\u062e\u0648\u0627\u06cc\u0645 \u062c\u0632\u0648 \u0633\u0631\u06cc\u0639\u200c\u0627\u0644\u0631\u0634\u062f\u200c\u0647\u0627 \u0628\u0627\u0634\u06cc\u0645\u060c \u067e\u0633 \u0628\u0627 \u0627\u0639\u0637\u0627\u0621 \u0633\u0647\u0627\u0645 \u062f\u0631 \u0631\u0634\u062f \u0634\u0631\u06a9\u062a \u0634\u0631\u06cc\u06a9 \u0645\u06cc\u200c\u0634\u06cc\u0645"
                          }
                        </li>
                      </ul>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
              <div
                data-plasmic-name={"gallery"}
                data-plasmic-override={overrides.gallery}
                className={classNames(projectcss.all, sty.gallery)}
              >
                <div
                  data-plasmic-name={"introAutoSyncGif2"}
                  data-plasmic-override={overrides.introAutoSyncGif2}
                  className={classNames(projectcss.all, sty.introAutoSyncGif2)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__eS5B6)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/meetingJpg.jpg",
                      fullWidth: 800,
                      fullHeight: 409,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"teamup"}
              data-plasmic-override={overrides.teamup}
              className={classNames(projectcss.all, sty.teamup)}
            >
              <div
                data-plasmic-name={"introAutoSyncTitle3"}
                data-plasmic-override={overrides.introAutoSyncTitle3}
                className={classNames(projectcss.all, sty.introAutoSyncTitle3)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oxUg7
                  )}
                >
                  {
                    "\u0647\u0645\u0631\u0627\u0647 \u0634\u0648 \u0639\u0632\u06cc\u0632 :\u200c)"
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"introAutoSyncCaption3"}
                data-plasmic-override={overrides.introAutoSyncCaption3}
                className={classNames(
                  projectcss.all,
                  sty.introAutoSyncCaption3
                )}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__eiQcw
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "\u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0641\u0631\u0635\u062a\u200c\u0647\u0627\u06cc \u0634\u063a\u0644\u06cc \u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u062f\u0631 "
                      }
                    </React.Fragment>
                    {
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          projectcss.plasmic_default__inline,
                          sty.link___1GwSz
                        )}
                        component={Link}
                        href={
                          "https://jobvision.ir/companies/104272/%D8%A7%D8%B3%D8%AA%D8%AE%D8%AF%D8%A7%D9%85-%D8%B1%D9%86%D8%AA%D8%A7%D9%85%D9%88%D9%86"
                        }
                        platform={"nextjs"}
                      >
                        {"\u062c\u0627\u0628\u200c\u0648\u06cc\u0698\u0646"}
                      </PlasmicLink__>
                    }
                    <React.Fragment>
                      {
                        " \u0628\u0628\u06cc\u0646\u06cc \u0648 \u06cc\u0627 \u0631\u0632\u0648\u0645\u0647\u200c\u0627\u062a \u0631\u0648 \u0628\u0647 \u0627\u06cc\u0646 \u0622\u062f\u0631\u0633 \u0628\u0641\u0631\u0633\u062a\u06cc:\r\ninfo [at] rentamon.com\n"
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontStyle: "italic" }}
                    >
                      {
                        "(\u0628\u0647 \u0645\u0646\u0642\u0636\u06cc \u0634\u062f\u0646 \u0622\u06af\u0647\u06cc \u0634\u063a\u0644\u06cc \u062a\u0648\u062c\u0647 \u0646\u06a9\u0646)"
                      }
                    </span>
                    <React.Fragment>{"\r"}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"address"}
              data-plasmic-override={overrides.address}
              className={classNames(projectcss.all, sty.address)}
            >
              <div
                data-plasmic-name={"content"}
                data-plasmic-override={overrides.content}
                className={classNames(projectcss.all, sty.content)}
              >
                <div
                  data-plasmic-name={"addressText"}
                  data-plasmic-override={overrides.addressText}
                  className={classNames(projectcss.all, sty.addressText)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__t7Oz
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {
                          "\u0642\u0645\u060c \u067e\u0631\u062f\u06cc\u0633\u0627\u0646\u060c \u0628\u0644\u0648\u0627\u0631 \u0645\u0648\u0644\u0648\u06cc\u060c \u067e\u0627\u0631\u06a9 \u0639\u0644\u0645 \u0648 \u0641\u0646\u0627\u0648\u0631\u06cc \u0642\u0645\u060c \u0628\u0644\u0648\u06a9 \u06f1\u060c \u0637\u0628\u0642\u0647 \u06f3\u060c \u0634\u0631\u06a9\u062a \u062a\u0648\u0633\u0639\u0647 \u0641\u0646\u0627\u0648\u0631\u06cc \u0648 \u062a\u0648\u0627\u0646\u0645\u0646\u062f\u0633\u0627\u0632\u06cc \u0634\u0631\u06cc\u0641\r\n\r\n\n\u062a\u0645\u0627\u0633: "
                        }
                      </React.Fragment>
                      {
                        <PlasmicLink__
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__cNvbN
                          )}
                          component={Link}
                          href={"tel: 02191096227"}
                          platform={"nextjs"}
                        >
                          {
                            "\u06f0\u06f2\u06f1-\u06f9\u06f1\u06f0\u06f9\u06f6\u06f2\u06f2\u06f7"
                          }
                        </PlasmicLink__>
                      }
                      <React.Fragment>
                        {
                          "\r\n\u06a9\u062f \u067e\u0633\u062a\u06cc: \u06f3\u06f7\u06f4\u06f9\u06f1\u06f1\u06f3\u06f9\u06f1\u06f6\r\n\u0627\u06cc\u0645\u06cc\u0644: info [at] rentamon.com"
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
                <div
                  data-plasmic-name={"map"}
                  data-plasmic-override={overrides.map}
                  className={classNames(projectcss.all, sty.map)}
                >
                  <Embed
                    data-plasmic-name={"embedHtml"}
                    data-plasmic-override={overrides.embedHtml}
                    className={classNames("__wab_instance", sty.embedHtml)}
                    code={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? '<div style="width: 100%; height: 100%;">\r\n  <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3285.336332222352!2d50.80808741151561!3d34.57035540330491!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3f93a3007be0a67b%3A0x5974548a77f028da!2z2LTYsdqp2Kog2LHZhtiq2KfZhdmI2YYgfCBSZW50YW1vbg!5e0!3m2!1sen!2s!4v1739718249338!5m2!1sen!2s" style="width: 100%; height: 100%; border: 0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>\r\n</div>\r\n'
                        : hasVariant(globalVariants, "screen", "tablet")
                        ? '<div style="width: 100%; height: 100%;">\r\n  <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3285.336332222352!2d50.80808741151561!3d34.57035540330491!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3f93a3007be0a67b%3A0x5974548a77f028da!2z2LTYsdqp2Kog2LHZhtiq2KfZhdmI2YYgfCBSZW50YW1vbg!5e0!3m2!1sen!2s!4v1739718249338!5m2!1sen!2s" style="width: 100%; height: 100%; border: 0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>\r\n</div>\r\n'
                        : '<div style="width: 100%; height: 100%;">\r\n  <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3285.336332222352!2d50.80808741151561!3d34.57035540330491!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3f93a3007be0a67b%3A0x5974548a77f028da!2z2LTYsdqp2Kog2LHZhtiq2KfZhdmI2YYgfCBSZW50YW1vbg!5e0!3m2!1sen!2s!4v1739718249338!5m2!1sen!2s" style="width: 100%; height: 100%; border: 0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>\r\n</div>\r\n'
                    }
                  />
                </div>
              </div>
            </div>
          </div>
          <RentamonFooter
            data-plasmic-name={"rentamonFooter"}
            data-plasmic-override={overrides.rentamonFooter}
            className={classNames("__wab_instance", sty.rentamonFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbarRentamonComponent",
    "mainContents",
    "intro1st",
    "introTitle",
    "teamImage",
    "introCalendarLeft",
    "introduction",
    "team",
    "sectionTitle",
    "freeBox",
    "members",
    "member6",
    "icon6",
    "title6",
    "caption6",
    "member5",
    "icon5",
    "title5",
    "caption5",
    "member4",
    "icon4",
    "title4",
    "caption4",
    "member3",
    "icon3",
    "title3",
    "caption3",
    "member2",
    "icon2",
    "title2",
    "caption2",
    "member",
    "icon",
    "title",
    "caption",
    "members2",
    "member7",
    "icon7",
    "title8",
    "caption7",
    "member8",
    "icon8",
    "title9",
    "caption8",
    "member9",
    "icon9",
    "title10",
    "caption9",
    "member10",
    "icon10",
    "title11",
    "caption10",
    "member11",
    "icon11",
    "title12",
    "caption11",
    "member12",
    "icon12",
    "title13",
    "caption12",
    "principles",
    "title7",
    "uotlines",
    "ul",
    "gallery",
    "introAutoSyncGif2",
    "teamup",
    "introAutoSyncTitle3",
    "introAutoSyncCaption3",
    "address",
    "content",
    "addressText",
    "map",
    "embedHtml",
    "rentamonFooter"
  ],
  navbarRentamonComponent: ["navbarRentamonComponent"],
  mainContents: [
    "mainContents",
    "intro1st",
    "introTitle",
    "teamImage",
    "introCalendarLeft",
    "introduction",
    "team",
    "sectionTitle",
    "freeBox",
    "members",
    "member6",
    "icon6",
    "title6",
    "caption6",
    "member5",
    "icon5",
    "title5",
    "caption5",
    "member4",
    "icon4",
    "title4",
    "caption4",
    "member3",
    "icon3",
    "title3",
    "caption3",
    "member2",
    "icon2",
    "title2",
    "caption2",
    "member",
    "icon",
    "title",
    "caption",
    "members2",
    "member7",
    "icon7",
    "title8",
    "caption7",
    "member8",
    "icon8",
    "title9",
    "caption8",
    "member9",
    "icon9",
    "title10",
    "caption9",
    "member10",
    "icon10",
    "title11",
    "caption10",
    "member11",
    "icon11",
    "title12",
    "caption11",
    "member12",
    "icon12",
    "title13",
    "caption12",
    "principles",
    "title7",
    "uotlines",
    "ul",
    "gallery",
    "introAutoSyncGif2",
    "teamup",
    "introAutoSyncTitle3",
    "introAutoSyncCaption3",
    "address",
    "content",
    "addressText",
    "map",
    "embedHtml"
  ],
  intro1st: ["intro1st", "introTitle", "teamImage", "introCalendarLeft"],
  introTitle: ["introTitle"],
  teamImage: ["teamImage", "introCalendarLeft"],
  introCalendarLeft: ["introCalendarLeft"],
  introduction: ["introduction"],
  team: [
    "team",
    "sectionTitle",
    "freeBox",
    "members",
    "member6",
    "icon6",
    "title6",
    "caption6",
    "member5",
    "icon5",
    "title5",
    "caption5",
    "member4",
    "icon4",
    "title4",
    "caption4",
    "member3",
    "icon3",
    "title3",
    "caption3",
    "member2",
    "icon2",
    "title2",
    "caption2",
    "member",
    "icon",
    "title",
    "caption",
    "members2",
    "member7",
    "icon7",
    "title8",
    "caption7",
    "member8",
    "icon8",
    "title9",
    "caption8",
    "member9",
    "icon9",
    "title10",
    "caption9",
    "member10",
    "icon10",
    "title11",
    "caption10",
    "member11",
    "icon11",
    "title12",
    "caption11",
    "member12",
    "icon12",
    "title13",
    "caption12"
  ],
  sectionTitle: ["sectionTitle"],
  freeBox: [
    "freeBox",
    "members",
    "member6",
    "icon6",
    "title6",
    "caption6",
    "member5",
    "icon5",
    "title5",
    "caption5",
    "member4",
    "icon4",
    "title4",
    "caption4",
    "member3",
    "icon3",
    "title3",
    "caption3",
    "member2",
    "icon2",
    "title2",
    "caption2",
    "member",
    "icon",
    "title",
    "caption",
    "members2",
    "member7",
    "icon7",
    "title8",
    "caption7",
    "member8",
    "icon8",
    "title9",
    "caption8",
    "member9",
    "icon9",
    "title10",
    "caption9",
    "member10",
    "icon10",
    "title11",
    "caption10",
    "member11",
    "icon11",
    "title12",
    "caption11",
    "member12",
    "icon12",
    "title13",
    "caption12"
  ],
  members: [
    "members",
    "member6",
    "icon6",
    "title6",
    "caption6",
    "member5",
    "icon5",
    "title5",
    "caption5",
    "member4",
    "icon4",
    "title4",
    "caption4",
    "member3",
    "icon3",
    "title3",
    "caption3",
    "member2",
    "icon2",
    "title2",
    "caption2",
    "member",
    "icon",
    "title",
    "caption"
  ],
  member6: ["member6", "icon6", "title6", "caption6"],
  icon6: ["icon6"],
  title6: ["title6"],
  caption6: ["caption6"],
  member5: ["member5", "icon5", "title5", "caption5"],
  icon5: ["icon5"],
  title5: ["title5"],
  caption5: ["caption5"],
  member4: ["member4", "icon4", "title4", "caption4"],
  icon4: ["icon4"],
  title4: ["title4"],
  caption4: ["caption4"],
  member3: ["member3", "icon3", "title3", "caption3"],
  icon3: ["icon3"],
  title3: ["title3"],
  caption3: ["caption3"],
  member2: ["member2", "icon2", "title2", "caption2"],
  icon2: ["icon2"],
  title2: ["title2"],
  caption2: ["caption2"],
  member: ["member", "icon", "title", "caption"],
  icon: ["icon"],
  title: ["title"],
  caption: ["caption"],
  members2: [
    "members2",
    "member7",
    "icon7",
    "title8",
    "caption7",
    "member8",
    "icon8",
    "title9",
    "caption8",
    "member9",
    "icon9",
    "title10",
    "caption9",
    "member10",
    "icon10",
    "title11",
    "caption10",
    "member11",
    "icon11",
    "title12",
    "caption11",
    "member12",
    "icon12",
    "title13",
    "caption12"
  ],
  member7: ["member7", "icon7", "title8", "caption7"],
  icon7: ["icon7"],
  title8: ["title8"],
  caption7: ["caption7"],
  member8: ["member8", "icon8", "title9", "caption8"],
  icon8: ["icon8"],
  title9: ["title9"],
  caption8: ["caption8"],
  member9: ["member9", "icon9", "title10", "caption9"],
  icon9: ["icon9"],
  title10: ["title10"],
  caption9: ["caption9"],
  member10: ["member10", "icon10", "title11", "caption10"],
  icon10: ["icon10"],
  title11: ["title11"],
  caption10: ["caption10"],
  member11: ["member11", "icon11", "title12", "caption11"],
  icon11: ["icon11"],
  title12: ["title12"],
  caption11: ["caption11"],
  member12: ["member12", "icon12", "title13", "caption12"],
  icon12: ["icon12"],
  title13: ["title13"],
  caption12: ["caption12"],
  principles: [
    "principles",
    "title7",
    "uotlines",
    "ul",
    "gallery",
    "introAutoSyncGif2"
  ],
  title7: ["title7"],
  uotlines: ["uotlines", "ul"],
  ul: ["ul"],
  gallery: ["gallery", "introAutoSyncGif2"],
  introAutoSyncGif2: ["introAutoSyncGif2"],
  teamup: ["teamup", "introAutoSyncTitle3", "introAutoSyncCaption3"],
  introAutoSyncTitle3: ["introAutoSyncTitle3"],
  introAutoSyncCaption3: ["introAutoSyncCaption3"],
  address: ["address", "content", "addressText", "map", "embedHtml"],
  content: ["content", "addressText", "map", "embedHtml"],
  addressText: ["addressText"],
  map: ["map", "embedHtml"],
  embedHtml: ["embedHtml"],
  rentamonFooter: ["rentamonFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbarRentamonComponent: typeof NavbarRentamonComponent;
  mainContents: "div";
  intro1st: "div";
  introTitle: "div";
  teamImage: "div";
  introCalendarLeft: "div";
  introduction: "div";
  team: "div";
  sectionTitle: "div";
  freeBox: "div";
  members: "div";
  member6: "div";
  icon6: "div";
  title6: "div";
  caption6: "div";
  member5: "div";
  icon5: "div";
  title5: "div";
  caption5: "div";
  member4: "div";
  icon4: "div";
  title4: "div";
  caption4: "div";
  member3: "div";
  icon3: "div";
  title3: "div";
  caption3: "div";
  member2: "div";
  icon2: "div";
  title2: "div";
  caption2: "div";
  member: "div";
  icon: "div";
  title: "div";
  caption: "div";
  members2: "div";
  member7: "div";
  icon7: "div";
  title8: "div";
  caption7: "div";
  member8: "div";
  icon8: "div";
  title9: "div";
  caption8: "div";
  member9: "div";
  icon9: "div";
  title10: "div";
  caption9: "div";
  member10: "div";
  icon10: "div";
  title11: "div";
  caption10: "div";
  member11: "div";
  icon11: "div";
  title12: "div";
  caption11: "div";
  member12: "div";
  icon12: "div";
  title13: "div";
  caption12: "div";
  principles: "div";
  title7: "div";
  uotlines: "div";
  ul: "ul";
  gallery: "div";
  introAutoSyncGif2: "div";
  teamup: "div";
  introAutoSyncTitle3: "div";
  introAutoSyncCaption3: "div";
  address: "div";
  content: "div";
  addressText: "div";
  map: "div";
  embedHtml: typeof Embed;
  rentamonFooter: typeof RentamonFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicAboutUs__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicAboutUs__VariantsArgs;
    args?: PlasmicAboutUs__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicAboutUs__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicAboutUs__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicAboutUs__ArgProps,
          internalVariantPropNames: PlasmicAboutUs__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicAboutUs__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAboutUs";
  } else {
    func.displayName = `PlasmicAboutUs.${nodeName}`;
  }
  return func;
}

export const PlasmicAboutUs = Object.assign(
  // Top-level PlasmicAboutUs renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbarRentamonComponent: makeNodeComponent("navbarRentamonComponent"),
    mainContents: makeNodeComponent("mainContents"),
    intro1st: makeNodeComponent("intro1st"),
    introTitle: makeNodeComponent("introTitle"),
    teamImage: makeNodeComponent("teamImage"),
    introCalendarLeft: makeNodeComponent("introCalendarLeft"),
    introduction: makeNodeComponent("introduction"),
    team: makeNodeComponent("team"),
    sectionTitle: makeNodeComponent("sectionTitle"),
    freeBox: makeNodeComponent("freeBox"),
    members: makeNodeComponent("members"),
    member6: makeNodeComponent("member6"),
    icon6: makeNodeComponent("icon6"),
    title6: makeNodeComponent("title6"),
    caption6: makeNodeComponent("caption6"),
    member5: makeNodeComponent("member5"),
    icon5: makeNodeComponent("icon5"),
    title5: makeNodeComponent("title5"),
    caption5: makeNodeComponent("caption5"),
    member4: makeNodeComponent("member4"),
    icon4: makeNodeComponent("icon4"),
    title4: makeNodeComponent("title4"),
    caption4: makeNodeComponent("caption4"),
    member3: makeNodeComponent("member3"),
    icon3: makeNodeComponent("icon3"),
    title3: makeNodeComponent("title3"),
    caption3: makeNodeComponent("caption3"),
    member2: makeNodeComponent("member2"),
    icon2: makeNodeComponent("icon2"),
    title2: makeNodeComponent("title2"),
    caption2: makeNodeComponent("caption2"),
    member: makeNodeComponent("member"),
    icon: makeNodeComponent("icon"),
    title: makeNodeComponent("title"),
    caption: makeNodeComponent("caption"),
    members2: makeNodeComponent("members2"),
    member7: makeNodeComponent("member7"),
    icon7: makeNodeComponent("icon7"),
    title8: makeNodeComponent("title8"),
    caption7: makeNodeComponent("caption7"),
    member8: makeNodeComponent("member8"),
    icon8: makeNodeComponent("icon8"),
    title9: makeNodeComponent("title9"),
    caption8: makeNodeComponent("caption8"),
    member9: makeNodeComponent("member9"),
    icon9: makeNodeComponent("icon9"),
    title10: makeNodeComponent("title10"),
    caption9: makeNodeComponent("caption9"),
    member10: makeNodeComponent("member10"),
    icon10: makeNodeComponent("icon10"),
    title11: makeNodeComponent("title11"),
    caption10: makeNodeComponent("caption10"),
    member11: makeNodeComponent("member11"),
    icon11: makeNodeComponent("icon11"),
    title12: makeNodeComponent("title12"),
    caption11: makeNodeComponent("caption11"),
    member12: makeNodeComponent("member12"),
    icon12: makeNodeComponent("icon12"),
    title13: makeNodeComponent("title13"),
    caption12: makeNodeComponent("caption12"),
    principles: makeNodeComponent("principles"),
    title7: makeNodeComponent("title7"),
    uotlines: makeNodeComponent("uotlines"),
    ul: makeNodeComponent("ul"),
    gallery: makeNodeComponent("gallery"),
    introAutoSyncGif2: makeNodeComponent("introAutoSyncGif2"),
    teamup: makeNodeComponent("teamup"),
    introAutoSyncTitle3: makeNodeComponent("introAutoSyncTitle3"),
    introAutoSyncCaption3: makeNodeComponent("introAutoSyncCaption3"),
    address: makeNodeComponent("address"),
    content: makeNodeComponent("content"),
    addressText: makeNodeComponent("addressText"),
    map: makeNodeComponent("map"),
    embedHtml: makeNodeComponent("embedHtml"),
    rentamonFooter: makeNodeComponent("rentamonFooter"),

    // Metadata about props expected for PlasmicAboutUs
    internalVariantProps: PlasmicAboutUs__VariantProps,
    internalArgProps: PlasmicAboutUs__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "درباره رنتامونی‌ها",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicAboutUs;
/* prettier-ignore-end */
