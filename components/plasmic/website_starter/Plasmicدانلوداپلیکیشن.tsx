/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7SNMkB8UMukVgcWJYokeAQ
// Component: 4_Sank-PwTYC

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import NavbarRentamonComponent from "../../NavbarRentamonComponent"; // plasmic-import: gWac1FMbIJat/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import RentamonFooter from "../../RentamonFooter"; // plasmic-import: DSdlo5kdtbOe/component

import { useScreenVariants as useScreenVariantsaSuSwU8JUYf } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: aSUSwU8jUYf-/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/projectcss
import sty from "./Plasmicدانلوداپلیکیشن.module.css"; // plasmic-import: 4_Sank-PwTYC/css

createPlasmicElementProxy;

export type Plasmicدانلوداپلیکیشن__VariantMembers = {};
export type Plasmicدانلوداپلیکیشن__VariantsArgs = {};
type VariantPropType = keyof Plasmicدانلوداپلیکیشن__VariantsArgs;
export const Plasmicدانلوداپلیکیشن__VariantProps = new Array<VariantPropType>();

export type Plasmicدانلوداپلیکیشن__ArgsType = {};
type ArgPropType = keyof Plasmicدانلوداپلیکیشن__ArgsType;
export const Plasmicدانلوداپلیکیشن__ArgProps = new Array<ArgPropType>();

export type Plasmicدانلوداپلیکیشن__OverridesType = {
  downlaod?: Flex__<"div">;
  navbarRentamonComponent?: Flex__<typeof NavbarRentamonComponent>;
  mainContents?: Flex__<"div">;
  introApp?: Flex__<"div">;
  introCalendar4?: Flex__<"div">;
  introCalendarRight?: Flex__<"div">;
  introCalendarRight2?: Flex__<"div">;
  introCalendarRight3?: Flex__<"div">;
  introCalendarLeft?: Flex__<"div">;
  carousel?: Flex__<typeof Embed>;
  link?: Flex__<"div">;
  title?: Flex__<"div">;
  downloadLinks?: Flex__<"div">;
  directDl?: Flex__<"div">;
  text?: Flex__<"div">;
  icon?: Flex__<"div">;
  iOs?: Flex__<"div">;
  text2?: Flex__<"div">;
  icon2?: Flex__<"div">;
  cafeBazar?: Flex__<"div">;
  text4?: Flex__<"div">;
  icon4?: Flex__<"div">;
  myket?: Flex__<"div">;
  text5?: Flex__<"div">;
  icon5?: Flex__<"div">;
  image?: Flex__<"div">;
  introAutoSyncCaption2?: Flex__<"div">;
  introAutoSyncDesc2?: Flex__<"div">;
  introAutoSyncGif2?: Flex__<"div">;
  screenshots?: Flex__<"div">;
  introCalendarRight5?: Flex__<"div">;
  introCalendarRight7?: Flex__<"div">;
  rentamonFooter?: Flex__<typeof RentamonFooter>;
};

export interface DefaultدانلوداپلیکیشنProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function Plasmicدانلوداپلیکیشن__RenderFunc(props: {
  variants: Plasmicدانلوداپلیکیشن__VariantsArgs;
  args: Plasmicدانلوداپلیکیشن__ArgsType;
  overrides: Plasmicدانلوداپلیکیشن__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "propertyId",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsaSuSwU8JUYf()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{Plasmicدانلوداپلیکیشن.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={Plasmicدانلوداپلیکیشن.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={Plasmicدانلوداپلیکیشن.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"downlaod"}
          data-plasmic-override={overrides.downlaod}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.downlaod
          )}
        >
          <NavbarRentamonComponent
            data-plasmic-name={"navbarRentamonComponent"}
            data-plasmic-override={overrides.navbarRentamonComponent}
            className={classNames(
              "__wab_instance",
              sty.navbarRentamonComponent
            )}
          />

          <div
            data-plasmic-name={"mainContents"}
            data-plasmic-override={overrides.mainContents}
            className={classNames(projectcss.all, sty.mainContents)}
          >
            <div
              data-plasmic-name={"introApp"}
              data-plasmic-override={overrides.introApp}
              className={classNames(projectcss.all, sty.introApp)}
            >
              <div
                data-plasmic-name={"introCalendar4"}
                data-plasmic-override={overrides.introCalendar4}
                className={classNames(projectcss.all, sty.introCalendar4)}
              >
                <div
                  data-plasmic-name={"introCalendarRight"}
                  data-plasmic-override={overrides.introCalendarRight}
                  className={classNames(projectcss.all, sty.introCalendarRight)}
                >
                  <div
                    data-plasmic-name={"introCalendarRight2"}
                    data-plasmic-override={overrides.introCalendarRight2}
                    className={classNames(
                      projectcss.all,
                      sty.introCalendarRight2
                    )}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___86Oug
                      )}
                    >
                      {
                        "\u062f\u0627\u0646\u0644\u0648\u062f \u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646 \u0631\u0646\u062a\u0627\u0645\u0648\u0646"
                      }
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"introCalendarRight3"}
                    data-plasmic-override={overrides.introCalendarRight3}
                    className={classNames(
                      projectcss.all,
                      sty.introCalendarRight3
                    )}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nIz0M
                      )}
                    >
                      {
                        "\u0628\u0627 \u0631\u0646\u062a\u0627\u0645\u0648\u0646\u060c \u062f\u06cc\u06af\u0647 \u0646\u06cc\u0627\u0632\u06cc \u0628\u0647 \u0633\u0631 \u0631\u0633\u06cc\u062f \u0648 \u06cc\u0627\u062f\u062f\u0627\u0634\u062a \u06a9\u0631\u062f\u0646 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0645\u0647\u0645\u0627\u0646\u200c\u0647\u0627 \u0646\u06cc\u0633\u062a. \u0647\u0631\u0686\u06cc\u0632\u06cc \u06a9\u0647 \u062f\u0631 \u0637\u0648\u0644 \u0631\u0648\u0632 \u0646\u06cc\u0627\u0632 \u062f\u0627\u0631\u06cc\u060c \u062a\u0648\u06cc \u06af\u0648\u0634\u06cc \u0647\u0645\u0631\u0627\u0647\u062a\u0647."
                      }
                    </div>
                  </div>
                </div>
                <div
                  data-plasmic-name={"introCalendarLeft"}
                  data-plasmic-override={overrides.introCalendarLeft}
                  className={classNames(projectcss.all, sty.introCalendarLeft)}
                >
                  <Embed
                    data-plasmic-name={"carousel"}
                    data-plasmic-override={overrides.carousel}
                    className={classNames("__wab_instance", sty.carousel)}
                    code={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? '<!DOCTYPE html>\r\n<html lang="fa">\r\n<head>\r\n  <meta charset="UTF-8">\r\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\r\n  <title>\u0627\u0633\u0644\u0627\u06cc\u062f\u0631 \u062f\u0631\u0633\u062a \u0628\u0631\u0627\u06cc Plasmic</title>\r\n  <style>\r\n    body {\r\n      margin: 0;\r\n      padding: 0;\r\n      box-sizing: border-box;\r\n      font-family: sans-serif;\r\n    }\r\n\r\n    .slider-container {\r\n      position: relative;\r\n      width: 100%;\r\n      aspect-ratio: 9/16; /* \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0647\u0645: \u0646\u0633\u0628\u062a \u0645\u0646\u0627\u0633\u0628 \u0645\u0648\u0628\u0627\u06cc\u0644 */\r\n      overflow: hidden;\r\n      background: #000;\r\n    }\r\n\r\n    .slider-container img {\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n      opacity: 0;\r\n      transition: opacity 0.8s ease-in-out;\r\n    }\r\n\r\n    .slider-container img.active {\r\n      opacity: 1;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n\r\n  <div class="slider-container">\r\n    <img src="https://rentamon-files.storage.iran.liara.space/img/screenshots/sc1.jpg" class="active" alt="Slide 1">\r\n    <img src="https://rentamon-files.storage.iran.liara.space/img/screenshots/sc2.jpg" alt="Slide 2">\r\n    <img src="https://rentamon-files.storage.iran.liara.space/img/screenshots/sc3.jpg" alt="Slide 3">\r\n    <img src="https://rentamon-files.storage.iran.liara.space/img/screenshots/sc4.jpg" alt="Slide 4">\r\n    <img src="https://rentamon-files.storage.iran.liara.space/img/screenshots/sc5.jpg" alt="Slide 5">\r\n    <img src="https://rentamon-files.storage.iran.liara.space/img/screenshots/sc6.jpg" alt="Slide 6">\r\n  </div>\r\n\r\n  <script>\r\n    document.addEventListener("DOMContentLoaded", function () {\r\n      var images = document.querySelectorAll(".slider-container img");\r\n      var currentIndex = 0;\r\n      \r\n      function changeSlide() {\r\n        images[currentIndex].classList.remove("active");\r\n        currentIndex = (currentIndex + 1) % images.length;\r\n        images[currentIndex].classList.add("active");\r\n      }\r\n      \r\n      setInterval(changeSlide, 4000);\r\n    });\r\n  </script>\r\n\r\n</body>\r\n</html>\r\n'
                        : '<!DOCTYPE html>\r\n<html lang="fa">\r\n<head>\r\n    <meta charset="UTF-8">\r\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\r\n    <title>Simple Image Slider</title>\r\n    <style>\r\n        .slider-container {\r\n            position: relative;\r\n            width: 100%;\r\n            max-width: 800px;\r\n            height: 400px;\r\n            overflow: hidden;\r\n        }\r\n        .slider-container img {\r\n            position: absolute;\r\n            width: 100%;\r\n            height: 100%;\r\n            object-fit: contain;\r\n            opacity: 0;\r\n            transition: opacity 0.5s ease-in-out;\r\n        }\r\n        .slider-container img.active {\r\n            opacity: 1;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n    <div class="slider-container">\r\n        <img src="https://rentamon-files.storage.iran.liara.space/img/screenshots/sc1.jpg" class="active" alt="Slide 1">\r\n        <img src="https://rentamon-files.storage.iran.liara.space/img/screenshots/sc2.jpg" alt="Slide 2">\r\n        <img src="https://rentamon-files.storage.iran.liara.space/img/screenshots/sc3.jpg" alt="Slide 3">\r\n        <img src="https://rentamon-files.storage.iran.liara.space/img/screenshots/sc4.jpg" alt="Slide 4">\r\n        <img src="https://rentamon-files.storage.iran.liara.space/img/screenshots/sc5.jpg" alt="Slide 5">\r\n        <img src="https://rentamon-files.storage.iran.liara.space/img/screenshots/sc6.jpg" alt="Slide 6">\r\n    </div>\r\n\r\n    <script>\r\n        document.addEventListener("DOMContentLoaded", function () {\r\n            var images = document.querySelectorAll(".slider-container img");\r\n            var currentIndex = 0;\r\n            \r\n            function changeSlide() {\r\n                images[currentIndex].classList.remove("active");\r\n                currentIndex = (currentIndex + 1) % images.length;\r\n                images[currentIndex].classList.add("active");\r\n            }\r\n            \r\n            setInterval(changeSlide, 4000);\r\n        });\r\n    </script>\r\n</body>\r\n</html>\r\n'
                    }
                  />
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__qdVee)} />

            <div
              data-plasmic-name={"link"}
              data-plasmic-override={overrides.link}
              className={classNames(projectcss.all, sty.link)}
            >
              <div
                data-plasmic-name={"title"}
                data-plasmic-override={overrides.title}
                className={classNames(projectcss.all, sty.title)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iRfac
                  )}
                >
                  {
                    "\u0644\u06cc\u0646\u06a9\u200c\u0647\u0627\u06cc \u062f\u0627\u0646\u0644\u0648\u062f"
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"downloadLinks"}
                data-plasmic-override={overrides.downloadLinks}
                className={classNames(projectcss.all, sty.downloadLinks)}
              >
                <div
                  data-plasmic-name={"directDl"}
                  data-plasmic-override={overrides.directDl}
                  className={classNames(
                    projectcss.all,
                    sty.directDl,
                    "clickable"
                  )}
                  onClick={async event => {
                    const $steps = {};

                    $steps[
                      "goToHttpsRentamonFilesStorageIranLiaraSpaceApkRentamon14Apk"
                    ] = true
                      ? (() => {
                          const actionArgs = {
                            destination:
                              "https://rentamon-files.storage.iran.liara.space/APK/rentamon14.apk"
                          };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps[
                        "goToHttpsRentamonFilesStorageIranLiaraSpaceApkRentamon14Apk"
                      ] != null &&
                      typeof $steps[
                        "goToHttpsRentamonFilesStorageIranLiaraSpaceApkRentamon14Apk"
                      ] === "object" &&
                      typeof $steps[
                        "goToHttpsRentamonFilesStorageIranLiaraSpaceApkRentamon14Apk"
                      ].then === "function"
                    ) {
                      $steps[
                        "goToHttpsRentamonFilesStorageIranLiaraSpaceApkRentamon14Apk"
                      ] = await $steps[
                        "goToHttpsRentamonFilesStorageIranLiaraSpaceApkRentamon14Apk"
                      ];
                    }
                  }}
                >
                  <div
                    data-plasmic-name={"text"}
                    data-plasmic-override={overrides.text}
                    className={classNames(projectcss.all, sty.text)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vkyyr
                      )}
                    >
                      {
                        "\u062f\u0627\u0646\u0644\u0648\u062f \u0645\u0633\u062a\u0642\u06cc\u0645"
                      }
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dsPT
                      )}
                    >
                      {
                        "\u0646\u0633\u062e\u0647 \u0627\u0646\u062f\u0631\u0648\u06cc\u062f"
                      }
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"icon"}
                    data-plasmic-override={overrides.icon}
                    className={classNames(projectcss.all, sty.icon)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__gFiVu)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"36px"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "36px"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image57.svg",
                        fullWidth: 46,
                        fullHeight: 46,
                        aspectRatio: 1
                      }}
                    />
                  </div>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"iOs"}
                  data-plasmic-override={overrides.iOs}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.iOs, "clickable")}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToPanelCalendar"] = true
                      ? (() => {
                          const actionArgs = { destination: `/panel` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToPanelCalendar"] != null &&
                      typeof $steps["goToPanelCalendar"] === "object" &&
                      typeof $steps["goToPanelCalendar"].then === "function"
                    ) {
                      $steps["goToPanelCalendar"] = await $steps[
                        "goToPanelCalendar"
                      ];
                    }
                  }}
                >
                  <div
                    data-plasmic-name={"text2"}
                    data-plasmic-override={overrides.text2}
                    className={classNames(projectcss.all, sty.text2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___38Wuz
                      )}
                    >
                      {
                        "\u0646\u0633\u062e\u0647 \u0648\u0628\u200c\u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646"
                      }
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__auZyW
                      )}
                    >
                      {
                        "\u067e\u06cc\u0634\u0646\u0647\u0627\u062f \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 iOS"
                      }
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"icon2"}
                    data-plasmic-override={overrides.icon2}
                    className={classNames(projectcss.all, sty.icon2)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___6Z2Pp)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "32px"
                          : hasVariant(globalVariants, "screen", "tablet")
                          ? "26px"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={
                        hasVariant(globalVariants, "screen", "tablet")
                          ? "26px"
                          : "30px"
                      }
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "100%"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image58.svg",
                        fullWidth: 15,
                        fullHeight: 15,
                        aspectRatio: 1
                      }}
                    />
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"cafeBazar"}
                  data-plasmic-override={overrides.cafeBazar}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.cafeBazar,
                    "clickable"
                  )}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return window.open(
                                  "https://cafebazaar.ir/app/com.rentamon.webview",
                                  "_blank"
                                );
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                >
                  <div
                    data-plasmic-name={"text4"}
                    data-plasmic-override={overrides.text4}
                    className={classNames(projectcss.all, sty.text4)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5Br6W
                      )}
                    >
                      {"\u062f\u0631\u06cc\u0627\u0641\u062a \u0627\u0632"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"icon4"}
                    data-plasmic-override={overrides.icon4}
                    className={classNames(projectcss.all, sty.icon4)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__mj9Il)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "smallMobile")
                          ? "110px"
                          : hasVariant(globalVariants, "screen", "mobile")
                          ? "114px"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image59.svg",
                        fullWidth: 117,
                        fullHeight: 52,
                        aspectRatio: 2.25
                      }}
                    />
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"myket"}
                  data-plasmic-override={overrides.myket}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.myket, "clickable")}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return window.open(
                                  "https://myket.ir/app/com.rentamon.webview",
                                  "_blank"
                                );
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                >
                  <div
                    data-plasmic-name={"text5"}
                    data-plasmic-override={overrides.text5}
                    className={classNames(projectcss.all, sty.text5)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r5B
                      )}
                    >
                      {"\u062f\u0631\u06cc\u0627\u0641\u062a \u0627\u0632"}
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"icon5"}
                    data-plasmic-override={overrides.icon5}
                    className={classNames(projectcss.all, sty.icon5)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__neNsn)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "114px"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/website_starter/images/image60.svg",
                        fullWidth: 109,
                        fullHeight: 44,
                        aspectRatio: 2.477273
                      }}
                    />
                  </div>
                </Stack__>
              </div>
            </div>
            <div
              data-plasmic-name={"image"}
              data-plasmic-override={overrides.image}
              className={classNames(projectcss.all, sty.image)}
            >
              <div
                data-plasmic-name={"introAutoSyncCaption2"}
                data-plasmic-override={overrides.introAutoSyncCaption2}
                className={classNames(
                  projectcss.all,
                  sty.introAutoSyncCaption2
                )}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kcmja
                  )}
                >
                  {
                    "\u0627\u06af\u0647 \u0628\u062e\u0648\u0627\u06cc \u06a9\u0627\u0631\u062a \u0631\u0648 \u06af\u0633\u062a\u0631\u0634 \u0628\u062f\u06cc \u0648 \u0628\u0627 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0648\u06cc\u0644\u0627 \u06a9\u0627\u0631 \u06a9\u0646\u06cc\u060c \u0645\u06cc\u200c\u0628\u06cc\u0646\u06cc \u0628\u0647\u200c\u0631\u0648\u0632 \u0646\u06af\u0647 \u062f\u0627\u0634\u062a\u0646 \u062a\u0642\u0648\u06cc\u0645 \u0686\u0646\u062f\u062a\u0627 \u0633\u0627\u06cc\u062a \u06a9\u0644\u06cc \u062f\u0631\u062f\u0633\u0631 \u062f\u0627\u0631\u0647."
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vohiy
                  )}
                >
                  {
                    "\u0631\u0646\u062a\u0627\u0645\u0648\u0646 \u0628\u0647\u200c\u0631\u0648\u0632\u0631\u0633\u0627\u0646\u06cc \u0633\u0627\u06cc\u062a\u200c\u0647\u0627 \u0631\u0648 \u0628\u062c\u0627\u06cc \u062a\u0648 \u0627\u0646\u062c\u0627\u0645 \u0645\u06cc\u200c\u062f\u0647 :)"
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"introAutoSyncDesc2"}
                data-plasmic-override={overrides.introAutoSyncDesc2}
                className={classNames(projectcss.all, sty.introAutoSyncDesc2)}
              >
                <div
                  data-plasmic-name={"introAutoSyncGif2"}
                  data-plasmic-override={overrides.introAutoSyncGif2}
                  className={classNames(projectcss.all, sty.introAutoSyncGif2)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__iDl9H)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/image61.png",
                      fullWidth: 826,
                      fullHeight: 551,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"screenshots"}
              data-plasmic-override={overrides.screenshots}
              hasGap={true}
              className={classNames(projectcss.all, sty.screenshots)}
            >
              <div
                data-plasmic-name={"introCalendarRight5"}
                data-plasmic-override={overrides.introCalendarRight5}
                className={classNames(projectcss.all, sty.introCalendarRight5)}
              >
                <div
                  data-plasmic-name={"introCalendarRight7"}
                  data-plasmic-override={overrides.introCalendarRight7}
                  className={classNames(
                    projectcss.all,
                    sty.introCalendarRight7
                  )}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yo4O8
                    )}
                  >
                    {
                      "\u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0628\u0631\u0646\u0627\u0645\u0647 \u0645\u062f\u06cc\u0631\u06cc\u062a \u06cc\u06a9\u067e\u0627\u0631\u0686\u0647 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u0631\u0646\u062a\u0627\u0645\u0648\u0646:"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dfRz1
                    )}
                  >
                    {
                      "\u2705 \u0646\u06cc\u0627\u0632 \u0628\u0647 \u0647\u0645\u0631\u0627\u0647 \u062f\u0627\u0634\u062a\u0646 \u0633\u0631 \u0631\u0633\u06cc\u062f \u0646\u06cc\u0633\u062a\n\u2705 \u0646\u06af\u0631\u0627\u0646 \u0642\u0648\u0644 \u0627\u0634\u062a\u0628\u0627\u0647\u06cc \u062f\u0627\u062f\u0646 \u0628\u0647 \u0686\u0646\u062f \u0645\u0647\u0645\u0627\u0646 \u0646\u0628\u0627\u0634\n\u2705 \u062f\u0631 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u0645\u062e\u062a\u0644\u0641 \u0631\u0632\u0631\u0648 \u0647\u0645\u200c\u0632\u0645\u0627\u0646 \u0648 \u0627\u0634\u062a\u0628\u0627\u0647\u06cc \u0646\u0645\u06cc\u200c\u06af\u06cc\u0631\u06cc\r\n\u2705 \u0628\u062c\u0627\u06cc \u0686\u0646\u062f \u0628\u0631\u0646\u0627\u0645\u0647\u060c \u06a9\u0627\u0641\u06cc\u0647 \u06cc\u06a9 \u0628\u0631\u0646\u0627\u0645\u0647 \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc\r\n\u2705 \u0646\u0631\u062e \u0627\u062c\u0627\u0631\u0647 \u062f\u0631 \u062a\u0645\u0627\u0645 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627 \u0631\u0648 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0627\u0632 \u06cc\u06a9\u200c\u062c\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u0628\u062f\u06cc"
                    }
                  </div>
                </div>
              </div>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox___7Lda8)} />

          <RentamonFooter
            data-plasmic-name={"rentamonFooter"}
            data-plasmic-override={overrides.rentamonFooter}
            className={classNames("__wab_instance", sty.rentamonFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  downlaod: [
    "downlaod",
    "navbarRentamonComponent",
    "mainContents",
    "introApp",
    "introCalendar4",
    "introCalendarRight",
    "introCalendarRight2",
    "introCalendarRight3",
    "introCalendarLeft",
    "carousel",
    "link",
    "title",
    "downloadLinks",
    "directDl",
    "text",
    "icon",
    "iOs",
    "text2",
    "icon2",
    "cafeBazar",
    "text4",
    "icon4",
    "myket",
    "text5",
    "icon5",
    "image",
    "introAutoSyncCaption2",
    "introAutoSyncDesc2",
    "introAutoSyncGif2",
    "screenshots",
    "introCalendarRight5",
    "introCalendarRight7",
    "rentamonFooter"
  ],
  navbarRentamonComponent: ["navbarRentamonComponent"],
  mainContents: [
    "mainContents",
    "introApp",
    "introCalendar4",
    "introCalendarRight",
    "introCalendarRight2",
    "introCalendarRight3",
    "introCalendarLeft",
    "carousel",
    "link",
    "title",
    "downloadLinks",
    "directDl",
    "text",
    "icon",
    "iOs",
    "text2",
    "icon2",
    "cafeBazar",
    "text4",
    "icon4",
    "myket",
    "text5",
    "icon5",
    "image",
    "introAutoSyncCaption2",
    "introAutoSyncDesc2",
    "introAutoSyncGif2",
    "screenshots",
    "introCalendarRight5",
    "introCalendarRight7"
  ],
  introApp: [
    "introApp",
    "introCalendar4",
    "introCalendarRight",
    "introCalendarRight2",
    "introCalendarRight3",
    "introCalendarLeft",
    "carousel"
  ],
  introCalendar4: [
    "introCalendar4",
    "introCalendarRight",
    "introCalendarRight2",
    "introCalendarRight3",
    "introCalendarLeft",
    "carousel"
  ],
  introCalendarRight: [
    "introCalendarRight",
    "introCalendarRight2",
    "introCalendarRight3"
  ],
  introCalendarRight2: ["introCalendarRight2"],
  introCalendarRight3: ["introCalendarRight3"],
  introCalendarLeft: ["introCalendarLeft", "carousel"],
  carousel: ["carousel"],
  link: [
    "link",
    "title",
    "downloadLinks",
    "directDl",
    "text",
    "icon",
    "iOs",
    "text2",
    "icon2",
    "cafeBazar",
    "text4",
    "icon4",
    "myket",
    "text5",
    "icon5"
  ],
  title: ["title"],
  downloadLinks: [
    "downloadLinks",
    "directDl",
    "text",
    "icon",
    "iOs",
    "text2",
    "icon2",
    "cafeBazar",
    "text4",
    "icon4",
    "myket",
    "text5",
    "icon5"
  ],
  directDl: ["directDl", "text", "icon"],
  text: ["text"],
  icon: ["icon"],
  iOs: ["iOs", "text2", "icon2"],
  text2: ["text2"],
  icon2: ["icon2"],
  cafeBazar: ["cafeBazar", "text4", "icon4"],
  text4: ["text4"],
  icon4: ["icon4"],
  myket: ["myket", "text5", "icon5"],
  text5: ["text5"],
  icon5: ["icon5"],
  image: [
    "image",
    "introAutoSyncCaption2",
    "introAutoSyncDesc2",
    "introAutoSyncGif2"
  ],
  introAutoSyncCaption2: ["introAutoSyncCaption2"],
  introAutoSyncDesc2: ["introAutoSyncDesc2", "introAutoSyncGif2"],
  introAutoSyncGif2: ["introAutoSyncGif2"],
  screenshots: ["screenshots", "introCalendarRight5", "introCalendarRight7"],
  introCalendarRight5: ["introCalendarRight5", "introCalendarRight7"],
  introCalendarRight7: ["introCalendarRight7"],
  rentamonFooter: ["rentamonFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  downlaod: "div";
  navbarRentamonComponent: typeof NavbarRentamonComponent;
  mainContents: "div";
  introApp: "div";
  introCalendar4: "div";
  introCalendarRight: "div";
  introCalendarRight2: "div";
  introCalendarRight3: "div";
  introCalendarLeft: "div";
  carousel: typeof Embed;
  link: "div";
  title: "div";
  downloadLinks: "div";
  directDl: "div";
  text: "div";
  icon: "div";
  iOs: "div";
  text2: "div";
  icon2: "div";
  cafeBazar: "div";
  text4: "div";
  icon4: "div";
  myket: "div";
  text5: "div";
  icon5: "div";
  image: "div";
  introAutoSyncCaption2: "div";
  introAutoSyncDesc2: "div";
  introAutoSyncGif2: "div";
  screenshots: "div";
  introCalendarRight5: "div";
  introCalendarRight7: "div";
  rentamonFooter: typeof RentamonFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmicدانلوداپلیکیشن__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmicدانلوداپلیکیشن__VariantsArgs;
    args?: Plasmicدانلوداپلیکیشن__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmicدانلوداپلیکیشن__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<Plasmicدانلوداپلیکیشن__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: Plasmicدانلوداپلیکیشن__ArgProps,
          internalVariantPropNames: Plasmicدانلوداپلیکیشن__VariantProps
        }),
      [props, nodeName]
    );
    return Plasmicدانلوداپلیکیشن__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "downlaod") {
    func.displayName =
      "Plasmic\u062f\u0627\u0646\u0644\u0648\u062f\u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646";
  } else {
    func.displayName = `Plasmicدانلوداپلیکیشن.${nodeName}`;
  }
  return func;
}

export const Plasmicدانلوداپلیکیشن = Object.assign(
  // Top-level Plasmicدانلوداپلیکیشن renders the root element
  makeNodeComponent("downlaod"),
  {
    // Helper components rendering sub-elements
    navbarRentamonComponent: makeNodeComponent("navbarRentamonComponent"),
    mainContents: makeNodeComponent("mainContents"),
    introApp: makeNodeComponent("introApp"),
    introCalendar4: makeNodeComponent("introCalendar4"),
    introCalendarRight: makeNodeComponent("introCalendarRight"),
    introCalendarRight2: makeNodeComponent("introCalendarRight2"),
    introCalendarRight3: makeNodeComponent("introCalendarRight3"),
    introCalendarLeft: makeNodeComponent("introCalendarLeft"),
    carousel: makeNodeComponent("carousel"),
    link: makeNodeComponent("link"),
    title: makeNodeComponent("title"),
    downloadLinks: makeNodeComponent("downloadLinks"),
    directDl: makeNodeComponent("directDl"),
    text: makeNodeComponent("text"),
    icon: makeNodeComponent("icon"),
    iOs: makeNodeComponent("iOs"),
    text2: makeNodeComponent("text2"),
    icon2: makeNodeComponent("icon2"),
    cafeBazar: makeNodeComponent("cafeBazar"),
    text4: makeNodeComponent("text4"),
    icon4: makeNodeComponent("icon4"),
    myket: makeNodeComponent("myket"),
    text5: makeNodeComponent("text5"),
    icon5: makeNodeComponent("icon5"),
    image: makeNodeComponent("image"),
    introAutoSyncCaption2: makeNodeComponent("introAutoSyncCaption2"),
    introAutoSyncDesc2: makeNodeComponent("introAutoSyncDesc2"),
    introAutoSyncGif2: makeNodeComponent("introAutoSyncGif2"),
    screenshots: makeNodeComponent("screenshots"),
    introCalendarRight5: makeNodeComponent("introCalendarRight5"),
    introCalendarRight7: makeNodeComponent("introCalendarRight7"),
    rentamonFooter: makeNodeComponent("rentamonFooter"),

    // Metadata about props expected for Plasmicدانلوداپلیکیشن
    internalVariantProps: Plasmicدانلوداپلیکیشن__VariantProps,
    internalArgProps: Plasmicدانلوداپلیکیشن__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "دانلود اپلیکیشن موبایل رنتامون",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default Plasmicدانلوداپلیکیشن;
/* prettier-ignore-end */
