/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7SNMkB8UMukVgcWJYokeAQ
// Component: N1Svf52_yxbM

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { AntdMenu } from "@plasmicpkgs/antd5/skinny/registerMenu";
import { AntdMenuItem } from "@plasmicpkgs/antd5/skinny/registerMenu";
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/styleTokensProvider
import { _useStyleTokens as useStyleTokens_antd_5_hostless } from ""; // plasmic-import: ohDidvG9XsCeFumugENU3J/styleTokensProvider
import { _useStyleTokens as useStyleTokens_plasmic_rich_components } from ""; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/projectcss
import sty from "./PlasmicFunctionSelect2.module.css"; // plasmic-import: N1Svf52_yxbM/css

createPlasmicElementProxy;

export type PlasmicFunctionSelect2__VariantMembers = {};
export type PlasmicFunctionSelect2__VariantsArgs = {};
type VariantPropType = keyof PlasmicFunctionSelect2__VariantsArgs;
export const PlasmicFunctionSelect2__VariantProps =
  new Array<VariantPropType>();

export type PlasmicFunctionSelect2__ArgsType = {};
type ArgPropType = keyof PlasmicFunctionSelect2__ArgsType;
export const PlasmicFunctionSelect2__ArgProps = new Array<ArgPropType>();

export type PlasmicFunctionSelect2__OverridesType = {
  root?: Flex__<typeof AntdMenu>;
};

export interface DefaultFunctionSelect2Props {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicFunctionSelect2__RenderFunc(props: {
  variants: PlasmicFunctionSelect2__VariantsArgs;
  args: PlasmicFunctionSelect2__ArgsType;
  overrides: PlasmicFunctionSelect2__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const $globalActions = useGlobalActions?.();

  const styleTokensClassNames = _useStyleTokens();
  const styleTokensClassNames_antd_5_hostless =
    useStyleTokens_antd_5_hostless();
  const styleTokensClassNames_plasmic_rich_components =
    useStyleTokens_plasmic_rich_components();

  return (
    <AntdMenu
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        "__wab_instance",
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        styleTokensClassNames,
        styleTokensClassNames_antd_5_hostless,
        styleTokensClassNames_plasmic_rich_components,
        sty.root
      )}
    >
      <AntdMenuItem
        className={classNames("__wab_instance", sty.menuItem__ga4)}
        key={"menuItemKey1"}
        onClick={async () => {
          const $steps = {};

          $steps["invokeGlobalAction"] = true
            ? (() => {
                const actionArgs = {
                  args: [
                    "POST",
                    "https://rentamon-api.liara.run/api/setblock",
                    undefined,
                    (() => {
                      try {
                        return {
                          days: $state.fragmentDatePicker.selectedDays.map(
                            day =>
                              new Date(day * 1000)
                                .toLocaleDateString("fa-IR")
                                .replace(/\//g, "-")
                          ),
                          property_id: 1,
                          requested_by: "user",
                          request_for: "block"
                        };
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })(),
                    {
                      headers: {
                        Authorization:
                          "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzM0MjQ5MTYwLCJpYXQiOjE3MjM4ODExNjAsImp0aSI6IjZjZmQ0YWZhNjMwZTQ1Yzg4ZmY1ZGU4NmY4Y2YyNjAzIiwidXNlcl9pZCI6NDY2fQ.clklsxrxx5HrjKxBi8rmb1sl2lrmGJ2tc0_Lkb_4T84"
                      }
                    }
                  ]
                };
                return $globalActions["Fragment.apiRequest"]?.apply(null, [
                  ...actionArgs.args
                ]);
              })()
            : undefined;
          if (
            $steps["invokeGlobalAction"] != null &&
            typeof $steps["invokeGlobalAction"] === "object" &&
            typeof $steps["invokeGlobalAction"].then === "function"
          ) {
            $steps["invokeGlobalAction"] = await $steps["invokeGlobalAction"];
          }
        }}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text___70UNi
          )}
        >
          {"\u067e\u064f\u0640\u0631"}
        </div>
      </AntdMenuItem>
      <AntdMenuItem
        className={classNames("__wab_instance", sty.menuItem__uyTtg)}
        key={"menuItemKey2"}
        onClick={async () => {
          const $steps = {};

          $steps["invokeGlobalAction"] = true
            ? (() => {
                const actionArgs = {
                  args: [
                    "POST",
                    "https://rentamon-api.liara.run/api/setunblock",
                    undefined,
                    (() => {
                      try {
                        return {
                          days: $state.fragmentDatePicker.values.map(value =>
                            new Date(value * 1000)
                              .toLocaleDateString("fa-IR")
                              .replace(/\//g, "-")
                          ),
                          property_id: "1"
                        };
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })(),
                    {
                      headers: {
                        Authorization:
                          "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzM0MjQ5MTYwLCJpYXQiOjE3MjM4ODExNjAsImp0aSI6IjZjZmQ0YWZhNjMwZTQ1Yzg4ZmY1ZGU4NmY4Y2YyNjAzIiwidXNlcl9pZCI6NDY2fQ.clklsxrxx5HrjKxBi8rmb1sl2lrmGJ2tc0_Lkb_4T84"
                      }
                    }
                  ]
                };
                return $globalActions["Fragment.apiRequest"]?.apply(null, [
                  ...actionArgs.args
                ]);
              })()
            : undefined;
          if (
            $steps["invokeGlobalAction"] != null &&
            typeof $steps["invokeGlobalAction"] === "object" &&
            typeof $steps["invokeGlobalAction"].then === "function"
          ) {
            $steps["invokeGlobalAction"] = await $steps["invokeGlobalAction"];
          }
        }}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__ucile
          )}
        >
          {"\u062e\u0627\u0644\u06cc"}
        </div>
      </AntdMenuItem>
      <AntdMenuItem
        className={classNames("__wab_instance", sty.menuItem__hlttF)}
        key={"menuItemKey3"}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__nFaU
          )}
        >
          {"\u0642\u06cc\u0645\u062a"}
        </div>
      </AntdMenuItem>
      <AntdMenuItem
        className={classNames("__wab_instance", sty.menuItem__o5Xn)}
        key={"menuItemKey4"}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__tIy83
          )}
        >
          {"\u062a\u062e\u0641\u06cc\u0641 %"}
        </div>
      </AntdMenuItem>
      <AntdMenuItem
        className={classNames("__wab_instance", sty.menuItem__zFvl8)}
        key={"menuItemKey5"}
        onClick={async () => {
          const $steps = {};

          $steps["invokeGlobalAction"] = true
            ? (() => {
                const actionArgs = {
                  args: [
                    "POST",
                    "https://rentamon-api.liara.run/api/setunblock",
                    undefined,
                    undefined,
                    {
                      headers: {
                        Authorization:
                          "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzM0MjQ5MTYwLCJpYXQiOjE3MjM4ODExNjAsImp0aSI6IjZjZmQ0YWZhNjMwZTQ1Yzg4ZmY1ZGU4NmY4Y2YyNjAzIiwidXNlcl9pZCI6NDY2fQ.clklsxrxx5HrjKxBi8rmb1sl2lrmGJ2tc0_Lkb_4T84"
                      }
                    }
                  ]
                };
                return $globalActions["Fragment.apiRequest"]?.apply(null, [
                  ...actionArgs.args
                ]);
              })()
            : undefined;
          if (
            $steps["invokeGlobalAction"] != null &&
            typeof $steps["invokeGlobalAction"] === "object" &&
            typeof $steps["invokeGlobalAction"].then === "function"
          ) {
            $steps["invokeGlobalAction"] = await $steps["invokeGlobalAction"];
          }
        }}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__z5I4W
          )}
        >
          {"\u0631\u0632\u0631\u0648 \u0622\u0646\u06cc"}
        </div>
      </AntdMenuItem>
    </AntdMenu>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: typeof AntdMenu;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFunctionSelect2__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFunctionSelect2__VariantsArgs;
    args?: PlasmicFunctionSelect2__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicFunctionSelect2__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicFunctionSelect2__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicFunctionSelect2__ArgProps,
          internalVariantPropNames: PlasmicFunctionSelect2__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicFunctionSelect2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFunctionSelect2";
  } else {
    func.displayName = `PlasmicFunctionSelect2.${nodeName}`;
  }
  return func;
}

export const PlasmicFunctionSelect2 = Object.assign(
  // Top-level PlasmicFunctionSelect2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements

    // Metadata about props expected for PlasmicFunctionSelect2
    internalVariantProps: PlasmicFunctionSelect2__VariantProps,
    internalArgProps: PlasmicFunctionSelect2__ArgProps
  }
);

export default PlasmicFunctionSelect2;
/* prettier-ignore-end */
