/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7SNMkB8UMukVgcWJYokeAQ
// Component: wqhmVdxkd2UU

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import NavbarRntHeader from "../../NavbarRntHeader"; // plasmic-import: gWac1FMbIJat/component
import { DataFetcher } from "@plasmicpkgs/plasmic-query";
import RentamonFooter from "../../RentamonFooter"; // plasmic-import: DSdlo5kdtbOe/component
import ClarityRntComponent from "../../ClarityRntComponent"; // plasmic-import: J5D8c7V05ty1/component
import FaviconRntComponent from "../../FaviconRntComponent"; // plasmic-import: 2Chy9NeUIB9Q/component
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import { useScreenVariants as useScreenVariantsaSuSwU8JUYf } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: aSUSwU8jUYf-/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 7SNMkB8UMukVgcWJYokeAQ/projectcss
import sty from "./Plasmicمقایسهبهترینسایتاجارهویلا.module.css"; // plasmic-import: wqhmVdxkd2UU/css

createPlasmicElementProxy;

export type Plasmicمقایسهبهترینسایتاجارهویلا__VariantMembers = {};
export type Plasmicمقایسهبهترینسایتاجارهویلا__VariantsArgs = {};
type VariantPropType = keyof Plasmicمقایسهبهترینسایتاجارهویلا__VariantsArgs;
export const Plasmicمقایسهبهترینسایتاجارهویلا__VariantProps =
  new Array<VariantPropType>();

export type Plasmicمقایسهبهترینسایتاجارهویلا__ArgsType = {};
type ArgPropType = keyof Plasmicمقایسهبهترینسایتاجارهویلا__ArgsType;
export const Plasmicمقایسهبهترینسایتاجارهویلا__ArgProps =
  new Array<ArgPropType>();

export type Plasmicمقایسهبهترینسایتاجارهویلا__OverridesType = {
  content?: Flex__<"div">;
  navbarRntHeader?: Flex__<typeof NavbarRntHeader>;
  mainContents?: Flex__<"div">;
  intro?: Flex__<"div">;
  introTitle?: Flex__<"div">;
  introDesc?: Flex__<"div">;
  str?: Flex__<"div">;
  strDefinition?: Flex__<"div">;
  titlesRow?: Flex__<"div">;
  titlesRow3?: Flex__<"div">;
  strDefinition2?: Flex__<"div">;
  ul?: Flex__<"ul">;
  strDefinition4?: Flex__<"div">;
  titlesRow4?: Flex__<"div">;
  titlesRow5?: Flex__<"div">;
  strDefinition3?: Flex__<"div">;
  strDefinition5?: Flex__<"div">;
  titlesRow6?: Flex__<"div">;
  titlesRow7?: Flex__<"div">;
  support?: Flex__<"div">;
  supportText?: Flex__<"div">;
  outlines?: Flex__<"div">;
  bot?: Flex__<"div">;
  more?: Flex__<"div">;
  certificates?: Flex__<"div">;
  iamges?: Flex__<"div">;
  relatedContents?: Flex__<"div">;
  neighbours?: Flex__<"div">;
  benefitsTitle2?: Flex__<"div">;
  benefitsCaption2?: Flex__<"div">;
  cta?: Flex__<"div">;
  ctaText?: Flex__<"div">;
  button?: Flex__<"div">;
  rentamonFooter?: Flex__<typeof RentamonFooter>;
  clarityRntComponent?: Flex__<typeof ClarityRntComponent>;
  faviconRntComponent?: Flex__<typeof FaviconRntComponent>;
};

export interface DefaultمقایسهبهترینسایتاجارهویلاProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function Plasmicمقایسهبهترینسایتاجارهویلا__RenderFunc(props: {
  variants: Plasmicمقایسهبهترینسایتاجارهویلا__VariantsArgs;
  args: Plasmicمقایسهبهترینسایتاجارهویلا__ArgsType;
  overrides: Plasmicمقایسهبهترینسایتاجارهویلا__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "propertyId",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsaSuSwU8JUYf()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">
          {Plasmicمقایسهبهترینسایتاجارهویلا.pageMetadata.title}
        </title>
        <meta
          key="og:title"
          property="og:title"
          content={Plasmicمقایسهبهترینسایتاجارهویلا.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={Plasmicمقایسهبهترینسایتاجارهویلا.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={Plasmicمقایسهبهترینسایتاجارهویلا.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={Plasmicمقایسهبهترینسایتاجارهویلا.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={Plasmicمقایسهبهترینسایتاجارهویلا.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={Plasmicمقایسهبهترینسایتاجارهویلا.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={Plasmicمقایسهبهترینسایتاجارهویلا.pageMetadata.ogImageSrc}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"content"}
          data-plasmic-override={overrides.content}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.content
          )}
        >
          <NavbarRntHeader
            data-plasmic-name={"navbarRntHeader"}
            data-plasmic-override={overrides.navbarRntHeader}
            className={classNames("__wab_instance", sty.navbarRntHeader)}
          />

          <div
            data-plasmic-name={"mainContents"}
            data-plasmic-override={overrides.mainContents}
            className={classNames(projectcss.all, sty.mainContents)}
          >
            <div
              data-plasmic-name={"intro"}
              data-plasmic-override={overrides.intro}
              className={classNames(projectcss.all, sty.intro)}
            >
              <div
                data-plasmic-name={"introTitle"}
                data-plasmic-override={overrides.introTitle}
                className={classNames(projectcss.all, sty.introTitle)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ilLr
                  )}
                >
                  {
                    "\u0645\u0642\u0627\u06cc\u0633\u0647 \u0628\u0647\u062a\u0631\u06cc\u0646 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0648\u06cc\u0644\u0627\r"
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"introDesc"}
                data-plasmic-override={overrides.introDesc}
                className={classNames(projectcss.all, sty.introDesc)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___82KF
                  )}
                >
                  {
                    "\u0627\u06af\u0647 \u0645\u06cc\u0632\u0628\u0627\u0646 \u06cc\u0627 \u0635\u0627\u062d\u0628 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647 \u0647\u0633\u062a\u06cc \u0648 \u062f\u0646\u0628\u0627\u0644 \u0628\u0647\u062a\u0631\u06cc\u0646 \u0633\u0627\u06cc\u062a (\u067e\u0644\u062a\u0641\u0631\u0645) \u0628\u0631\u0627\u06cc \u06af\u0630\u0627\u0634\u062a\u0646 \u0622\u06af\u0647\u06cc \u0645\u06cc\u200c\u06af\u0631\u062f\u06cc\u060c \u0627\u062d\u062a\u0645\u0627\u0644\u0627\u064b \u0627\u0633\u0645\u200c\u0647\u0627\u06cc\u06cc \u0645\u062b\u0644 \u0634\u0628\u060c \u062c\u0627\u062c\u06cc\u06af\u0627\u060c \u0627\u062a\u0627\u0642\u06a9\u060c \u062c\u0627\u0628\u0627\u0645\u0627\u060c \u0647\u0648\u0645\u0633\u0627\u060c \u0627\u0633\u0646\u067e\u200c\u062a\u0631\u06cc\u067e\u060c \u0622\u0646\u06cc\u200c\u062c\u0627\u060c \u0644\u06cc\u062f\u0648\u0645\u0627\u062a\u0631\u06cc\u067e \u0648 \u0645\u06cc\u0647\u0645\u0627\u0646\u0634\u0648 \u0631\u0648 \u0634\u0646\u06cc\u062f\u06cc\u060c \u0648 \u0644\u06cc\u0633\u062a\u06cc \u06a9\u0647 \u0647\u0645\u0686\u0646\u0627\u0646 \u0627\u062f\u0627\u0645\u0647 \u062f\u0627\u0631\u0647. \u06af\u06cc\u062c\u200c\u06a9\u0646\u0646\u062f\u0647 \u0646\u06cc\u0633\u062a\u061f"
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"str"}
                data-plasmic-override={overrides.str}
                className={classNames(projectcss.all, sty.str)}
              >
                <DataFetcher
                  className={classNames(
                    "__wab_instance",
                    sty.httpRestApiFetcher__vnWb
                  )}
                  dataName={"fetchedData"}
                  errorDisplay={
                    <DataCtxReader__>
                      {$ctx => "Error fetching data"}
                    </DataCtxReader__>
                  }
                  errorName={"fetchError"}
                  headers={(() => {
                    try {
                      return {
                        "xc-token": "Uf73uC4qliAaPeDYzVEkbQnVuQ-tU1EwZ8T1Eq-A"
                      };
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()}
                  loadingDisplay={
                    <DataCtxReader__>{$ctx => "Loading..."}</DataCtxReader__>
                  }
                  method={"GET"}
                  noLayout={false}
                  url={(() => {
                    try {
                      return "https://app.nocodb.com/api/v2/tables/mdgs7ivtncz7kit/records?limit=25&shuffle=0&offset=0";
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()}
                >
                  <DataCtxReader__>
                    {$ctx => (
                      <div
                        data-plasmic-name={"strDefinition"}
                        data-plasmic-override={overrides.strDefinition}
                        className={classNames(
                          projectcss.all,
                          sty.strDefinition
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__njQaX
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__j5Sh7
                            )}
                          >
                            {
                              "\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u06cc\u0633\u0647 \u0634\u0627\u062e\u0635\u200c\u0647\u0627\u06cc \u06a9\u0644\u06cc\u062f\u06cc \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0648\u06cc\u0644\u0627"
                            }
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__o9UhC
                            )}
                          >
                            {
                              "\u0648\u06cc\u0644\u0627\u0645\u0648 \u06a9\u062c\u0627 \u0622\u06af\u0647\u06cc \u06a9\u0646\u0645\u061f"
                            }
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___7DL1F
                            )}
                          >
                            {
                              " \u0627\u06cc\u0646\u062c\u0627 \u0641\u0627\u06a9\u062a\u0648\u0631\u0647\u0627\u06cc \u06a9\u0644\u06cc\u062f\u06cc \u0645\u062b\u0644 \u062a\u0639\u062f\u0627\u062f \u0634\u0628\u06cc \u06a9\u0647 \u067e\u0631 \u0645\u06cc\u200c\u06a9\u0646\u0646\u060c \u0645\u06cc\u0632\u0627\u0646 \u06a9\u0645\u06cc\u0633\u06cc\u0648\u0646\u060c \u0632\u0645\u0627\u0646 \u0645\u0639\u0637\u0644\u06cc \u0628\u0631\u0627\u06cc \u0648\u0627\u0631\u06cc\u0632 \u0648\u062c\u0647\u060c \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0648\u2026 \u0647\u0631 \u06a9\u062f\u0648\u0645 \u0645\u0642\u0627\u06cc\u0633\u0647 \u0634\u062f\u0647."
                            }
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vk6TK
                          )}
                        >
                          <div
                            data-plasmic-name={"titlesRow"}
                            data-plasmic-override={overrides.titlesRow}
                            className={classNames(
                              projectcss.all,
                              sty.titlesRow
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__q4Klv
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__mfVja
                                )}
                              >
                                {"\u067e\u0644\u062a\u0641\u0631\u0645"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___3Vksc
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__faQ6C
                                )}
                              >
                                {"\u0628\u0627\u0632\u062f\u06cc\u062f"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__geyXj
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__eS1Ln
                                )}
                              >
                                {hasVariant(
                                  globalVariants,
                                  "screen",
                                  "smallMobile"
                                )
                                  ? "\u062a\u0639\u062f\u0627\u062f \u0631\u0632\u0631\u0648"
                                  : "\u062a\u0639\u062f\u0627\u062f \u0631\u0632\u0631\u0648"}
                              </div>
                            </div>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__yCEuC
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__g6M4L
                                )}
                              >
                                {"\u06a9\u0627\u0631\u0645\u0632\u062f"}
                              </div>
                            </Stack__>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___4SxL
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___68ZeJ
                                )}
                              >
                                {
                                  "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc"
                                }
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__dOl6G
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__tUtkP
                                )}
                              >
                                {"\u062a\u0633\u0648\u06cc\u0647"}
                              </div>
                            </div>
                          </div>
                          {(_par =>
                            !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                            (() => {
                              try {
                                return $ctx.fetchedData.list;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return [];
                                }
                                throw e;
                              }
                            })()
                          ).map((__plasmic_item_0, __plasmic_idx_0) => {
                            const currentItem = __plasmic_item_0;
                            const currentIndex = __plasmic_idx_0;
                            return (
                              <div
                                data-plasmic-name={"titlesRow3"}
                                data-plasmic-override={overrides.titlesRow3}
                                className={classNames(
                                  projectcss.all,
                                  sty.titlesRow3
                                )}
                                key={currentIndex}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__lbZ5P
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__qKjEc
                                    )}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return currentItem.platform;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "\u067e\u0644\u062a\u0641\u0631\u0645";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </div>
                                <Stack__
                                  as={"div"}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__utHVl
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__cMu5U
                                    )}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return currentItem.visit;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "\u0628\u0627\u0632\u062f\u06cc\u062f";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </Stack__>
                                <Stack__
                                  as={"div"}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__yUbK3
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__bd9T6
                                    )}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return currentItem.reserves;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "\u062a\u0639\u062f\u0627\u062f \u0631\u0632\u0631\u0648";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </Stack__>
                                <Stack__
                                  as={"div"}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__zjnRu
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__raKkn
                                    )}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return currentItem.commission;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "\u06a9\u0627\u0631\u0645\u0632\u062f";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </Stack__>
                                <Stack__
                                  as={"div"}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__nowX
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__j6Ly2
                                    )}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return currentItem.support;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </Stack__>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__ilhVv
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___9KPcR
                                    )}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return currentItem.declare;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "\u062a\u0633\u0648\u06cc\u0647";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </div>
                              </div>
                            );
                          })}
                        </div>
                      </div>
                    )}
                  </DataCtxReader__>
                </DataFetcher>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__txPc)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__u8Ckj)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/website_starter/images/incomeJpg.jpg",
                    fullWidth: 850,
                    fullHeight: 413,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
            <div
              data-plasmic-name={"strDefinition2"}
              data-plasmic-override={overrides.strDefinition2}
              className={classNames(projectcss.all, sty.strDefinition2)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__xnmxK)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tRAhj
                  )}
                >
                  {
                    "\u0645\u06cc\u0632\u0627\u0646 \u06a9\u0627\u0631\u0645\u0632\u062f:\r"
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lMzU5
                  )}
                >
                  {
                    "\u06a9\u0645\u06cc\u0633\u06cc\u0648\u0646 \u062c\u0627\u0628\u0627\u0645\u0627\u060c \u062c\u0627\u062c\u06cc\u06af\u0627 \u0648\u2026 \u0686\u0642\u062f\u0631\u0647\u061f"
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hT3
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "\u067e\u0644\u062a\u0641\u0631\u0645\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647\u060c \u0628\u0647 \u0627\u0632\u0627\u06cc \u0645\u0639\u0631\u0641\u06cc \u0645\u0633\u0627\u0641\u0631\u060c \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0648 \u0633\u0627\u06cc\u0631 \u062e\u062f\u0645\u0627\u062a\u06cc \u06a9\u0647 \u0627\u0631\u0627\u0626\u0647 \u0645\u06cc\u200c\u062f\u0647\u0646\u062f\u060c \u0627\u0632 \u062f\u0631\u0622\u0645\u062f \u0648\u06cc\u0644\u0627 \u06a9\u0645\u06cc\u0633\u06cc\u0648\u0646 \u0628\u0631\u0645\u06cc\u200c\u062f\u0627\u0631\u0646\u062f. \u06cc\u0639\u0646\u06cc \u062f\u0631 \u0627\u0632\u0627\u06cc \u0647\u0631 \u0634\u0628\u06cc \u06a9\u0647 \u0648\u06cc\u0644\u0627\u06cc \u0634\u0645\u0627 \u0631\u0632\u0631\u0648 \u0628\u0634\u0647\u060c \u0628\u062e\u0634\u06cc \u0627\u0632 \u0645\u0628\u0644\u063a \u0628\u0631\u0627\u06cc \u0627\u0648\u0646 \u067e\u0644\u062a\u0641\u0631\u0645 \u0647\u0633\u062a.\n\n\r\n"
                      }
                    </React.Fragment>
                    {
                      <ul
                        data-plasmic-name={"ul"}
                        data-plasmic-override={overrides.ul}
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__rHnEm
                          )}
                        >
                          {
                            "\u062c\u0627\u0628\u0627\u0645\u0627 \u062a\u062d\u062a \u0634\u0631\u0627\u06cc\u0637\u06cc \u0645\u062b\u0644 \u06af\u0627\u0631\u0627\u0646\u062a \u0648\u06cc\u0644\u0627\u060c \u0645\u0645\u06a9\u0646\u0647 \u062a\u0627 \u06f2\u06f5\u066a \u0627\u0641\u0632\u0627\u06cc\u0634 \u06a9\u0645\u06cc\u0633\u06cc\u0648\u0646 \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u0647."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__pAeIr
                          )}
                        >
                          {
                            "\u06a9\u0627\u0631\u0645\u0632\u062f \u0647\u0648\u0645\u0633\u0627 \u0628\u0627 \u062a\u0648\u062c\u0647 \u0628\u0647 \u0627\u0646\u062a\u062e\u0627\u0628 \u0645\u062f\u062a \u0632\u0645\u0627\u0646 \u062a\u0633\u0648\u06cc\u0647 \u062d\u0633\u0627\u0628\u060c \u0627\u0632 \u06f5 \u062a\u0627 \u06f1\u06f5 \u062f\u0631\u0635\u062f \u0645\u062a\u063a\u06cc\u0631\u0647. "
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__edbLc
                          )}
                        >
                          {
                            "\u062c\u0627\u062c\u06cc\u06af\u0627 \u0628\u0631\u0627\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u0627\u0646\u06cc \u06a9\u0647 \u0639\u0645\u0644\u06a9\u0631\u062f \u0628\u0647\u062a\u0631\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u0646\u062f \u0645\u0645\u06a9\u0646\u0647 \u062a\u0627 \u0645\u06cc\u0632\u0627\u0646 \u06f1\u06f0\u066a \u06a9\u0627\u0647\u0634 \u06a9\u0645\u06cc\u0633\u06cc\u0648\u0646 \u062f\u0631 \u0646\u0638\u0631 \u0628\u06af\u06cc\u0631\u0647."
                          }
                        </li>
                      </ul>
                    }
                    <React.Fragment>{"\r"}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__xp20C)}>
                <DataFetcher
                  className={classNames(
                    "__wab_instance",
                    sty.httpRestApiFetcher__nueaa
                  )}
                  dataName={"fetchedData"}
                  errorDisplay={
                    <DataCtxReader__>
                      {$ctx => "Error fetching data"}
                    </DataCtxReader__>
                  }
                  errorName={"fetchError"}
                  headers={(() => {
                    try {
                      return {
                        "xc-token": "Uf73uC4qliAaPeDYzVEkbQnVuQ-tU1EwZ8T1Eq-A"
                      };
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()}
                  loadingDisplay={
                    <DataCtxReader__>{$ctx => "Loading..."}</DataCtxReader__>
                  }
                  method={"GET"}
                  noLayout={false}
                  url={(() => {
                    try {
                      return "https://app.nocodb.com/api/v2/tables/mdgs7ivtncz7kit/records?limit=25&shuffle=0&offset=0";
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()}
                >
                  <DataCtxReader__>
                    {$ctx => (
                      <div
                        data-plasmic-name={"strDefinition4"}
                        data-plasmic-override={overrides.strDefinition4}
                        className={classNames(
                          projectcss.all,
                          sty.strDefinition4
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__txy20
                          )}
                        >
                          <div
                            data-plasmic-name={"titlesRow4"}
                            data-plasmic-override={overrides.titlesRow4}
                            className={classNames(
                              projectcss.all,
                              sty.titlesRow4
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__a0Hrf
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__xFiA
                                )}
                              >
                                {
                                  "\u067e\u0644\u062a\u0641\u0631\u0645 \u0627\u062c\u0627\u0631\u0647 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647"
                                }
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__n3QPg
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__oAyNy
                                )}
                              >
                                {"\u06a9\u0627\u0631\u0645\u0632\u062f"}
                              </div>
                            </div>
                          </div>
                          {(_par =>
                            !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                            (() => {
                              try {
                                return $ctx.fetchedData.list;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return [];
                                }
                                throw e;
                              }
                            })()
                          ).map((__plasmic_item_0, __plasmic_idx_0) => {
                            const currentItem = __plasmic_item_0;
                            const currentIndex = __plasmic_idx_0;
                            return (
                              <div
                                data-plasmic-name={"titlesRow5"}
                                data-plasmic-override={overrides.titlesRow5}
                                className={classNames(
                                  projectcss.all,
                                  sty.titlesRow5
                                )}
                                key={currentIndex}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__mTj3E
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___1BarQ
                                    )}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return currentItem.platform;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "\u067e\u0644\u062a\u0641\u0631\u0645";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__yQjUg
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__taTB
                                    )}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return currentItem.commission;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "\u06a9\u0627\u0631\u0645\u0632\u062f";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </div>
                              </div>
                            );
                          })}
                        </div>
                      </div>
                    )}
                  </DataCtxReader__>
                </DataFetcher>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__it0YC)}>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__svCGt)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/website_starter/images/waitingJpg.jpg",
                  fullWidth: 850,
                  fullHeight: 413,
                  aspectRatio: undefined
                }}
              />
            </div>
            <div
              data-plasmic-name={"strDefinition3"}
              data-plasmic-override={overrides.strDefinition3}
              className={classNames(projectcss.all, sty.strDefinition3)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__uKaNj)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__utxly
                  )}
                >
                  {
                    "\u0645\u062f\u062a \u0632\u0645\u0627\u0646 \u0627\u0646\u062a\u0638\u0627\u0631 \u0628\u0631\u0627\u06cc \u0648\u0627\u0631\u06cc\u0632 \u062f\u0631\u0622\u0645\u062f \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647"
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__e6SC
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobile")
                    ? "\u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0648\u06cc\u0644\u0627 \u0648 \u0633\u0648\u06cc\u06cc\u062a \u0686\u0642\u062f\u0631 \u0637\u0648\u0644 \u0645\u06cc\u200c\u06a9\u0634\u0647 \u062a\u0627 \u062a\u0633\u0648\u06cc\u0647\u200c\u062d\u0633\u0627\u0628 \u06a9\u0646\u0646\u062f\u061f"
                    : "\u0648\u0627\u0631\u06cc\u0632 \u0628\u0647 \u0645\u0648\u0642\u0639 \u062f\u0631\u0622\u0645\u062f \u0648\u06cc\u0644\u0627"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___02QL1
                  )}
                >
                  {
                    "\u0628\u0631\u0646\u0627\u0645\u0647\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0648\u06cc\u0644\u0627 \u0645\u0639\u0645\u0648\u0644\u0627 \u06cc\u06a9 \u0631\u0648\u0632 \u0628\u0639\u062f \u0627\u0632 \u0648\u0631\u0648\u062f \u0645\u0647\u0645\u0627\u0646 \u0648 \u0627\u0637\u0645\u06cc\u0646\u0627\u0646 \u0627\u0632 \u0627\u0633\u062a\u0642\u0631\u0627\u0631 \u0627\u0648\u0646\u200c\u0647\u0627\u060c \u0633\u0647\u0645 \u0645\u06cc\u0632\u0628\u0627\u0646 \u0631\u0648 \u0628\u0647 \u062d\u0633\u0627\u0628\u200c\u0627\u0634 \u0648\u0627\u0631\u06cc\u0632 \u0645\u06cc\u200c\u06a9\u0646\u0646\u062f. \u0628\u0627 \u062a\u0648\u062c\u0647 \u0628\u0647 \u0627\u06cc\u0646\u06a9\u0647 \u0648\u062c\u0647 \u0628\u0647 \u0634\u0645\u0627\u0631\u0647 \u0634\u0628\u0627 \u0645\u06cc\u0632\u0628\u0627\u0646 \u0648\u0627\u0631\u06cc\u0632 \u0645\u06cc\u0634\u0647\u060c \u0628\u0627\u06cc\u062f \u0632\u0645\u0627\u0646 \u0645\u0639\u0637\u0644\u06cc \u0646\u0642\u0644 \u0648 \u0627\u0646\u062a\u0642\u0627\u0644 \u0628\u0627\u0646\u06a9\u06cc \u0648 \u062e\u0635\u0648\u0635\u0627 \u0631\u0648\u0632\u0647\u0627\u06cc \u062a\u0639\u0637\u06cc\u0644 \u0631\u0648 \u0647\u0645 \u062f\u0631 \u0646\u0638\u0631 \u06af\u0631\u0641\u062a.\r\n\u0627\u0644\u0628\u062a\u0647 \u06af\u0627\u0647\u06cc \u00ab\u0645\u062f\u062a \u0632\u0645\u0627\u0646 \u0627\u0639\u0644\u0627\u0645 \u0634\u062f\u0647 \u0628\u0631\u0627\u06cc \u0648\u0627\u0631\u06cc\u0632\u00bb \u0628\u0627 \u0632\u0645\u0627\u0646\u06cc \u06a9\u0647 \u0648\u0627\u0631\u06cc\u0632 \u0648\u0627\u0642\u0639\u0627 \u0627\u0646\u062c\u0627\u0645 \u0645\u06cc\u200c\u0634\u0647\u060c \u062a\u0641\u0627\u0648\u062a \u062f\u0627\u0631\u0647."
                  }
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__jaSxE)}>
                <DataFetcher
                  className={classNames(
                    "__wab_instance",
                    sty.httpRestApiFetcher__eqVpy
                  )}
                  dataName={"fetchedData"}
                  errorDisplay={
                    <DataCtxReader__>
                      {$ctx => "Error fetching data"}
                    </DataCtxReader__>
                  }
                  errorName={"fetchError"}
                  headers={(() => {
                    try {
                      return {
                        "xc-token": "Uf73uC4qliAaPeDYzVEkbQnVuQ-tU1EwZ8T1Eq-A"
                      };
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()}
                  loadingDisplay={
                    <DataCtxReader__>{$ctx => "Loading..."}</DataCtxReader__>
                  }
                  method={"GET"}
                  noLayout={false}
                  url={(() => {
                    try {
                      return "https://app.nocodb.com/api/v2/tables/mdgs7ivtncz7kit/records?limit=25&shuffle=0&offset=0";
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()}
                >
                  <DataCtxReader__>
                    {$ctx => (
                      <div
                        data-plasmic-name={"strDefinition5"}
                        data-plasmic-override={overrides.strDefinition5}
                        className={classNames(
                          projectcss.all,
                          sty.strDefinition5
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___9WNex
                          )}
                        >
                          <div
                            data-plasmic-name={"titlesRow6"}
                            data-plasmic-override={overrides.titlesRow6}
                            className={classNames(
                              projectcss.all,
                              sty.titlesRow6
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__szM7Q
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__fzEh2
                                )}
                              >
                                {
                                  "\u067e\u0644\u062a\u0641\u0631\u0645 \u0627\u062c\u0627\u0631\u0647 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647"
                                }
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__nAmhy
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__kblol
                                )}
                              >
                                {
                                  "\u0627\u0646\u062a\u0638\u0627\u0631 \u062a\u0627 \u0648\u0627\u0631\u06cc\u0632 \u062f\u0631\u0622\u0645\u062f"
                                }
                              </div>
                            </div>
                          </div>
                          {(_par =>
                            !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                            (() => {
                              try {
                                return $ctx.fetchedData.list;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return [];
                                }
                                throw e;
                              }
                            })()
                          ).map((__plasmic_item_0, __plasmic_idx_0) => {
                            const currentItem = __plasmic_item_0;
                            const currentIndex = __plasmic_idx_0;
                            return (
                              <div
                                data-plasmic-name={"titlesRow7"}
                                data-plasmic-override={overrides.titlesRow7}
                                className={classNames(
                                  projectcss.all,
                                  sty.titlesRow7
                                )}
                                key={currentIndex}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__cvvYx
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__vBbNg
                                    )}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return currentItem.platform;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "\u067e\u0644\u062a\u0641\u0631\u0645";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__ocEhs
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__tUGyB
                                    )}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return currentItem.declare;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "\u06a9\u0627\u0631\u0645\u0632\u062f";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </div>
                              </div>
                            );
                          })}
                        </div>
                      </div>
                    )}
                  </DataCtxReader__>
                </DataFetcher>
              </div>
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__rCjtz
              )}
            >
              {
                "\u0628\u0647 \u06af\u0641\u062a\u0647\u200c\u06cc \u0628\u0631\u062e\u06cc \u0645\u06cc\u0632\u0628\u0627\u0646\u200c\u0647\u0627\u060c \u0645\u0645\u06a9\u0646\u0647 \u0648\u0627\u0631\u06cc\u0632 \u0648\u062c\u0647\u0650 \u0634\u0628 \u0648 \u062c\u0627\u0628\u0627\u0645\u0627 \u062a\u0627 \u0686\u0646\u062f \u0631\u0648\u0632 \u0628\u0627 \u062a\u0627\u062e\u06cc\u0631 \u0627\u0646\u062c\u0627\u0645 \u0628\u0634\u0647."
              }
            </div>
            <div
              data-plasmic-name={"support"}
              data-plasmic-override={overrides.support}
              className={classNames(projectcss.all, sty.support)}
            >
              <div className={classNames(projectcss.all, sty.freeBox___5Hatn)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___2W4Ag)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/website_starter/images/supportJpg.jpg",
                    fullWidth: 850,
                    fullHeight: 413,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div
                data-plasmic-name={"supportText"}
                data-plasmic-override={overrides.supportText}
                className={classNames(projectcss.all, sty.supportText)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dYUtH
                  )}
                >
                  {
                    "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0648 \u062f\u0633\u062a\u0631\u0633\u06cc\u200c\u067e\u0630\u06cc\u0631\u06cc"
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ke47I
                  )}
                >
                  {
                    "\u0627\u06af\u0647 \u0628\u0627 \u0645\u0647\u0645\u0627\u0646 \u0628\u0647 \u0645\u0634\u06a9\u0644 \u0628\u062e\u0648\u0631\u06cc\u060c \u0648 \u06cc\u0627 \u0648\u0627\u0631\u06cc\u0632 \u062f\u0631\u0622\u0645\u062f \u0628\u0627 \u062a\u0627\u062e\u06cc\u0631 \u0627\u0646\u062c\u0627\u0645 \u0628\u0634\u0647\u060c \u06a9\u06cc\u0641\u06cc\u062a \u0648 \u0633\u0631\u0639\u062a \u0639\u0645\u0644 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0627\u0647\u0645\u06cc\u062a \u0632\u06cc\u0627\u062f\u06cc \u067e\u06cc\u062f\u0627 \u0645\u06cc\u200c\u06a9\u0646\u0647! \u0631\u062a\u0628\u0647\u200c\u0628\u0646\u062f\u06cc \u0648 \u0627\u0645\u062a\u06cc\u0627\u0632 \u062f\u0627\u062f\u0646 \u0628\u0647 \u06a9\u06cc\u0641\u06cc\u062a \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0645\u0634\u062a\u0631\u06cc\u0627\u0646 \u06a9\u0627\u0631 \u0633\u0627\u062f\u0647\u200c\u0627\u06cc \u0646\u06cc\u0633\u062a\u060c \u0686\u0648\u0646 \u06a9\u06cc\u0641\u06cc\u062a \u0631\u0648 \u0628\u0647 \u0633\u062e\u062a\u06cc \u0645\u06cc\u200c\u0634\u0647 \u0627\u0646\u062f\u0627\u0632\u0647 \u06af\u0631\u0641\u062a. "
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"outlines"}
                data-plasmic-override={overrides.outlines}
                className={classNames(projectcss.all, sty.outlines)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__f3Lou
                  )}
                >
                  {hasVariant(globalVariants, "screen", "tablet") ? (
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"\u062c\u0627\u062c\u06cc\u06af\u0627 \u2b50\u06f5"}
                      </span>
                      <React.Fragment>
                        {
                          "\r\n\u062a\u0645\u0627\u0633\u060c \u0686\u062a \u0622\u0646\u0644\u0627\u06cc\u0646 \u0648 \u0627\u06cc\u0645\u06cc\u0644 \u0627\u0632 \u06f8 \u0635\u0628\u062d \u062a\u0627 \u06f1\u06f2 \u0634\u0628 \u2013 \u062c\u0627\u062c\u06cc\u06af\u0627 \u0628\u0647 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u062e\u0648\u0628 \u0648 \u067e\u06cc\u06af\u06cc\u0631\u0634 \u0645\u0639\u0631\u0648\u0641\u0647!\r\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"\u0634\u0628 \u2b50\u06f3.\u06f5"}
                      </span>
                      <React.Fragment>
                        {
                          "\r\n\u062a\u0645\u0627\u0633 \u0648 \u0686\u062a \u0622\u0646\u0644\u0627\u06cc\u0646 \u0627\u0632 \u06f9 \u0635\u0628\u062d \u062a\u0627 \u06f1 \u0634\u0628 \u2013 \u0627\u062e\u06cc\u0631\u0627 \u0628\u0647 \u0633\u062e\u062a\u06cc \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0628\u0627 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0634\u0628 \u0627\u0631\u062a\u0628\u0627\u0637 \u0628\u06af\u06cc\u0631\u06cc.\r\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"\u0647\u0648\u0645\u0633\u0627 \u2b50\u06f4\r"}
                      </span>
                      <React.Fragment>
                        {
                          "\n\u062a\u0645\u0627\u0633 \u0648 \u062a\u06cc\u06a9\u062a \u0622\u0646\u0644\u0627\u06cc\u0646 \u0627\u0632 \u06f1\u06f0 \u0635\u0628\u062d \u062a\u0627 \u06f6 \u0639\u0635\u0631\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"\u0627\u062a\u0627\u0642\u06a9 \u2b50\u06f4\r"}
                      </span>
                      <React.Fragment>
                        {
                          "\n\u062a\u0645\u0627\u0633 \u0627\u0632 \u06f9 \u0635\u0628\u062d \u062a\u0627 \u06f5 \u0639\u0635\u0631\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {
                          "\u0645\u06cc\u0647\u0645\u0627\u0646\u0634\u0648 \u2b50\u06f3.\u06f5\r"
                        }
                      </span>
                      <React.Fragment>
                        {
                          "\n\u062a\u0645\u0627\u0633 \u0627\u0632 \u0633\u0627\u0639\u062a \u06f9 \u0635\u0628\u062d \u0627\u0644\u06cc \u06f1\u06f2 \u0634\u0628\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {
                          "\u062c\u0627\u0628\u0627\u0645\u0627 \u2b50\u06f3.\u06f5"
                        }
                      </span>
                      <React.Fragment>
                        {
                          "\r\n\u062a\u0627\u0632\u06af\u06cc\u0627 \u062f\u0633\u062a\u0631\u0633\u06cc \u0628\u0647 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u062e\u06cc\u0644\u06cc \u0633\u062e\u062a \u0634\u062f\u0647! \u062a\u0642\u0631\u06cc\u0628\u0627 \u062f\u0631 \u0627\u063a\u0644\u0628 \u0634\u0631\u0627\u06cc\u0637\u060c \u0641\u0642\u0637 \u0628\u0627 \u062a\u06cc\u06a9\u062a \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc\u062f \u0645\u0634\u06a9\u0644\u200c\u062a\u0648\u0646 \u0631\u0648 \u067e\u06cc\u06af\u06cc\u0631\u06cc \u06a9\u0646\u06cc\u062f.\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"\u0645\u06cc\u0632\u0628\u0648\u0646 \u2b50\u06f1"}
                      </span>
                      <React.Fragment>
                        {
                          "\r\n\u0639\u0645\u0644\u0627 \u0628\u0627\u06cc\u062f \u06cc\u0647 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0633\u0627\u06cc\u062a \u0627\u0642\u0627\u0645\u062a \u06f2\u06f4 \u0632\u0646\u06af \u0628\u0632\u0646\u06cc\u062f \u0648 \u062f\u0633\u062a\u0631\u0633\u06cc \u0628\u0647 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc\u200c\u0634\u0648\u0646 \u0633\u0627\u062f\u0647 \u0646\u06cc\u0633\u062a."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  ) : (
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"\u062c\u0627\u062c\u06cc\u06af\u0627 \u2b50\u06f5"}
                      </span>
                      <React.Fragment>
                        {
                          "\r\n\u062a\u0645\u0627\u0633\u060c \u0686\u062a \u0622\u0646\u0644\u0627\u06cc\u0646 \u0648 \u0627\u06cc\u0645\u06cc\u0644 \u0627\u0632 \u06f8 \u0635\u0628\u062d \u062a\u0627 \u06f1\u06f2 \u0634\u0628 \u2013 \u062c\u0627\u062c\u06cc\u06af\u0627 \u0628\u0647 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u062e\u0648\u0628 \u0648 \u067e\u06cc\u06af\u06cc\u0631\u0634 \u0645\u0639\u0631\u0648\u0641\u0647!\r\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"\u0634\u0628 \u2b50\u06f4.\u06f5"}
                      </span>
                      <React.Fragment>
                        {
                          "\r\n\u062a\u0645\u0627\u0633 \u0648 \u0686\u062a \u0622\u0646\u0644\u0627\u06cc\u0646 \u0627\u0632 \u06f9 \u0635\u0628\u062d \u062a\u0627 \u06f1 \u0634\u0628 \u2013 \u062f\u0631 \u06a9\u0644 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u062e\u0648\u0628\u06cc \u062f\u0627\u0631\u0647.\r\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"\u0647\u0648\u0645\u0633\u0627 \u2b50\u06f4\r"}
                      </span>
                      <React.Fragment>
                        {
                          "\n\u062a\u0645\u0627\u0633 \u0648 \u062a\u06cc\u06a9\u062a \u0622\u0646\u0644\u0627\u06cc\u0646 \u0627\u0632 \u06f1\u06f0 \u0635\u0628\u062d \u062a\u0627 \u06f6 \u0639\u0635\u0631\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"\u0627\u062a\u0627\u0642\u06a9 \u2b50\u06f4\r"}
                      </span>
                      <React.Fragment>
                        {
                          "\n\u062a\u0645\u0627\u0633 \u0627\u0632 \u06f9 \u0635\u0628\u062d \u062a\u0627 \u06f5 \u0639\u0635\u0631\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {
                          "\u0645\u06cc\u0647\u0645\u0627\u0646\u0634\u0648 \u2b50\u06f3.\u06f5\r"
                        }
                      </span>
                      <React.Fragment>
                        {
                          "\n\u062a\u0645\u0627\u0633 \u0627\u0632 \u0633\u0627\u0639\u062a \u06f9 \u0635\u0628\u062d \u0627\u0644\u06cc \u06f1\u06f2 \u0634\u0628\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {
                          "\u062c\u0627\u0628\u0627\u0645\u0627 \u2b50\u06f3.\u06f5"
                        }
                      </span>
                      <React.Fragment>
                        {
                          "\r\n\u062a\u0627\u0632\u06af\u06cc\u0627 \u062f\u0633\u062a\u0631\u0633\u06cc \u0628\u0647 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u062e\u06cc\u0644\u06cc \u0633\u062e\u062a \u0634\u062f\u0647! \u062a\u0642\u0631\u06cc\u0628\u0627 \u062f\u0631 \u0627\u063a\u0644\u0628 \u0634\u0631\u0627\u06cc\u0637\u060c \u0641\u0642\u0637 \u0628\u0627 \u062a\u06cc\u06a9\u062a \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc\u062f \u0645\u0634\u06a9\u0644\u200c\u062a\u0648\u0646 \u0631\u0648 \u067e\u06cc\u06af\u06cc\u0631\u06cc \u06a9\u0646\u06cc\u062f.\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {
                          "\u0645\u06cc\u0632\u0628\u0648\u0646 \u2b50\u06f3.\u06f5"
                        }
                      </span>
                      <React.Fragment>
                        {
                          "\r\n\u0639\u0645\u0644\u0627 \u0628\u0627\u06cc\u062f \u06cc\u0647 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0633\u0627\u06cc\u062a \u0627\u0642\u0627\u0645\u062a \u06f2\u06f4 \u0632\u0646\u06af \u0628\u0632\u0646\u06cc\u062f \u0648 \u062f\u0633\u062a\u0631\u0633\u06cc \u0628\u0647 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc\u200c\u0634\u0648\u0646 \u0633\u0631 \u0631\u0627\u0633\u062a \u0646\u06cc\u0633\u062a."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  )}
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"bot"}
              data-plasmic-override={overrides.bot}
              className={classNames(projectcss.all, sty.bot)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"more"}
                data-plasmic-override={overrides.more}
                hasGap={true}
                className={classNames(projectcss.all, sty.more)}
              >
                <div
                  data-plasmic-name={"certificates"}
                  data-plasmic-override={overrides.certificates}
                  className={classNames(projectcss.all, sty.certificates)}
                >
                  <div className={classNames(projectcss.all, sty.freeBox__koA)}>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__neWHx
                      )}
                    >
                      {
                        "\u0628\u06cc\u0634\u062a\u0631\u06cc\u0646 \u0645\u0639\u0631\u0641\u06cc \u0645\u0647\u0645\u0627\u0646"
                      }
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3POvo
                      )}
                    >
                      {
                        "\u062a\u0628\u0644\u06cc\u063a\u0627\u062a \u0648 \u0634\u0647\u0631\u062a \u0627\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u0647\u0627 \u0628\u06cc\u0646 \u0645\u0631\u062f\u0645 (\u0645\u0633\u0627\u0641\u0631\u0647\u0627) \u0628\u0647 \u06cc\u06a9 \u0627\u0646\u062f\u0627\u0632\u0647 \u0646\u06cc\u0633\u062a. \u0627\u06cc\u0646 \u0646\u0645\u0648\u062f\u0627\u0631 \u0646\u0634\u0648\u0646 \u0645\u06cc\u200c\u062f\u0647 \u06a9\u0647 \u0647\u0631 \u06a9\u062f\u0648\u0645 \u0627\u0632 \u0627\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647\u200c\u0647\u0627\u060c \u062d\u062f\u0648\u062f\u0627 \u0686\u0646\u062f \u062f\u0631\u0635\u062f \u0627\u0632 \u06cc\u06a9 \u0645\u0627\u0647 \u0631\u0648 \u0645\u06cc\u200c\u062a\u0648\u0646\u0646\u062f \u067e\u0631 \u06a9\u0646\u0646\u062f:"
                      }
                    </div>
                  </div>
                </div>
                <div
                  data-plasmic-name={"iamges"}
                  data-plasmic-override={overrides.iamges}
                  className={classNames(projectcss.all, sty.iamges)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___6Jg)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "smallMobile")
                        ? "100%"
                        : hasVariant(globalVariants, "screen", "mobile")
                        ? "80%"
                        : hasVariant(globalVariants, "screen", "tablet")
                        ? "50%"
                        : "30%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"auto"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/shareChartPng.png",
                      fullWidth: 455,
                      fullHeight: 363,
                      aspectRatio: undefined
                    }}
                  />

                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__nsPr6)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "smallMobile")
                        ? "100%"
                        : hasVariant(globalVariants, "screen", "mobile")
                        ? "80%"
                        : hasVariant(globalVariants, "screen", "tablet")
                        ? "44%"
                        : "26%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/shareTablePng.png",
                      fullWidth: 371,
                      fullHeight: 363,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </Stack__>
              <div
                data-plasmic-name={"relatedContents"}
                data-plasmic-override={overrides.relatedContents}
                className={classNames(projectcss.all, sty.relatedContents)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___6O4El)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__raLIx
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {
                          "\u0645\u0637\u0627\u0644\u0628 \u0645\u0631\u062a\u0628\u0637: "
                        }
                      </span>
                      <React.Fragment>{"\n- "}</React.Fragment>
                      {
                        <PlasmicLink__
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link___4BJaZ
                          )}
                          component={Link}
                          href={"/short-term-rental"}
                          platform={"nextjs"}
                        >
                          {
                            "\u06f2/\u06f5 \u0628\u0631\u0627\u0628\u0631 \u062f\u0631\u0622\u0645\u062f \u0628\u06cc\u0634\u062a\u0631 \u0646\u0633\u0628\u062a \u0628\u0647 \u0627\u062c\u0627\u0631\u0647 \u0633\u0627\u0644\u0627\u0646\u0647"
                          }
                        </PlasmicLink__>
                      }
                      <React.Fragment>{"\n - "}</React.Fragment>
                      {
                        <PlasmicLink__
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__w16Gw
                          )}
                          component={Link}
                          href={"/vacation-rental-income"}
                          platform={"nextjs"}
                        >
                          {
                            "\u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u062c\u0627\u0645\u0639 \u06a9\u0633\u0628 \u062f\u0631\u0622\u0645\u062f \u0627\u0632 \u0627\u062c\u0627\u0631\u0647 \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647"
                          }
                        </PlasmicLink__>
                      }
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>
              <div
                data-plasmic-name={"neighbours"}
                data-plasmic-override={overrides.neighbours}
                className={classNames(projectcss.all, sty.neighbours)}
              >
                <div
                  data-plasmic-name={"benefitsTitle2"}
                  data-plasmic-override={overrides.benefitsTitle2}
                  className={classNames(projectcss.all, sty.benefitsTitle2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sEu9Y
                    )}
                  >
                    {
                      "\u0627\u0645\u06a9\u0627\u0646 \u0686\u062a \u0648 \u0627\u0631\u062a\u0628\u0627\u0637 \u06af\u0631\u0641\u062a\u0646 \u0628\u0627 \u0645\u0647\u0645\u0627\u0646"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vkq1Q
                    )}
                  >
                    {
                      "\u0627\u06af\u0647 \u0645\u06cc\u0632\u0628\u0627\u0646 \u0628\u062a\u0648\u0646\u0647 \u0628\u0627 \u0645\u0647\u0645\u0627\u0646 \u0645\u0633\u062a\u0642\u06cc\u0645 \u06af\u0641\u062a\u06af\u0648 \u06a9\u0646\u0647\u060c \u062e\u06cc\u0627\u0644\u0634 \u0631\u0627\u062d\u062a\u200c\u062a\u0631\u0647. \u062e\u0635\u0648\u0635\u0627 \u067e\u06cc\u0634 \u0627\u0632 \u0646\u0647\u0627\u06cc\u06cc \u0634\u062f\u0646 \u0631\u0632\u0631\u0648. \u0645\u06cc\u200c\u0634\u0647 \u0645\u0648\u0636\u0648\u0639\u0627\u062a \u0632\u06cc\u0627\u062f\u06cc \u0631\u0648 \u0627\u0632 \u067e\u06cc\u0634 \u0628\u0627 \u0645\u062a\u0642\u0627\u0636\u06cc \u0647\u0645\u0627\u0647\u0646\u06af \u0648 \u062d\u062a\u06cc \u0637\u06cc \u06a9\u0631\u062f\u060c \u062a\u0627 \u0634\u0631\u0627\u06cc\u0637 \u067e\u06cc\u0634\u200c\u0628\u06cc\u0646\u06cc \u0646\u0634\u062f\u0647 \u0628\u0647\u200c\u0648\u062c\u0648\u062f \u0646\u06cc\u0627\u062f."
                    }
                  </div>
                </div>
                <div
                  data-plasmic-name={"benefitsCaption2"}
                  data-plasmic-override={overrides.benefitsCaption2}
                  className={classNames(projectcss.all, sty.benefitsCaption2)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__zmAfw)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "smallMobile")
                        ? "100%"
                        : hasVariant(globalVariants, "screen", "mobile")
                        ? "100%"
                        : hasVariant(globalVariants, "screen", "tablet")
                        ? "410px"
                        : "auto"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "smallMobile")
                        ? "100%"
                        : hasVariant(globalVariants, "screen", "mobile")
                        ? "100%"
                        : hasVariant(globalVariants, "screen", "tablet")
                        ? "70%"
                        : "40%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "smallMobile")
                        ? "100%"
                        : "auto"
                    }
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/website_starter/images/chatPng.png",
                      fullWidth: 601,
                      fullHeight: 601,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wkyZx
                  )}
                >
                  {
                    "\u0627\u0645\u06cc\u062f\u0648\u0627\u0631\u06cc\u0645 \u0627\u06cc\u0646 \u0645\u0642\u0627\u06cc\u0633\u0647 \u0628\u0647 \u0627\u0646\u062a\u062e\u0627\u0628 \u0628\u0647\u062a\u0631 \u0634\u0631\u06cc\u06a9 \u06a9\u0627\u0631\u06cc \u0634\u0645\u0627 \u06a9\u0645\u06a9 \u06a9\u0631\u062f\u0647 \u0628\u0627\u0634\u0647. \u0627\u06af\u0647 \u062f\u0631\u0645\u0648\u0631\u062f \u0627\u06cc\u0646 \u0645\u0642\u0627\u06cc\u0633\u0647 \u067e\u06cc\u0634\u0646\u0647\u0627\u062f \u0648 \u06cc\u0627 \u0627\u0646\u062a\u0642\u0627\u062f\u06cc \u062f\u0627\u0634\u062a\u06cc\u062f\u060c \u062d\u062a\u0645\u0627 \u0628\u0627 \u0645\u0627 \u0645\u0637\u0631\u062d \u06a9\u0646\u06cc\u062f. \u067e\u0627\u06cc\u06cc\u0646 \u0635\u0641\u062d\u0647 \u0634\u0645\u0627\u0631\u0647 \u0645\u0627 \u0647\u0633\u062a."
                  }
                </div>
              </div>
              <div
                data-plasmic-name={"cta"}
                data-plasmic-override={overrides.cta}
                className={classNames(projectcss.all, sty.cta)}
              >
                <div
                  data-plasmic-name={"ctaText"}
                  data-plasmic-override={overrides.ctaText}
                  className={classNames(projectcss.all, sty.ctaText)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vzhiP
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "\u0627\u06af\u0647 \u0645\u06cc\u200c\u062e\u0648\u0627\u06cc \u0628\u0631\u0627\u06cc \u0631\u0634\u062f \u06af\u0631\u062f\u0634\u06af\u0631\u06cc \u06a9\u0634\u0648\u0631 \u062c\u062f\u06cc \u0641\u0639\u0627\u0644\u06cc\u062a \u06a9\u0646\u06cc\u060c \u0628\u0647 \u062c\u0645\u0639 \u0628\u0632\u0631\u06af \u0631\u0646\u062a\u0627\u0645\u0648\u0646\u06cc\u200c\u0647\u0627 \u0628\u067e\u06cc\u0648\u0646\u062f"
                      : "\u0627\u06af\u0647 \u0645\u06cc\u200c\u062e\u0648\u0627\u06cc \u0628\u0631\u0627\u06cc \u0631\u0634\u062f \u06af\u0631\u062f\u0634\u06af\u0631\u06cc \u06a9\u0634\u0648\u0631 \u062c\u062f\u06cc \u0641\u0639\u0627\u0644\u06cc\u062a \u06a9\u0646\u06cc\u060c \u0628\u0647 \u062c\u0645\u0639 \u0628\u0632\u0631\u06af \u0631\u0646\u062a\u0627\u0645\u0648\u0646\u06cc\u200c\u0647\u0627 \u0628\u067e\u06cc\u0648\u0646\u062f"}
                  </div>
                </div>
                <div
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  className={classNames(projectcss.all, sty.button)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vYRdE,
                      "clickable"
                    )}
                    onClick={async event => {
                      const $steps = {};

                      $steps["goToثبتآگهیاقامتگاه"] = true
                        ? (() => {
                            const actionArgs = {
                              destination: `/list-your-property`
                            };
                            return (({ destination }) => {
                              if (
                                typeof destination === "string" &&
                                destination.startsWith("#")
                              ) {
                                document
                                  .getElementById(destination.substr(1))
                                  .scrollIntoView({ behavior: "smooth" });
                              } else {
                                __nextRouter?.push(destination);
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["goToثبتآگهیاقامتگاه"] != null &&
                        typeof $steps["goToثبتآگهیاقامتگاه"] === "object" &&
                        typeof $steps["goToثبتآگهیاقامتگاه"].then === "function"
                      ) {
                        $steps["goToثبتآگهیاقامتگاه"] = await $steps[
                          "goToثبتآگهیاقامتگاه"
                        ];
                      }
                    }}
                  >
                    {
                      "\u062b\u0628\u062a \u0631\u0627\u06cc\u06af\u0627\u0646 \u0622\u06af\u0647\u06cc \u0627\u0642\u0627\u0645\u062a\u06af\u0627\u0647"
                    }
                  </div>
                </div>
              </div>
            </div>
          </div>
          <RentamonFooter
            data-plasmic-name={"rentamonFooter"}
            data-plasmic-override={overrides.rentamonFooter}
            className={classNames("__wab_instance", sty.rentamonFooter)}
          />

          <div className={classNames(projectcss.all, sty.freeBox___5Upoz)}>
            <ClarityRntComponent
              data-plasmic-name={"clarityRntComponent"}
              data-plasmic-override={overrides.clarityRntComponent}
              className={classNames("__wab_instance", sty.clarityRntComponent)}
            />

            <FaviconRntComponent
              data-plasmic-name={"faviconRntComponent"}
              data-plasmic-override={overrides.faviconRntComponent}
              className={classNames("__wab_instance", sty.faviconRntComponent)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  content: [
    "content",
    "navbarRntHeader",
    "mainContents",
    "intro",
    "introTitle",
    "introDesc",
    "str",
    "strDefinition",
    "titlesRow",
    "titlesRow3",
    "strDefinition2",
    "ul",
    "strDefinition4",
    "titlesRow4",
    "titlesRow5",
    "strDefinition3",
    "strDefinition5",
    "titlesRow6",
    "titlesRow7",
    "support",
    "supportText",
    "outlines",
    "bot",
    "more",
    "certificates",
    "iamges",
    "relatedContents",
    "neighbours",
    "benefitsTitle2",
    "benefitsCaption2",
    "cta",
    "ctaText",
    "button",
    "rentamonFooter",
    "clarityRntComponent",
    "faviconRntComponent"
  ],
  navbarRntHeader: ["navbarRntHeader"],
  mainContents: [
    "mainContents",
    "intro",
    "introTitle",
    "introDesc",
    "str",
    "strDefinition",
    "titlesRow",
    "titlesRow3",
    "strDefinition2",
    "ul",
    "strDefinition4",
    "titlesRow4",
    "titlesRow5",
    "strDefinition3",
    "strDefinition5",
    "titlesRow6",
    "titlesRow7",
    "support",
    "supportText",
    "outlines",
    "bot",
    "more",
    "certificates",
    "iamges",
    "relatedContents",
    "neighbours",
    "benefitsTitle2",
    "benefitsCaption2",
    "cta",
    "ctaText",
    "button"
  ],
  intro: [
    "intro",
    "introTitle",
    "introDesc",
    "str",
    "strDefinition",
    "titlesRow",
    "titlesRow3"
  ],
  introTitle: ["introTitle"],
  introDesc: ["introDesc"],
  str: ["str", "strDefinition", "titlesRow", "titlesRow3"],
  strDefinition: ["strDefinition", "titlesRow", "titlesRow3"],
  titlesRow: ["titlesRow"],
  titlesRow3: ["titlesRow3"],
  strDefinition2: [
    "strDefinition2",
    "ul",
    "strDefinition4",
    "titlesRow4",
    "titlesRow5"
  ],
  ul: ["ul"],
  strDefinition4: ["strDefinition4", "titlesRow4", "titlesRow5"],
  titlesRow4: ["titlesRow4"],
  titlesRow5: ["titlesRow5"],
  strDefinition3: [
    "strDefinition3",
    "strDefinition5",
    "titlesRow6",
    "titlesRow7"
  ],
  strDefinition5: ["strDefinition5", "titlesRow6", "titlesRow7"],
  titlesRow6: ["titlesRow6"],
  titlesRow7: ["titlesRow7"],
  support: ["support", "supportText", "outlines"],
  supportText: ["supportText"],
  outlines: ["outlines"],
  bot: [
    "bot",
    "more",
    "certificates",
    "iamges",
    "relatedContents",
    "neighbours",
    "benefitsTitle2",
    "benefitsCaption2",
    "cta",
    "ctaText",
    "button"
  ],
  more: ["more", "certificates", "iamges"],
  certificates: ["certificates"],
  iamges: ["iamges"],
  relatedContents: ["relatedContents"],
  neighbours: ["neighbours", "benefitsTitle2", "benefitsCaption2"],
  benefitsTitle2: ["benefitsTitle2"],
  benefitsCaption2: ["benefitsCaption2"],
  cta: ["cta", "ctaText", "button"],
  ctaText: ["ctaText"],
  button: ["button"],
  rentamonFooter: ["rentamonFooter"],
  clarityRntComponent: ["clarityRntComponent"],
  faviconRntComponent: ["faviconRntComponent"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  content: "div";
  navbarRntHeader: typeof NavbarRntHeader;
  mainContents: "div";
  intro: "div";
  introTitle: "div";
  introDesc: "div";
  str: "div";
  strDefinition: "div";
  titlesRow: "div";
  titlesRow3: "div";
  strDefinition2: "div";
  ul: "ul";
  strDefinition4: "div";
  titlesRow4: "div";
  titlesRow5: "div";
  strDefinition3: "div";
  strDefinition5: "div";
  titlesRow6: "div";
  titlesRow7: "div";
  support: "div";
  supportText: "div";
  outlines: "div";
  bot: "div";
  more: "div";
  certificates: "div";
  iamges: "div";
  relatedContents: "div";
  neighbours: "div";
  benefitsTitle2: "div";
  benefitsCaption2: "div";
  cta: "div";
  ctaText: "div";
  button: "div";
  rentamonFooter: typeof RentamonFooter;
  clarityRntComponent: typeof ClarityRntComponent;
  faviconRntComponent: typeof FaviconRntComponent;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmicمقایسهبهترینسایتاجارهویلا__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmicمقایسهبهترینسایتاجارهویلا__VariantsArgs;
    args?: Plasmicمقایسهبهترینسایتاجارهویلا__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmicمقایسهبهترینسایتاجارهویلا__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<Plasmicمقایسهبهترینسایتاجارهویلا__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: Plasmicمقایسهبهترینسایتاجارهویلا__ArgProps,
          internalVariantPropNames:
            Plasmicمقایسهبهترینسایتاجارهویلا__VariantProps
        }),
      [props, nodeName]
    );
    return Plasmicمقایسهبهترینسایتاجارهویلا__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "content") {
    func.displayName =
      "Plasmic\u0645\u0642\u0627\u06cc\u0633\u0647\u0628\u0647\u062a\u0631\u06cc\u0646\u0633\u0627\u06cc\u062a\u0627\u062c\u0627\u0631\u0647\u0648\u06cc\u0644\u0627";
  } else {
    func.displayName = `Plasmicمقایسهبهترینسایتاجارهویلا.${nodeName}`;
  }
  return func;
}

export const Plasmicمقایسهبهترینسایتاجارهویلا = Object.assign(
  // Top-level Plasmicمقایسهبهترینسایتاجارهویلا renders the root element
  makeNodeComponent("content"),
  {
    // Helper components rendering sub-elements
    navbarRntHeader: makeNodeComponent("navbarRntHeader"),
    mainContents: makeNodeComponent("mainContents"),
    intro: makeNodeComponent("intro"),
    introTitle: makeNodeComponent("introTitle"),
    introDesc: makeNodeComponent("introDesc"),
    str: makeNodeComponent("str"),
    strDefinition: makeNodeComponent("strDefinition"),
    titlesRow: makeNodeComponent("titlesRow"),
    titlesRow3: makeNodeComponent("titlesRow3"),
    strDefinition2: makeNodeComponent("strDefinition2"),
    ul: makeNodeComponent("ul"),
    strDefinition4: makeNodeComponent("strDefinition4"),
    titlesRow4: makeNodeComponent("titlesRow4"),
    titlesRow5: makeNodeComponent("titlesRow5"),
    strDefinition3: makeNodeComponent("strDefinition3"),
    strDefinition5: makeNodeComponent("strDefinition5"),
    titlesRow6: makeNodeComponent("titlesRow6"),
    titlesRow7: makeNodeComponent("titlesRow7"),
    support: makeNodeComponent("support"),
    supportText: makeNodeComponent("supportText"),
    outlines: makeNodeComponent("outlines"),
    bot: makeNodeComponent("bot"),
    more: makeNodeComponent("more"),
    certificates: makeNodeComponent("certificates"),
    iamges: makeNodeComponent("iamges"),
    relatedContents: makeNodeComponent("relatedContents"),
    neighbours: makeNodeComponent("neighbours"),
    benefitsTitle2: makeNodeComponent("benefitsTitle2"),
    benefitsCaption2: makeNodeComponent("benefitsCaption2"),
    cta: makeNodeComponent("cta"),
    ctaText: makeNodeComponent("ctaText"),
    button: makeNodeComponent("button"),
    rentamonFooter: makeNodeComponent("rentamonFooter"),
    clarityRntComponent: makeNodeComponent("clarityRntComponent"),
    faviconRntComponent: makeNodeComponent("faviconRntComponent"),

    // Metadata about props expected for Plasmicمقایسهبهترینسایتاجارهویلا
    internalVariantProps: Plasmicمقایسهبهترینسایتاجارهویلا__VariantProps,
    internalArgProps: Plasmicمقایسهبهترینسایتاجارهویلا__ArgProps,

    // Key-value metadata
    metadata: {
      metaKeywords:
        "\u0645\u0642\u0627\u06cc\u0633\u0647 \u0645\u06cc\u0632\u0627\u0646 \u06a9\u0627\u0631\u0645\u0632\u062f\u060c \u06a9\u06cc\u0641\u06cc\u062a \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0648 \u062f\u0631\u0622\u0645\u062f \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u062c\u0627\u0628\u0627\u0645\u0627\u060c \u062c\u0627\u062c\u06cc\u06af\u0627\u060c \u0634\u0628\u060c \u0627\u062a\u0627\u0642\u06a9 \u0648...",
      ogType: "article",
      ogTitle:
        "\u0645\u0642\u0627\u06cc\u0633\u0647 \u0628\u0647\u062a\u0631\u06cc\u0646 \u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0648\u06cc\u0644\u0627 \u0627\u06cc\u0631\u0627\u0646 \u0627\u0632 \u0646\u0638\u0631 \u06a9\u0627\u0631\u0645\u0632\u062f\u060c \u062f\u0631\u0622\u0645\u062f\u0632\u0627\u06cc\u06cc\u060c \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0648...",
      ogDescription:
        "\u062f\u0631 \u0627\u06cc\u0646 \u0645\u0637\u0644\u0628 \u0628\u0647 \u0645\u0642\u0627\u06cc\u0633\u0647 \u0648 \u0628\u0631\u0631\u0633\u06cc \u062c\u0627\u0645\u0639 \u0628\u0647\u062a\u0631\u06cc\u0646 \u0648\u0628\u200c\u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0648\u06cc\u0644\u0627 \u062f\u0631 \u0627\u06cc\u0631\u0627\u0646 \u0645\u06cc\u200c\u067e\u0631\u062f\u0627\u0632\u06cc\u0645\u061b \u0627\u0632 \u0627\u0645\u06a9\u0627\u0646\u0627\u062a \u0648 \u06a9\u0627\u0631\u0645\u0632\u062f \u062a\u0627 \u06a9\u06cc\u0641\u06cc\u062a \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0648 \u0634\u0631\u0627\u06cc\u0637 \u0644\u063a\u0648 \u0631\u0632\u0631\u0648.",
      ogUrl: "https://rentamon.com/best-villa-rental-sites/",
      ogImageAlt:
        "\u062c\u062f\u0648\u0644 \u0645\u0642\u0627\u06cc\u0633\u0647 \u0628\u0647\u062a\u0631\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647/\u0633\u0627\u06cc\u062a\u200c\u0647\u0627\u06cc \u0627\u062c\u0627\u0631\u0647 \u0648\u06cc\u0644\u0627 \u0627\u06cc\u0631\u0627\u0646"
    },

    // Page metadata
    pageMetadata: {
      title: "مقایسه بهترین سایت‌های اجاره ویلا",
      description:
        "مقایسه میزان کارمزد، کیفیت پشتیبانی و درآمد سایت‌های جاباما، جاجیگا، شب، اتاقک و...",
      ogImageSrc:
        "https://site-assets.plasmic.app/cc7ae424dd4a99449087afa68e7f3dd1.jpg",
      canonical: ""
    }
  }
);

export default Plasmicمقایسهبهترینسایتاجارهویلا;
/* prettier-ignore-end */
